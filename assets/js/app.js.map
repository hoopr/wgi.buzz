{"version":3,"sources":["utils.js","nouislider/nouislider.js","underscore/underscore.js","d3/d3.js","d3/d3bullet.js"],"names":["currencyFormat","number","decimalplaces","decimalcharacter","thousandseparater","parseFloat","sign","formatted","String","toFixed","length","replace","integer","fraction","strnumber","dotpos","indexOf","substr","Math","abs","temparray","Array","unshift","join","createNumber","currencyString","createDate","dateString","format","d3","time","parse","createString","date","factory","define","amd","exports","fs","require","module","css","readFileSync","__dirname","window","noUiSlider","unique","array","filter","a","this","closest","value","to","round","offset","elem","rect","getBoundingClientRect","doc","ownerDocument","win","defaultView","parentWindow","docElem","documentElement","xOff","pageXOffset","test","navigator","userAgent","top","pageYOffset","clientTop","left","clientLeft","isNumeric","isNaN","isFinite","accurateNumber","p","pow","Number","addClassFor","element","className","duration","addClass","setTimeout","removeClass","limit","max","min","asArray","isArray","countDecimals","numStr","pieces","split","el","classList","add","remove","RegExp","hasClass","contains","subRangeRatio","pa","pb","fromPercentage","range","toPercentage","isPercentage","getJ","arr","j","toStepping","xVal","xPct","slice","va","vb","fromStepping","getStep","xSteps","snap","b","handleEntryPoint","index","that","percentage","Object","prototype","toString","call","Error","push","handleStepPoint","i","n","Spectrum","entry","direction","singleStep","xNumSteps","ordered","hasOwnProperty","sort","testStep","parsed","testRange","undefined","spectrum","dir","testStart","handles","start","testSnap","testAnimate","animate","testConnect","connect","testOrientation","ort","testMargin","margin","getMargin","testLimit","testDirection","testBehaviour","tap","drag","fixed","events","testFormat","from","testOptions","options","tests","defaultFormatter","step","r","t","orientation","behaviour","defaults","keys","forEach","name","pips","style","getPositions","delimit","c","d","fixEvent","e","preventDefault","x","y","touch","type","mouse","pointer","event","changedTouches","pageX","pageY","clientX","clientY","points","cursor","addHandle","origin","document","createElement","handle","additions","reverse","Classes","appendChild","addConnection","target","addHandles","nrHandles","base","addSlider","div","closure","getGroup","mode","values","stepped","scope_Spectrum","v","spread","map","generateSpread","density","group","originalSpectrumDirection","indexes","firstInRange","lastInRange","ignoreFirst","ignoreLast","prevPct","current","q","newPct","pctDifference","pctPos","steps","realSteps","stepsize","low","high","addMarking","filterFunc","formatter","getSize","getTags","source","addSpread","innerHTML","grid","scope_Target","baseSize","scope_Base","fireEvent","handleNumber","scope_Events","targetEvent","eventType","callback","valueGet","inSliderOrder","scope_Values","attach","data","method","hasAttribute","actions","buttons","calcPoint","methods","eventName","addEventListener","move","positions","scope_Handles","state","proposal","setHandle","end","active","getElementsByClassName","body","removeEventListener","noUiListener","noUiListeners","children","stopPropagation","moveEvent","scope_Locations","endEvent","concat","getComputedStyle","f","location","total","noLimitOption","trigger","lowerMargin","upperMargin","lowerLimit","upperLimit","previousSibling","setValues","count","valueSet","input","retour","destroy","cls","getCurrentStep","getApplicableStep","stepDecimals","increment","prev","decrement","bindEvent","namespacedEvent","removeEvent","namespace","substring","bind","tEvent","tNamespace","on","off","get","set","initialize","originalOptions","nodeName","slider","pointerEnabled","msPointerEnabled","convert","create","createReduce","iterator","obj","iteratee","memo","currentKey","context","optimizeCb","isArrayLike","_","arguments","createPredicateIndexFinder","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","ObjProto","prop","has","root","previousUnderscore","ArrayProto","FuncProto","Function","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","VERSION","func","argCount","other","collection","accumulator","apply","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","l","key","baseCreate","result","MAX_ARRAY_INDEX","each","collect","results","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","invoke","args","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","shuffled","random","sample","sortBy","criteria","right","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","shallow","strict","startIndex","output","isArguments","len","without","difference","uniq","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","mid","floor","lastIndexOf","stop","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","partial","boundArgs","position","bindAll","memoize","hasher","cache","address","delay","wait","defer","throttle","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","names","extend","extendOwn","assign","pick","oiteratee","omit","props","clone","interceptor","isMatch","eq","aStack","bStack","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","Int8Array","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","testRegexp","replaceRegexp","string","escape","unescape","fallback","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","variable","render","argument","chain","instance","_chain","mixin","valueOf","toJSON","d3_documentElement","node","d3_window","d3_ascending","NaN","d3_number","d3_numeric","d3_bisector","compare","lo","hi","d3_zipLength","d3_range_integerScale","k","d3_class","ctor","properties","defineProperty","enumerable","d3_Map","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","z","listeners","listenerByName","listener","d3_eventPreventDefault","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","d3_selection_classedRe","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","getAttribute","lastIndex","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespaceURI","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","m","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","$","onAdd","d3_array","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","d3_mousePoint","container","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","padding","border","ctm","getScreenCTM","matrixTransform","inverse","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","hsl","color","exec","toLowerCase","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","d3_timer_mark","d3_timer_sweep","d3_timer_timeout","d3_timer_interval","d3_timer_frame","d3_timer_active","d3_timer_queueHead","t0","t1","d3_timer_queueTail","d3_format_precision","log","LN10","d3_formatPrefix","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","specifier","d3_format_re","fill","align","zfill","comma","precision","suffix","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","d3_date_utc","UTC","d3_time_interval","d0","d1","d3_date","dt","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","charCodeAt","d3_time_formatPads","d3_time_formats","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","P","next","N","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","fm","fb","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","rangeBand","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","createContextualFragment","version","d3_arraySlice","childNodes","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","permute","permutes","zips","transpose","matrix","entries","arrays","merged","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","classed","getPropertyValue","html","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","upgroup","mouseenter","mouseleave","touches","mousedown","touchstart","dragstart","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","bulletRanges","bulletMarkers","markers","bulletMeasures","measures","bulletTranslate","bulletWidth","bullet","rangez","markerz","measurez","height","measure","vizTooltip","formatMoney","tooltipWidth","tooltipHeight","marker"],"mappings":"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","file":"app.js","sourcesContent":["/* =======================================================================\n   Utilities\n   ======================================================================= */\n\n/* Functions\n======================================================================= */\n\n/**\n * Helper function to convert number to currency (comes out as $x.xx)\n */\nfunction currencyFormat(number) {\n  var decimalplaces = 2;\n  var decimalcharacter = \".\";\n  var thousandseparater = \",\";\n  number = parseFloat(number);\n  var sign = number < 0 ? \"-\" : \"\";\n  var formatted = new String(number.toFixed(decimalplaces));\n  if( decimalcharacter.length && decimalcharacter != \".\" ) { formatted = formatted.replace(/\\./,decimalcharacter); }\n  var integer = \"\";\n  var fraction = \"\";\n  var strnumber = new String(formatted);\n  var dotpos = decimalcharacter.length ? strnumber.indexOf(decimalcharacter) : -1;\n  if( dotpos > -1 )\n  {\n    if( dotpos ) { integer = strnumber.substr(0,dotpos); }\n    fraction = strnumber.substr(dotpos+1);\n  }\n  else { integer = strnumber; }\n  if( integer ) { integer = String(Math.abs(integer)); }\n  while( fraction.length < decimalplaces ) { fraction += \"0\"; }\n  temparray = new Array();\n  while( integer.length > 3 )\n  {\n    temparray.unshift(integer.substr(-3));\n    integer = integer.substr(0,integer.length-3);\n  }\n  temparray.unshift(integer);\n  integer = temparray.join(thousandseparater);\n  return sign + '$' + integer + decimalcharacter + fraction;\n}\n\n/**\n * Helper function to convert currency to number\n */\nfunction createNumber(currencyString) {\n  return parseFloat(currencyString.replace(/(\\$|,)/g, ''));\n}\n\n/**\n * Helper function to convert string to date\n */\nfunction createDate(dateString) {\n  var format = d3.time.format(\"%-m/%-d/%Y\");\n  return format.parse(dateString);\n};\n\n/**\n * Helper function to convert date to string\n */\nfunction createString(date) {\n  var format = d3.time.format(\"%-m/%-d/%Y\");\n  return format(date)\n};\n","/*! nouislider - 8.0.2 - 2015-07-06 13:22:09 */\r\n\r\n/*jslint browser: true */\r\n/*jslint white: true */\r\n\r\n(function (factory) {\r\n\r\n    if ( typeof define === 'function' && define.amd ) {\r\n\r\n        // AMD. Register as an anonymous module.\r\n        define([], factory);\r\n\r\n    } else if ( typeof exports === 'object' ) {\r\n\r\n        var fs = require('fs');\r\n\r\n        // Node/CommonJS\r\n        module.exports = factory();\r\n        module.exports.css = function () {\r\n            return fs.readFileSync(__dirname + '/nouislider.min.css', 'utf8');\r\n        };\r\n\r\n    } else {\r\n\r\n        // Browser globals\r\n        window.noUiSlider = factory();\r\n    }\r\n\r\n}(function( ){\r\n\r\n\t'use strict';\r\n\r\n\r\n\t// Removes duplicates from an array.\r\n\tfunction unique(array) {\r\n\t\treturn array.filter(function(a){\r\n\t\t\treturn !this[a] ? this[a] = true : false;\r\n\t\t}, {});\r\n\t}\r\n\r\n\t// Round a value to the closest 'to'.\r\n\tfunction closest ( value, to ) {\r\n\t\treturn Math.round(value / to) * to;\r\n\t}\r\n\r\n\t// Current position of an element relative to the document.\r\n\tfunction offset ( elem ) {\r\n\r\n\tvar rect = elem.getBoundingClientRect(),\r\n\t\tdoc = elem.ownerDocument,\r\n\t\twin = doc.defaultView || doc.parentWindow,\r\n\t\tdocElem = doc.documentElement,\r\n\t\txOff = win.pageXOffset;\r\n\r\n\t\t// getBoundingClientRect contains left scroll in Chrome on Android.\r\n\t\t// I haven't found a feature detection that proves this. Worst case\r\n\t\t// scenario on mis-match: the 'tap' feature on horizontal sliders breaks.\r\n\t\tif ( /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) ) {\r\n\t\t\txOff = 0;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: rect.top + win.pageYOffset - docElem.clientTop,\r\n\t\t\tleft: rect.left + xOff - docElem.clientLeft\r\n\t\t};\r\n\t}\r\n\r\n\t// Checks whether a value is numerical.\r\n\tfunction isNumeric ( a ) {\r\n\t\treturn typeof a === 'number' && !isNaN( a ) && isFinite( a );\r\n\t}\r\n\r\n\t// Rounds a number to 7 supported decimals.\r\n\tfunction accurateNumber( number ) {\r\n\t\tvar p = Math.pow(10, 7);\r\n\t\treturn Number((Math.round(number*p)/p).toFixed(7));\r\n\t}\r\n\r\n\t// Sets a class and removes it after [duration] ms.\r\n\tfunction addClassFor ( element, className, duration ) {\r\n\t\taddClass(element, className);\r\n\t\tsetTimeout(function(){\r\n\t\t\tremoveClass(element, className);\r\n\t\t}, duration);\r\n\t}\r\n\r\n\t// Limits a value to 0 - 100\r\n\tfunction limit ( a ) {\r\n\t\treturn Math.max(Math.min(a, 100), 0);\r\n\t}\r\n\r\n\t// Wraps a variable as an array, if it isn't one yet.\r\n\tfunction asArray ( a ) {\r\n\t\treturn Array.isArray(a) ? a : [a];\r\n\t}\r\n\r\n\t// Counts decimals\r\n\tfunction countDecimals ( numStr ) {\r\n\t\tvar pieces = numStr.split(\".\");\r\n\t\treturn pieces.length > 1 ? pieces[1].length : 0;\r\n\t}\r\n\r\n\t// http://youmightnotneedjquery.com/#add_class\r\n\tfunction addClass ( el, className ) {\r\n\t\tif ( el.classList ) {\r\n\t\t\tel.classList.add(className);\r\n\t\t} else {\r\n\t\t\tel.className += ' ' + className;\r\n\t\t}\r\n\t}\r\n\r\n\t// http://youmightnotneedjquery.com/#remove_class\r\n\tfunction removeClass ( el, className ) {\r\n\t\tif ( el.classList ) {\r\n\t\t\tel.classList.remove(className);\r\n\t\t} else {\r\n\t\t\tel.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n\t\t}\r\n\t}\r\n\r\n\t// http://youmightnotneedjquery.com/#has_class\r\n\tfunction hasClass ( el, className ) {\r\n\t\tif ( el.classList ) {\r\n\t\t\tel.classList.contains(className);\r\n\t\t} else {\r\n\t\t\tnew RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tvar\r\n\t// Determine the events to bind. IE11 implements pointerEvents without\r\n\t// a prefix, which breaks compatibility with the IE10 implementation.\r\n\t/** @const */\r\n\tactions = window.navigator.pointerEnabled ? {\r\n\t\tstart: 'pointerdown',\r\n\t\tmove: 'pointermove',\r\n\t\tend: 'pointerup'\r\n\t} : window.navigator.msPointerEnabled ? {\r\n\t\tstart: 'MSPointerDown',\r\n\t\tmove: 'MSPointerMove',\r\n\t\tend: 'MSPointerUp'\r\n\t} : {\r\n\t\tstart: 'mousedown touchstart',\r\n\t\tmove: 'mousemove touchmove',\r\n\t\tend: 'mouseup touchend'\r\n\t},\r\n\t// Re-usable list of classes;\r\n\t/** @const */\r\n\tClasses = [\r\n/*  0 */  'noUi-target'\r\n/*  1 */ ,'noUi-base'\r\n/*  2 */ ,'noUi-origin'\r\n/*  3 */ ,'noUi-handle'\r\n/*  4 */ ,'noUi-horizontal'\r\n/*  5 */ ,'noUi-vertical'\r\n/*  6 */ ,'noUi-background'\r\n/*  7 */ ,'noUi-connect'\r\n/*  8 */ ,'noUi-ltr'\r\n/*  9 */ ,'noUi-rtl'\r\n/* 10 */ ,'noUi-dragable'\r\n/* 11 */ ,''\r\n/* 12 */ ,'noUi-state-drag'\r\n/* 13 */ ,''\r\n/* 14 */ ,'noUi-state-tap'\r\n/* 15 */ ,'noUi-active'\r\n/* 16 */ ,''\r\n/* 17 */ ,'noUi-stacking'\r\n\t];\r\n\r\n\r\n// Value calculation\r\n\r\n\t// Determine the size of a sub-range in relation to a full range.\r\n\tfunction subRangeRatio ( pa, pb ) {\r\n\t\treturn (100 / (pb - pa));\r\n\t}\r\n\r\n\t// (percentage) How many percent is this value of this range?\r\n\tfunction fromPercentage ( range, value ) {\r\n\t\treturn (value * 100) / ( range[1] - range[0] );\r\n\t}\r\n\r\n\t// (percentage) Where is this value on this range?\r\n\tfunction toPercentage ( range, value ) {\r\n\t\treturn fromPercentage( range, range[0] < 0 ?\r\n\t\t\tvalue + Math.abs(range[0]) :\r\n\t\t\t\tvalue - range[0] );\r\n\t}\r\n\r\n\t// (value) How much is this percentage on this range?\r\n\tfunction isPercentage ( range, value ) {\r\n\t\treturn ((value * ( range[1] - range[0] )) / 100) + range[0];\r\n\t}\r\n\r\n\r\n// Range conversion\r\n\r\n\tfunction getJ ( value, arr ) {\r\n\r\n\t\tvar j = 1;\r\n\r\n\t\twhile ( value >= arr[j] ){\r\n\t\t\tj += 1;\r\n\t\t}\r\n\r\n\t\treturn j;\r\n\t}\r\n\r\n\t// (percentage) Input a value, find where, on a scale of 0-100, it applies.\r\n\tfunction toStepping ( xVal, xPct, value ) {\r\n\r\n\t\tif ( value >= xVal.slice(-1)[0] ){\r\n\t\t\treturn 100;\r\n\t\t}\r\n\r\n\t\tvar j = getJ( value, xVal ), va, vb, pa, pb;\r\n\r\n\t\tva = xVal[j-1];\r\n\t\tvb = xVal[j];\r\n\t\tpa = xPct[j-1];\r\n\t\tpb = xPct[j];\r\n\r\n\t\treturn pa + (toPercentage([va, vb], value) / subRangeRatio (pa, pb));\r\n\t}\r\n\r\n\t// (value) Input a percentage, find where it is on the specified range.\r\n\tfunction fromStepping ( xVal, xPct, value ) {\r\n\r\n\t\t// There is no range group that fits 100\r\n\t\tif ( value >= 100 ){\r\n\t\t\treturn xVal.slice(-1)[0];\r\n\t\t}\r\n\r\n\t\tvar j = getJ( value, xPct ), va, vb, pa, pb;\r\n\r\n\t\tva = xVal[j-1];\r\n\t\tvb = xVal[j];\r\n\t\tpa = xPct[j-1];\r\n\t\tpb = xPct[j];\r\n\r\n\t\treturn isPercentage([va, vb], (value - pa) * subRangeRatio (pa, pb));\r\n\t}\r\n\r\n\t// (percentage) Get the step that applies at a certain value.\r\n\tfunction getStep ( xPct, xSteps, snap, value ) {\r\n\r\n\t\tif ( value === 100 ) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tvar j = getJ( value, xPct ), a, b;\r\n\r\n\t\t// If 'snap' is set, steps are used as fixed points on the slider.\r\n\t\tif ( snap ) {\r\n\r\n\t\t\ta = xPct[j-1];\r\n\t\t\tb = xPct[j];\r\n\r\n\t\t\t// Find the closest position, a or b.\r\n\t\t\tif ((value - a) > ((b-a)/2)){\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\t\t}\r\n\r\n\t\tif ( !xSteps[j-1] ){\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\treturn xPct[j-1] + closest(\r\n\t\t\tvalue - xPct[j-1],\r\n\t\t\txSteps[j-1]\r\n\t\t);\r\n\t}\r\n\r\n\r\n// Entry parsing\r\n\r\n\tfunction handleEntryPoint ( index, value, that ) {\r\n\r\n\t\tvar percentage;\r\n\r\n\t\t// Wrap numerical input in an array.\r\n\t\tif ( typeof value === \"number\" ) {\r\n\t\t\tvalue = [value];\r\n\t\t}\r\n\r\n\t\t// Reject any invalid input, by testing whether value is an array.\r\n\t\tif ( Object.prototype.toString.call( value ) !== '[object Array]' ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'range' contains invalid value.\");\r\n\t\t}\r\n\r\n\t\t// Covert min/max syntax to 0 and 100.\r\n\t\tif ( index === 'min' ) {\r\n\t\t\tpercentage = 0;\r\n\t\t} else if ( index === 'max' ) {\r\n\t\t\tpercentage = 100;\r\n\t\t} else {\r\n\t\t\tpercentage = parseFloat( index );\r\n\t\t}\r\n\r\n\t\t// Check for correct input.\r\n\t\tif ( !isNumeric( percentage ) || !isNumeric( value[0] ) ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'range' value isn't numeric.\");\r\n\t\t}\r\n\r\n\t\t// Store values.\r\n\t\tthat.xPct.push( percentage );\r\n\t\tthat.xVal.push( value[0] );\r\n\r\n\t\t// NaN will evaluate to false too, but to keep\r\n\t\t// logging clear, set step explicitly. Make sure\r\n\t\t// not to override the 'step' setting with false.\r\n\t\tif ( !percentage ) {\r\n\t\t\tif ( !isNaN( value[1] ) ) {\r\n\t\t\t\tthat.xSteps[0] = value[1];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthat.xSteps.push( isNaN(value[1]) ? false : value[1] );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleStepPoint ( i, n, that ) {\r\n\r\n\t\t// Ignore 'false' stepping.\r\n\t\tif ( !n ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Factor to range ratio\r\n\t\tthat.xSteps[i] = fromPercentage([\r\n\t\t\t that.xVal[i]\r\n\t\t\t,that.xVal[i+1]\r\n\t\t], n) / subRangeRatio (\r\n\t\t\tthat.xPct[i],\r\n\t\t\tthat.xPct[i+1] );\r\n\t}\r\n\r\n\r\n// Interface\r\n\r\n\t// The interface to Spectrum handles all direction-based\r\n\t// conversions, so the above values are unaware.\r\n\r\n\tfunction Spectrum ( entry, snap, direction, singleStep ) {\r\n\r\n\t\tthis.xPct = [];\r\n\t\tthis.xVal = [];\r\n\t\tthis.xSteps = [ singleStep || false ];\r\n\t\tthis.xNumSteps = [ false ];\r\n\r\n\t\tthis.snap = snap;\r\n\t\tthis.direction = direction;\r\n\r\n\t\tvar index, ordered = [ /* [0, 'min'], [1, '50%'], [2, 'max'] */ ];\r\n\r\n\t\t// Map the object keys to an array.\r\n\t\tfor ( index in entry ) {\r\n\t\t\tif ( entry.hasOwnProperty(index) ) {\r\n\t\t\t\tordered.push([entry[index], index]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Sort all entries by value (numeric sort).\r\n\t\tordered.sort(function(a, b) { return a[0] - b[0]; });\r\n\r\n\t\t// Convert all entries to subranges.\r\n\t\tfor ( index = 0; index < ordered.length; index++ ) {\r\n\t\t\thandleEntryPoint(ordered[index][1], ordered[index][0], this);\r\n\t\t}\r\n\r\n\t\t// Store the actual step values.\r\n\t\t// xSteps is sorted in the same order as xPct and xVal.\r\n\t\tthis.xNumSteps = this.xSteps.slice(0);\r\n\r\n\t\t// Convert all numeric steps to the percentage of the subrange they represent.\r\n\t\tfor ( index = 0; index < this.xNumSteps.length; index++ ) {\r\n\t\t\thandleStepPoint(index, this.xNumSteps[index], this);\r\n\t\t}\r\n\t}\r\n\r\n\tSpectrum.prototype.getMargin = function ( value ) {\r\n\t\treturn this.xPct.length === 2 ? fromPercentage(this.xVal, value) : false;\r\n\t};\r\n\r\n\tSpectrum.prototype.toStepping = function ( value ) {\r\n\r\n\t\tvalue = toStepping( this.xVal, this.xPct, value );\r\n\r\n\t\t// Invert the value if this is a right-to-left slider.\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\tSpectrum.prototype.fromStepping = function ( value ) {\r\n\r\n\t\t// Invert the value if this is a right-to-left slider.\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\treturn accurateNumber(fromStepping( this.xVal, this.xPct, value ));\r\n\t};\r\n\r\n\tSpectrum.prototype.getStep = function ( value ) {\r\n\r\n\t\t// Find the proper step for rtl sliders by search in inverse direction.\r\n\t\t// Fixes issue #262.\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\tvalue = getStep(this.xPct, this.xSteps, this.snap, value );\r\n\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\tSpectrum.prototype.getApplicableStep = function ( value ) {\r\n\r\n\t\t// If the value is 100%, return the negative step twice.\r\n\t\tvar j = getJ(value, this.xPct), offset = value === 100 ? 2 : 1;\r\n\t\treturn [this.xNumSteps[j-2], this.xVal[j-offset], this.xNumSteps[j-offset]];\r\n\t};\r\n\r\n\t// Outside testing\r\n\tSpectrum.prototype.convert = function ( value ) {\r\n\t\treturn this.getStep(this.toStepping(value));\r\n\t};\r\n\r\n/*\tEvery input option is tested and parsed. This'll prevent\r\n\tendless validation in internal methods. These tests are\r\n\tstructured with an item for every option available. An\r\n\toption can be marked as required by setting the 'r' flag.\r\n\tThe testing function is provided with three arguments:\r\n\t\t- The provided value for the option;\r\n\t\t- A reference to the options object;\r\n\t\t- The name for the option;\r\n\r\n\tThe testing function returns false when an error is detected,\r\n\tor true when everything is OK. It can also modify the option\r\n\tobject, to make sure all values can be correctly looped elsewhere. */\r\n\r\n\tvar defaultFormatter = { 'to': function( value ){\r\n\t\treturn value.toFixed(2);\r\n\t}, 'from': Number };\r\n\r\n\tfunction testStep ( parsed, entry ) {\r\n\r\n\t\tif ( !isNumeric( entry ) ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'step' is not numeric.\");\r\n\t\t}\r\n\r\n\t\t// The step option can still be used to set stepping\r\n\t\t// for linear sliders. Overwritten if set in 'range'.\r\n\t\tparsed.singleStep = entry;\r\n\t}\r\n\r\n\tfunction testRange ( parsed, entry ) {\r\n\r\n\t\t// Filter incorrect input.\r\n\t\tif ( typeof entry !== 'object' || Array.isArray(entry) ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'range' is not an object.\");\r\n\t\t}\r\n\r\n\t\t// Catch missing start or end.\r\n\t\tif ( entry.min === undefined || entry.max === undefined ) {\r\n\t\t\tthrow new Error(\"noUiSlider: Missing 'min' or 'max' in 'range'.\");\r\n\t\t}\r\n\r\n\t\tparsed.spectrum = new Spectrum(entry, parsed.snap, parsed.dir, parsed.singleStep);\r\n\t}\r\n\r\n\tfunction testStart ( parsed, entry ) {\r\n\r\n\t\tentry = asArray(entry);\r\n\r\n\t\t// Validate input. Values aren't tested, as the public .val method\r\n\t\t// will always provide a valid location.\r\n\t\tif ( !Array.isArray( entry ) || !entry.length || entry.length > 2 ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'start' option is incorrect.\");\r\n\t\t}\r\n\r\n\t\t// Store the number of handles.\r\n\t\tparsed.handles = entry.length;\r\n\r\n\t\t// When the slider is initialized, the .val method will\r\n\t\t// be called with the start options.\r\n\t\tparsed.start = entry;\r\n\t}\r\n\r\n\tfunction testSnap ( parsed, entry ) {\r\n\r\n\t\t// Enforce 100% stepping within subranges.\r\n\t\tparsed.snap = entry;\r\n\r\n\t\tif ( typeof entry !== 'boolean' ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'snap' option must be a boolean.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testAnimate ( parsed, entry ) {\r\n\r\n\t\t// Enforce 100% stepping within subranges.\r\n\t\tparsed.animate = entry;\r\n\r\n\t\tif ( typeof entry !== 'boolean' ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'animate' option must be a boolean.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testConnect ( parsed, entry ) {\r\n\r\n\t\tif ( entry === 'lower' && parsed.handles === 1 ) {\r\n\t\t\tparsed.connect = 1;\r\n\t\t} else if ( entry === 'upper' && parsed.handles === 1 ) {\r\n\t\t\tparsed.connect = 2;\r\n\t\t} else if ( entry === true && parsed.handles === 2 ) {\r\n\t\t\tparsed.connect = 3;\r\n\t\t} else if ( entry === false ) {\r\n\t\t\tparsed.connect = 0;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"noUiSlider: 'connect' option doesn't match handle count.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testOrientation ( parsed, entry ) {\r\n\r\n\t\t// Set orientation to an a numerical value for easy\r\n\t\t// array selection.\r\n\t\tswitch ( entry ){\r\n\t\t  case 'horizontal':\r\n\t\t\tparsed.ort = 0;\r\n\t\t\tbreak;\r\n\t\t  case 'vertical':\r\n\t\t\tparsed.ort = 1;\r\n\t\t\tbreak;\r\n\t\t  default:\r\n\t\t\tthrow new Error(\"noUiSlider: 'orientation' option is invalid.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testMargin ( parsed, entry ) {\r\n\r\n\t\tif ( !isNumeric(entry) ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'margin' option must be numeric.\");\r\n\t\t}\r\n\r\n\t\tparsed.margin = parsed.spectrum.getMargin(entry);\r\n\r\n\t\tif ( !parsed.margin ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'margin' option is only supported on linear sliders.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testLimit ( parsed, entry ) {\r\n\r\n\t\tif ( !isNumeric(entry) ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'limit' option must be numeric.\");\r\n\t\t}\r\n\r\n\t\tparsed.limit = parsed.spectrum.getMargin(entry);\r\n\r\n\t\tif ( !parsed.limit ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'limit' option is only supported on linear sliders.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testDirection ( parsed, entry ) {\r\n\r\n\t\t// Set direction as a numerical value for easy parsing.\r\n\t\t// Invert connection for RTL sliders, so that the proper\r\n\t\t// handles get the connect/background classes.\r\n\t\tswitch ( entry ) {\r\n\t\t  case 'ltr':\r\n\t\t\tparsed.dir = 0;\r\n\t\t\tbreak;\r\n\t\t  case 'rtl':\r\n\t\t\tparsed.dir = 1;\r\n\t\t\tparsed.connect = [0,2,1,3][parsed.connect];\r\n\t\t\tbreak;\r\n\t\t  default:\r\n\t\t\tthrow new Error(\"noUiSlider: 'direction' option was not recognized.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testBehaviour ( parsed, entry ) {\r\n\r\n\t\t// Make sure the input is a string.\r\n\t\tif ( typeof entry !== 'string' ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'behaviour' must be a string containing options.\");\r\n\t\t}\r\n\r\n\t\t// Check if the string contains any keywords.\r\n\t\t// None are required.\r\n\t\tvar tap = entry.indexOf('tap') >= 0,\r\n\t\t\tdrag = entry.indexOf('drag') >= 0,\r\n\t\t\tfixed = entry.indexOf('fixed') >= 0,\r\n\t\t\tsnap = entry.indexOf('snap') >= 0;\r\n\r\n\t\tparsed.events = {\r\n\t\t\ttap: tap || snap,\r\n\t\t\tdrag: drag,\r\n\t\t\tfixed: fixed,\r\n\t\t\tsnap: snap\r\n\t\t};\r\n\t}\r\n\r\n\tfunction testFormat ( parsed, entry ) {\r\n\r\n\t\tparsed.format = entry;\r\n\r\n\t\t// Any object with a to and from method is supported.\r\n\t\tif ( typeof entry.to === 'function' && typeof entry.from === 'function' ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tthrow new Error( \"noUiSlider: 'format' requires 'to' and 'from' methods.\");\r\n\t}\r\n\r\n\t// Test all developer settings and parse to assumption-safe values.\r\n\tfunction testOptions ( options ) {\r\n\r\n\t\tvar parsed = {\r\n\t\t\tmargin: 0,\r\n\t\t\tlimit: 0,\r\n\t\t\tanimate: true,\r\n\t\t\tformat: defaultFormatter\r\n\t\t}, tests;\r\n\r\n\t\t// Tests are executed in the order they are presented here.\r\n\t\ttests = {\r\n\t\t\t'step': { r: false, t: testStep },\r\n\t\t\t'start': { r: true, t: testStart },\r\n\t\t\t'connect': { r: true, t: testConnect },\r\n\t\t\t'direction': { r: true, t: testDirection },\r\n\t\t\t'snap': { r: false, t: testSnap },\r\n\t\t\t'animate': { r: false, t: testAnimate },\r\n\t\t\t'range': { r: true, t: testRange },\r\n\t\t\t'orientation': { r: false, t: testOrientation },\r\n\t\t\t'margin': { r: false, t: testMargin },\r\n\t\t\t'limit': { r: false, t: testLimit },\r\n\t\t\t'behaviour': { r: true, t: testBehaviour },\r\n\t\t\t'format': { r: false, t: testFormat }\r\n\t\t};\r\n\r\n\t\tvar defaults = {\r\n\t\t\t'connect': false,\r\n\t\t\t'direction': 'ltr',\r\n\t\t\t'behaviour': 'tap',\r\n\t\t\t'orientation': 'horizontal'\r\n\t\t};\r\n\r\n\t\t// Set defaults where applicable.\r\n\t\tObject.keys(defaults).forEach(function ( name ) {\r\n\t\t\tif ( options[name] === undefined ) {\r\n\t\t\t\toptions[name] = defaults[name];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Run all options through a testing mechanism to ensure correct\r\n\t\t// input. It should be noted that options might get modified to\r\n\t\t// be handled properly. E.g. wrapping integers in arrays.\r\n\t\tObject.keys(tests).forEach(function( name ){\r\n\r\n\t\t\tvar test = tests[name];\r\n\r\n\t\t\t// If the option isn't set, but it is required, throw an error.\r\n\t\t\tif ( options[name] === undefined ) {\r\n\r\n\t\t\t\tif ( test.r ) {\r\n\t\t\t\t\tthrow new Error(\"noUiSlider: '\" + name + \"' is required.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\ttest.t( parsed, options[name] );\r\n\t\t});\r\n\r\n\t\t// Forward pips options\r\n\t\tparsed.pips = options.pips;\r\n\r\n\t\t// Pre-define the styles.\r\n\t\tparsed.style = parsed.ort ? 'top' : 'left';\r\n\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\r\n\t// Delimit proposed values for handle positions.\r\n\tfunction getPositions ( a, b, delimit ) {\r\n\r\n\t\t// Add movement to current position.\r\n\t\tvar c = a + b[0], d = a + b[1];\r\n\r\n\t\t// Only alter the other position on drag,\r\n\t\t// not on standard sliding.\r\n\t\tif ( delimit ) {\r\n\t\t\tif ( c < 0 ) {\r\n\t\t\t\td += Math.abs(c);\r\n\t\t\t}\r\n\t\t\tif ( d > 100 ) {\r\n\t\t\t\tc -= ( d - 100 );\r\n\t\t\t}\r\n\r\n\t\t\t// Limit values to 0 and 100.\r\n\t\t\treturn [limit(c), limit(d)];\r\n\t\t}\r\n\r\n\t\treturn [c,d];\r\n\t}\r\n\r\n\t// Provide a clean event with standardized offset values.\r\n\tfunction fixEvent ( e ) {\r\n\r\n\t\t// Prevent scrolling and panning on touch events, while\r\n\t\t// attempting to slide. The tap event also depends on this.\r\n\t\te.preventDefault();\r\n\r\n\t\t// Filter the event to register the type, which can be\r\n\t\t// touch, mouse or pointer. Offset changes need to be\r\n\t\t// made on an event specific basis.\r\n\t\tvar touch = e.type.indexOf('touch') === 0,\r\n\t\t\tmouse = e.type.indexOf('mouse') === 0,\r\n\t\t\tpointer = e.type.indexOf('pointer') === 0,\r\n\t\t\tx,y, event = e;\r\n\r\n\t\t// IE10 implemented pointer events with a prefix;\r\n\t\tif ( e.type.indexOf('MSPointer') === 0 ) {\r\n\t\t\tpointer = true;\r\n\t\t}\r\n\r\n\t\tif ( touch ) {\r\n\t\t\t// noUiSlider supports one movement at a time,\r\n\t\t\t// so we can select the first 'changedTouch'.\r\n\t\t\tx = e.changedTouches[0].pageX;\r\n\t\t\ty = e.changedTouches[0].pageY;\r\n\t\t}\r\n\r\n\t\tif ( mouse || pointer ) {\r\n\t\t\tx = e.clientX + window.pageXOffset;\r\n\t\t\ty = e.clientY + window.pageYOffset;\r\n\t\t}\r\n\r\n\t\tevent.points = [x, y];\r\n\t\tevent.cursor = mouse || pointer; // Fix #435\r\n\r\n\t\treturn event;\r\n\t}\r\n\r\n\t// Append a handle to the base.\r\n\tfunction addHandle ( direction, index ) {\r\n\r\n\t\tvar origin = document.createElement('div'),\r\n\t\t\thandle = document.createElement('div'),\r\n\t\t\tadditions = [ '-lower', '-upper' ];\r\n\r\n\t\tif ( direction ) {\r\n\t\t\tadditions.reverse();\r\n\t\t}\r\n\r\n\t\taddClass(handle, Classes[3]);\r\n\t\taddClass(handle, Classes[3] + additions[index]);\r\n\r\n\t\taddClass(origin, Classes[2]);\r\n\t\torigin.appendChild(handle);\r\n\r\n\t\treturn origin;\r\n\t}\r\n\r\n\t// Add the proper connection classes.\r\n\tfunction addConnection ( connect, target, handles ) {\r\n\r\n\t\t// Apply the required connection classes to the elements\r\n\t\t// that need them. Some classes are made up for several\r\n\t\t// segments listed in the class list, to allow easy\r\n\t\t// renaming and provide a minor compression benefit.\r\n\t\tswitch ( connect ) {\r\n\t\t\tcase 1:\taddClass(target, Classes[7]);\r\n\t\t\t\t\taddClass(handles[0], Classes[6]);\r\n\t\t\t\t\tbreak;\r\n\t\t\tcase 3: addClass(handles[1], Classes[6]);\r\n\t\t\t\t\t/* falls through */\r\n\t\t\tcase 2: addClass(handles[0], Classes[7]);\r\n\t\t\t\t\t/* falls through */\r\n\t\t\tcase 0: addClass(target, Classes[6]);\r\n\t\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// Add handles to the slider base.\r\n\tfunction addHandles ( nrHandles, direction, base ) {\r\n\r\n\t\tvar index, handles = [];\r\n\r\n\t\t// Append handles.\r\n\t\tfor ( index = 0; index < nrHandles; index += 1 ) {\r\n\r\n\t\t\t// Keep a list of all added handles.\r\n\t\t\thandles.push( base.appendChild(addHandle( direction, index )) );\r\n\t\t}\r\n\r\n\t\treturn handles;\r\n\t}\r\n\r\n\t// Initialize a single slider.\r\n\tfunction addSlider ( direction, orientation, target ) {\r\n\r\n\t\t// Apply classes and data to the target.\r\n\t\taddClass(target, Classes[0]);\r\n\t\taddClass(target, Classes[8 + direction]);\r\n\t\taddClass(target, Classes[4 + orientation]);\r\n\r\n\t\tvar div = document.createElement('div');\r\n\t\taddClass(div, Classes[1]);\r\n\t\ttarget.appendChild(div);\r\n\t\treturn div;\r\n\t}\r\n\r\n\r\nfunction closure ( target, options ){\r\n\r\n\t// All variables local to 'closure' are prefixed with 'scope_'\r\n\tvar scope_Target = target,\r\n\t\tscope_Locations = [-1, -1],\r\n\t\tscope_Base,\r\n\t\tscope_Handles,\r\n\t\tscope_Spectrum = options.spectrum,\r\n\t\tscope_Values = [],\r\n\t\tscope_Events = {};\r\n\r\n\r\n\tfunction getGroup ( mode, values, stepped ) {\r\n\r\n\t\t// Use the range.\r\n\t\tif ( mode === 'range' || mode === 'steps' ) {\r\n\t\t\treturn scope_Spectrum.xVal;\r\n\t\t}\r\n\r\n\t\tif ( mode === 'count' ) {\r\n\r\n\t\t\t// Divide 0 - 100 in 'count' parts.\r\n\t\t\tvar spread = ( 100 / (values-1) ), v, i = 0;\r\n\t\t\tvalues = [];\r\n\r\n\t\t\t// List these parts and have them handled as 'positions'.\r\n\t\t\twhile ((v=i++*spread) <= 100 ) {\r\n\t\t\t\tvalues.push(v);\r\n\t\t\t}\r\n\r\n\t\t\tmode = 'positions';\r\n\t\t}\r\n\r\n\t\tif ( mode === 'positions' ) {\r\n\r\n\t\t\t// Map all percentages to on-range values.\r\n\t\t\treturn values.map(function( value ){\r\n\t\t\t\treturn scope_Spectrum.fromStepping( stepped ? scope_Spectrum.getStep( value ) : value );\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif ( mode === 'values' ) {\r\n\r\n\t\t\t// If the value must be stepped, it needs to be converted to a percentage first.\r\n\t\t\tif ( stepped ) {\r\n\r\n\t\t\t\treturn values.map(function( value ){\r\n\r\n\t\t\t\t\t// Convert to percentage, apply step, return to value.\r\n\t\t\t\t\treturn scope_Spectrum.fromStepping( scope_Spectrum.getStep( scope_Spectrum.toStepping( value ) ) );\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise, we can simply use the values.\r\n\t\t\treturn values;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction generateSpread ( density, mode, group ) {\r\n\r\n\t\tvar originalSpectrumDirection = scope_Spectrum.direction,\r\n\t\t\tindexes = {},\r\n\t\t\tfirstInRange = scope_Spectrum.xVal[0],\r\n\t\t\tlastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length-1],\r\n\t\t\tignoreFirst = false,\r\n\t\t\tignoreLast = false,\r\n\t\t\tprevPct = 0;\r\n\r\n\t\t// This function loops the spectrum in an ltr linear fashion,\r\n\t\t// while the toStepping method is direction aware. Trick it into\r\n\t\t// believing it is ltr.\r\n\t\tscope_Spectrum.direction = 0;\r\n\r\n\t\t// Create a copy of the group, sort it and filter away all duplicates.\r\n\t\tgroup = unique(group.slice().sort(function(a, b){ return a - b; }));\r\n\r\n\t\t// Make sure the range starts with the first element.\r\n\t\tif ( group[0] !== firstInRange ) {\r\n\t\t\tgroup.unshift(firstInRange);\r\n\t\t\tignoreFirst = true;\r\n\t\t}\r\n\r\n\t\t// Likewise for the last one.\r\n\t\tif ( group[group.length - 1] !== lastInRange ) {\r\n\t\t\tgroup.push(lastInRange);\r\n\t\t\tignoreLast = true;\r\n\t\t}\r\n\r\n\t\tgroup.forEach(function ( current, index ) {\r\n\r\n\t\t\t// Get the current step and the lower + upper positions.\r\n\t\t\tvar step, i, q,\r\n\t\t\t\tlow = current,\r\n\t\t\t\thigh = group[index+1],\r\n\t\t\t\tnewPct, pctDifference, pctPos, type,\r\n\t\t\t\tsteps, realSteps, stepsize;\r\n\r\n\t\t\t// When using 'steps' mode, use the provided steps.\r\n\t\t\t// Otherwise, we'll step on to the next subrange.\r\n\t\t\tif ( mode === 'steps' ) {\r\n\t\t\t\tstep = scope_Spectrum.xNumSteps[ index ];\r\n\t\t\t}\r\n\r\n\t\t\t// Default to a 'full' step.\r\n\t\t\tif ( !step ) {\r\n\t\t\t\tstep = high-low;\r\n\t\t\t}\r\n\r\n\t\t\t// Low can be 0, so test for false. If high is undefined,\r\n\t\t\t// we are at the last subrange. Index 0 is already handled.\r\n\t\t\tif ( low === false || high === undefined ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Find all steps in the subrange.\r\n\t\t\tfor ( i = low; i <= high; i += step ) {\r\n\r\n\t\t\t\t// Get the percentage value for the current step,\r\n\t\t\t\t// calculate the size for the subrange.\r\n\t\t\t\tnewPct = scope_Spectrum.toStepping( i );\r\n\t\t\t\tpctDifference = newPct - prevPct;\r\n\r\n\t\t\t\tsteps = pctDifference / density;\r\n\t\t\t\trealSteps = Math.round(steps);\r\n\r\n\t\t\t\t// This ratio represents the ammount of percentage-space a point indicates.\r\n\t\t\t\t// For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-devided.\r\n\t\t\t\t// Round the percentage offset to an even number, then divide by two\r\n\t\t\t\t// to spread the offset on both sides of the range.\r\n\t\t\t\tstepsize = pctDifference/realSteps;\r\n\r\n\t\t\t\t// Divide all points evenly, adding the correct number to this subrange.\r\n\t\t\t\t// Run up to <= so that 100% gets a point, event if ignoreLast is set.\r\n\t\t\t\tfor ( q = 1; q <= realSteps; q += 1 ) {\r\n\r\n\t\t\t\t\t// The ratio between the rounded value and the actual size might be ~1% off.\r\n\t\t\t\t\t// Correct the percentage offset by the number of points\r\n\t\t\t\t\t// per subrange. density = 1 will result in 100 points on the\r\n\t\t\t\t\t// full range, 2 for 50, 4 for 25, etc.\r\n\t\t\t\t\tpctPos = prevPct + ( q * stepsize );\r\n\t\t\t\t\tindexes[pctPos.toFixed(5)] = ['x', 0];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Determine the point type.\r\n\t\t\t\ttype = (group.indexOf(i) > -1) ? 1 : ( mode === 'steps' ? 2 : 0 );\r\n\r\n\t\t\t\t// Enforce the 'ignoreFirst' option by overwriting the type for 0.\r\n\t\t\t\tif ( !index && ignoreFirst ) {\r\n\t\t\t\t\ttype = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !(i === high && ignoreLast)) {\r\n\t\t\t\t\t// Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.\r\n\t\t\t\t\tindexes[newPct.toFixed(5)] = [i, type];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update the percentage count.\r\n\t\t\t\tprevPct = newPct;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Reset the spectrum.\r\n\t\tscope_Spectrum.direction = originalSpectrumDirection;\r\n\r\n\t\treturn indexes;\r\n\t}\r\n\r\n\tfunction addMarking ( spread, filterFunc, formatter ) {\r\n\r\n\t\tvar style = ['horizontal', 'vertical'][options.ort],\r\n\t\t\telement = document.createElement('div');\r\n\r\n\t\taddClass(element, 'noUi-pips');\r\n\t\taddClass(element, 'noUi-pips-' + style);\r\n\r\n\t\tfunction getSize( type ){\r\n\t\t\treturn [ '-normal', '-large', '-sub' ][type];\r\n\t\t}\r\n\r\n\t\tfunction getTags( offset, source, values ) {\r\n\t\t\treturn 'class=\"' + source + ' ' +\r\n\t\t\t\tsource + '-' + style + ' ' +\r\n\t\t\t\tsource + getSize(values[1]) +\r\n\t\t\t\t'\" style=\"' + options.style + ': ' + offset + '%\"';\r\n\t\t}\r\n\r\n\t\tfunction addSpread ( offset, values ){\r\n\r\n\t\t\tif ( scope_Spectrum.direction ) {\r\n\t\t\t\toffset = 100 - offset;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply the filter function, if it is set.\r\n\t\t\tvalues[1] = (values[1] && filterFunc) ? filterFunc(values[0], values[1]) : values[1];\r\n\r\n\t\t\t// Add a marker for every point\r\n\t\t\telement.innerHTML += '<div ' + getTags(offset, 'noUi-marker', values) + '></div>';\r\n\r\n\t\t\t// Values are only appended for points marked '1' or '2'.\r\n\t\t\tif ( values[1] ) {\r\n\t\t\t\telement.innerHTML += '<div '+getTags(offset, 'noUi-value', values)+'>' + formatter.to(values[0]) + '</div>';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Append all points.\r\n\t\tObject.keys(spread).forEach(function(a){\r\n\t\t\taddSpread(a, spread[a]);\r\n\t\t});\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tfunction pips ( grid ) {\r\n\r\n\tvar mode = grid.mode,\r\n\t\tdensity = grid.density || 1,\r\n\t\tfilter = grid.filter || false,\r\n\t\tvalues = grid.values || false,\r\n\t\tstepped = grid.stepped || false,\r\n\t\tgroup = getGroup( mode, values, stepped ),\r\n\t\tspread = generateSpread( density, mode, group ),\r\n\t\tformat = grid.format || {\r\n\t\t\tto: Math.round\r\n\t\t};\r\n\r\n\t\treturn scope_Target.appendChild(addMarking(\r\n\t\t\tspread,\r\n\t\t\tfilter,\r\n\t\t\tformat\r\n\t\t));\r\n\t}\r\n\r\n\r\n\t// Shorthand for base dimensions.\r\n\tfunction baseSize ( ) {\r\n\t\treturn scope_Base['offset' + ['Width', 'Height'][options.ort]];\r\n\t}\r\n\r\n\t// External event handling\r\n\tfunction fireEvent ( event, handleNumber ) {\r\n\r\n\t\tif ( handleNumber !== undefined ) {\r\n\t\t\thandleNumber = Math.abs(handleNumber - options.dir);\r\n\t\t}\r\n\r\n\t\tObject.keys(scope_Events).forEach(function( targetEvent ) {\r\n\r\n\t\t\tvar eventType = targetEvent.split('.')[0];\r\n\r\n\t\t\tif ( event === eventType ) {\r\n\t\t\t\tscope_Events[targetEvent].forEach(function( callback ) {\r\n\t\t\t\t\t// .reverse is in place\r\n\t\t\t\t\t// Return values as array, so arg_1[arg_2] is always valid.\r\n\t\t\t\t\tcallback( asArray(valueGet()), handleNumber, inSliderOrder(Array.prototype.slice.call(scope_Values)) );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Returns the input array, respecting the slider direction configuration.\r\n\tfunction inSliderOrder ( values ) {\r\n\r\n\t\t// If only one handle is used, return a single value.\r\n\t\tif ( values.length === 1 ){\r\n\t\t\treturn values[0];\r\n\t\t}\r\n\r\n\t\tif ( options.dir ) {\r\n\t\t\treturn values.reverse();\r\n\t\t}\r\n\r\n\t\treturn values;\r\n\t}\r\n\r\n\r\n\t// Handler for attaching events trough a proxy.\r\n\tfunction attach ( events, element, callback, data ) {\r\n\r\n\t\t// This function can be used to 'filter' events to the slider.\r\n\t\t// element is a node, not a nodeList\r\n\r\n\t\tvar method = function ( e ){\r\n\r\n\t\t\tif ( scope_Target.hasAttribute('disabled') ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Stop if an active 'tap' transition is taking place.\r\n\t\t\tif ( hasClass(scope_Target, Classes[14]) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\te = fixEvent(e);\r\n\r\n\t\t\t// Ignore right or middle clicks on start #454\r\n\t\t\tif ( events === actions.start && e.buttons !== undefined && e.buttons > 1 ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\te.calcPoint = e.points[ options.ort ];\r\n\r\n\t\t\t// Call the event handler with the event [ and additional data ].\r\n\t\t\tcallback ( e, data );\r\n\r\n\t\t}, methods = [];\r\n\r\n\t\t// Bind a closure on the target for every event type.\r\n\t\tevents.split(' ').forEach(function( eventName ){\r\n\t\t\telement.addEventListener(eventName, method, false);\r\n\t\t\tmethods.push([eventName, method]);\r\n\t\t});\r\n\r\n\t\treturn methods;\r\n\t}\r\n\r\n\t// Handle movement on document for handle and range drag.\r\n\tfunction move ( event, data ) {\r\n\r\n\t\tvar handles = data.handles || scope_Handles, positions, state = false,\r\n\t\t\tproposal = ((event.calcPoint - data.start) * 100) / baseSize(),\r\n\t\t\thandleNumber = handles[0] === scope_Handles[0] ? 0 : 1, i;\r\n\r\n\t\t// Calculate relative positions for the handles.\r\n\t\tpositions = getPositions( proposal, data.positions, handles.length > 1);\r\n\r\n\t\tstate = setHandle ( handles[0], positions[handleNumber], handles.length === 1 );\r\n\r\n\t\tif ( handles.length > 1 ) {\r\n\r\n\t\t\tstate = setHandle ( handles[1], positions[handleNumber?0:1], false ) || state;\r\n\r\n\t\t\tif ( state ) {\r\n\t\t\t\t// fire for both handles\r\n\t\t\t\tfor ( i = 0; i < data.handles.length; i++ ) {\r\n\t\t\t\t\tfireEvent('slide', i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if ( state ) {\r\n\t\t\t// Fire for a single handle\r\n\t\t\tfireEvent('slide', handleNumber);\r\n\t\t}\r\n\t}\r\n\r\n\t// Unbind move events on document, call callbacks.\r\n\tfunction end ( event, data ) {\r\n\r\n\t\t// The handle is no longer active, so remove the class.\r\n\t\tvar active = scope_Base.getElementsByClassName(Classes[15]),\r\n\t\t\thandleNumber = data.handles[0] === scope_Handles[0] ? 0 : 1;\r\n\r\n\t\tif ( active.length ) {\r\n\t\t\tremoveClass(active[0], Classes[15]);\r\n\t\t}\r\n\r\n\t\t// Remove cursor styles and text-selection events bound to the body.\r\n\t\tif ( event.cursor ) {\r\n\t\t\tdocument.body.style.cursor = '';\r\n\t\t\tdocument.body.removeEventListener('selectstart', document.body.noUiListener);\r\n\t\t}\r\n\r\n\t\tvar d = document.documentElement;\r\n\r\n\t\t// Unbind the move and end events, which are added on 'start'.\r\n\t\td.noUiListeners.forEach(function( c ) {\r\n\t\t\td.removeEventListener(c[0], c[1]);\r\n\t\t});\r\n\r\n\t\t// Remove dragging class.\r\n\t\tremoveClass(scope_Target, Classes[12]);\r\n\r\n\t\t// Fire the change and set events.\r\n\t\tfireEvent('set', handleNumber);\r\n\t\tfireEvent('change', handleNumber);\r\n\t}\r\n\r\n\t// Bind move events on document.\r\n\tfunction start ( event, data ) {\r\n\r\n\t\tvar d = document.documentElement;\r\n\r\n\t\t// Mark the handle as 'active' so it can be styled.\r\n\t\tif ( data.handles.length === 1 ) {\r\n\t\t\taddClass(data.handles[0].children[0], Classes[15]);\r\n\r\n\t\t\t// Support 'disabled' handles\r\n\t\t\tif ( data.handles[0].hasAttribute('disabled') ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// A drag should never propagate up to the 'tap' event.\r\n\t\tevent.stopPropagation();\r\n\r\n\t\t// Attach the move and end events.\r\n\t\tvar moveEvent = attach(actions.move, d, move, {\r\n\t\t\tstart: event.calcPoint,\r\n\t\t\thandles: data.handles,\r\n\t\t\tpositions: [\r\n\t\t\t\tscope_Locations[0],\r\n\t\t\t\tscope_Locations[scope_Handles.length - 1]\r\n\t\t\t]\r\n\t\t}), endEvent = attach(actions.end, d, end, {\r\n\t\t\thandles: data.handles\r\n\t\t});\r\n\r\n\t\td.noUiListeners = moveEvent.concat(endEvent);\r\n\r\n\t\t// Text selection isn't an issue on touch devices,\r\n\t\t// so adding cursor styles can be skipped.\r\n\t\tif ( event.cursor ) {\r\n\r\n\t\t\t// Prevent the 'I' cursor and extend the range-drag cursor.\r\n\t\t\tdocument.body.style.cursor = getComputedStyle(event.target).cursor;\r\n\r\n\t\t\t// Mark the target with a dragging state.\r\n\t\t\tif ( scope_Handles.length > 1 ) {\r\n\t\t\t\taddClass(scope_Target, Classes[12]);\r\n\t\t\t}\r\n\r\n\t\t\tvar f = function(){\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\r\n\t\t\tdocument.body.noUiListener = f;\r\n\r\n\t\t\t// Prevent text selection when dragging the handles.\r\n\t\t\tdocument.body.addEventListener('selectstart', f, false);\r\n\t\t}\r\n\t}\r\n\r\n\t// Move closest handle to tapped location.\r\n\tfunction tap ( event ) {\r\n\r\n\t\tvar location = event.calcPoint, total = 0, handleNumber, to;\r\n\r\n\t\t// The tap event shouldn't propagate up and cause 'edge' to run.\r\n\t\tevent.stopPropagation();\r\n\r\n\t\t// Add up the handle offsets.\r\n\t\tscope_Handles.forEach(function(a){\r\n\t\t\ttotal += offset(a)[ options.style ];\r\n\t\t});\r\n\r\n\t\t// Find the handle closest to the tapped position.\r\n\t\thandleNumber = ( location < total/2 || scope_Handles.length === 1 ) ? 0 : 1;\r\n\r\n\t\tlocation -= offset(scope_Base)[ options.style ];\r\n\r\n\t\t// Calculate the new position.\r\n\t\tto = ( location * 100 ) / baseSize();\r\n\r\n\t\tif ( !options.events.snap ) {\r\n\t\t\t// Flag the slider as it is now in a transitional state.\r\n\t\t\t// Transition takes 300 ms, so re-enable the slider afterwards.\r\n\t\t\taddClassFor( scope_Target, Classes[14], 300 );\r\n\t\t}\r\n\r\n\t\t// Support 'disabled' handles\r\n\t\tif ( scope_Handles[handleNumber].hasAttribute('disabled') ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Find the closest handle and calculate the tapped point.\r\n\t\t// The set handle to the new position.\r\n\t\tsetHandle( scope_Handles[handleNumber], to );\r\n\r\n\t\tfireEvent('slide', handleNumber);\r\n\t\tfireEvent('set', handleNumber);\r\n\t\tfireEvent('change', handleNumber);\r\n\r\n\t\tif ( options.events.snap ) {\r\n\t\t\tstart(event, { handles: [scope_Handles[total]] });\r\n\t\t}\r\n\t}\r\n\r\n\t// Attach events to several slider parts.\r\n\tfunction events ( behaviour ) {\r\n\r\n\t\tvar i, drag;\r\n\r\n\t\t// Attach the standard drag event to the handles.\r\n\t\tif ( !behaviour.fixed ) {\r\n\r\n\t\t\tfor ( i = 0; i < scope_Handles.length; i += 1 ) {\r\n\r\n\t\t\t\t// These events are only bound to the visual handle\r\n\t\t\t\t// element, not the 'real' origin element.\r\n\t\t\t\tattach ( actions.start, scope_Handles[i].children[0], start, {\r\n\t\t\t\t\thandles: [ scope_Handles[i] ]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Attach the tap event to the slider base.\r\n\t\tif ( behaviour.tap ) {\r\n\r\n\t\t\tattach ( actions.start, scope_Base, tap, {\r\n\t\t\t\thandles: scope_Handles\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Make the range dragable.\r\n\t\tif ( behaviour.drag ){\r\n\r\n\t\t\tdrag = [scope_Base.getElementsByClassName( Classes[7] )[0]];\r\n\t\t\taddClass(drag[0], Classes[10]);\r\n\r\n\t\t\t// When the range is fixed, the entire range can\r\n\t\t\t// be dragged by the handles. The handle in the first\r\n\t\t\t// origin will propagate the start event upward,\r\n\t\t\t// but it needs to be bound manually on the other.\r\n\t\t\tif ( behaviour.fixed ) {\r\n\t\t\t\tdrag.push(scope_Handles[(drag[0] === scope_Handles[0] ? 1 : 0)].children[0]);\r\n\t\t\t}\r\n\r\n\t\t\tdrag.forEach(function( element ) {\r\n\t\t\t\tattach ( actions.start, element, start, {\r\n\t\t\t\t\thandles: scope_Handles\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Test suggested values and apply margin, step.\r\n\tfunction setHandle ( handle, to, noLimitOption ) {\r\n\r\n\t\tvar trigger = handle !== scope_Handles[0] ? 1 : 0,\r\n\t\t\tlowerMargin = scope_Locations[0] + options.margin,\r\n\t\t\tupperMargin = scope_Locations[1] - options.margin,\r\n\t\t\tlowerLimit = scope_Locations[0] + options.limit,\r\n\t\t\tupperLimit = scope_Locations[1] - options.limit;\r\n\r\n\t\t// For sliders with multiple handles,\r\n\t\t// limit movement to the other handle.\r\n\t\t// Apply the margin option by adding it to the handle positions.\r\n\t\tif ( scope_Handles.length > 1 ) {\r\n\t\t\tto = trigger ? Math.max( to, lowerMargin ) : Math.min( to, upperMargin );\r\n\t\t}\r\n\r\n\t\t// The limit option has the opposite effect, limiting handles to a\r\n\t\t// maximum distance from another. Limit must be > 0, as otherwise\r\n\t\t// handles would be unmoveable. 'noLimitOption' is set to 'false'\r\n\t\t// for the .val() method, except for pass 4/4.\r\n\t\tif ( noLimitOption !== false && options.limit && scope_Handles.length > 1 ) {\r\n\t\t\tto = trigger ? Math.min ( to, lowerLimit ) : Math.max( to, upperLimit );\r\n\t\t}\r\n\r\n\t\t// Handle the step option.\r\n\t\tto = scope_Spectrum.getStep( to );\r\n\r\n\t\t// Limit to 0/100 for .val input, trim anything beyond 7 digits, as\r\n\t\t// JavaScript has some issues in its floating point implementation.\r\n\t\tto = limit(parseFloat(to.toFixed(7)));\r\n\r\n\t\t// Return false if handle can't move.\r\n\t\tif ( to === scope_Locations[trigger] ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Set the handle to the new position.\r\n\t\thandle.style[options.style] = to + '%';\r\n\r\n\t\t// Force proper handle stacking\r\n\t\tif ( !handle.previousSibling ) {\r\n\t\t\tremoveClass(handle, Classes[17]);\r\n\t\t\tif ( to > 50 ) {\r\n\t\t\t\taddClass(handle, Classes[17]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Update locations.\r\n\t\tscope_Locations[trigger] = to;\r\n\r\n\t\t// Convert the value to the slider stepping/range.\r\n\t\tscope_Values[trigger] = scope_Spectrum.fromStepping( to );\r\n\r\n\t\tfireEvent('update', trigger);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Loop values from value method and apply them.\r\n\tfunction setValues ( count, values ) {\r\n\r\n\t\tvar i, trigger, to;\r\n\r\n\t\t// With the limit option, we'll need another limiting pass.\r\n\t\tif ( options.limit ) {\r\n\t\t\tcount += 1;\r\n\t\t}\r\n\r\n\t\t// If there are multiple handles to be set run the setting\r\n\t\t// mechanism twice for the first handle, to make sure it\r\n\t\t// can be bounced of the second one properly.\r\n\t\tfor ( i = 0; i < count; i += 1 ) {\r\n\r\n\t\t\ttrigger = i%2;\r\n\r\n\t\t\t// Get the current argument from the array.\r\n\t\t\tto = values[trigger];\r\n\r\n\t\t\t// Setting with null indicates an 'ignore'.\r\n\t\t\t// Inputting 'false' is invalid.\r\n\t\t\tif ( to !== null && to !== false ) {\r\n\r\n\t\t\t\t// If a formatted number was passed, attemt to decode it.\r\n\t\t\t\tif ( typeof to === 'number' ) {\r\n\t\t\t\t\tto = String(to);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tto = options.format.from( to );\r\n\r\n\t\t\t\t// Request an update for all links if the value was invalid.\r\n\t\t\t\t// Do so too if setting the handle fails.\r\n\t\t\t\tif ( to === false || isNaN(to) || setHandle( scope_Handles[trigger], scope_Spectrum.toStepping( to ), i === (3 - options.dir) ) === false ) {\r\n\t\t\t\t\tfireEvent('update', trigger);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Set the slider value.\r\n\tfunction valueSet ( input ) {\r\n\r\n\t\tvar count, values = asArray( input ), i;\r\n\r\n\t\t// The RTL settings is implemented by reversing the front-end,\r\n\t\t// internal mechanisms are the same.\r\n\t\tif ( options.dir && options.handles > 1 ) {\r\n\t\t\tvalues.reverse();\r\n\t\t}\r\n\r\n\t\t// Animation is optional.\r\n\t\t// Make sure the initial values where set before using animated placement.\r\n\t\tif ( options.animate && scope_Locations[0] !== -1 ) {\r\n\t\t\taddClassFor( scope_Target, Classes[14], 300 );\r\n\t\t}\r\n\r\n\t\t// Determine how often to set the handles.\r\n\t\tcount = scope_Handles.length > 1 ? 3 : 1;\r\n\r\n\t\tif ( values.length === 1 ) {\r\n\t\t\tcount = 1;\r\n\t\t}\r\n\r\n\t\tsetValues ( count, values );\r\n\r\n\t\t// Fire the 'set' event for both handles.\r\n\t\tfor ( i = 0; i < scope_Handles.length; i++ ) {\r\n\t\t\tfireEvent('set', i);\r\n\t\t}\r\n\t}\r\n\r\n\t// Get the slider value.\r\n\tfunction valueGet ( ) {\r\n\r\n\t\tvar i, retour = [];\r\n\r\n\t\t// Get the value from all handles.\r\n\t\tfor ( i = 0; i < options.handles; i += 1 ){\r\n\t\t\tretour[i] = options.format.to( scope_Values[i] );\r\n\t\t}\r\n\r\n\t\treturn inSliderOrder( retour );\r\n\t}\r\n\r\n\t// Removes classes from the root and empties it.\r\n\tfunction destroy ( ) {\r\n\t\tClasses.forEach(function(cls){\r\n\t\t\tif ( !cls ) { return; } // Ignore empty classes\r\n\t\t\tremoveClass(scope_Target, cls);\r\n\t\t});\r\n\t\tscope_Target.innerHTML = '';\r\n\t\tdelete scope_Target.noUiSlider;\r\n\t}\r\n\r\n\t// Get the current step size for the slider.\r\n\tfunction getCurrentStep ( ) {\r\n\r\n\t\t// Check all locations, map them to their stepping point.\r\n\t\t// Get the step point, then find it in the input list.\r\n\t\tvar retour = scope_Locations.map(function( location, index ){\r\n\r\n\t\t\tvar step = scope_Spectrum.getApplicableStep( location ),\r\n\r\n\t\t\t\t// As per #391, the comparison for the decrement step can have some rounding issues.\r\n\t\t\t\t// Round the value to the precision used in the step.\r\n\t\t\t\tstepDecimals = countDecimals(String(step[2])),\r\n\r\n\t\t\t\t// Get the current numeric value\r\n\t\t\t\tvalue = scope_Values[index],\r\n\r\n\t\t\t\t// To move the slider 'one step up', the current step value needs to be added.\r\n\t\t\t\t// Use null if we are at the maximum slider value.\r\n\t\t\t\tincrement = location === 100 ? null : step[2],\r\n\r\n\t\t\t\t// Going 'one step down' might put the slider in a different sub-range, so we\r\n\t\t\t\t// need to switch between the current or the previous step.\r\n\t\t\t\tprev = Number((value - step[2]).toFixed(stepDecimals)),\r\n\r\n\t\t\t\t// If the value fits the step, return the current step value. Otherwise, use the\r\n\t\t\t\t// previous step. Return null if the slider is at its minimum value.\r\n\t\t\t\tdecrement = location === 0 ? null : (prev >= step[1]) ? step[2] : (step[0] || false);\r\n\r\n\t\t\treturn [decrement, increment];\r\n\t\t});\r\n\r\n\t\t// Return values in the proper order.\r\n\t\treturn inSliderOrder( retour );\r\n\t}\r\n\r\n\t// Attach an event to this slider, possibly including a namespace\r\n\tfunction bindEvent ( namespacedEvent, callback ) {\r\n\t\tscope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];\r\n\t\tscope_Events[namespacedEvent].push(callback);\r\n\r\n\t\t// If the event bound is 'update,' fire it immediately for all handles.\r\n\t\tif ( namespacedEvent.split('.')[0] === 'update' ) {\r\n\t\t\tscope_Handles.forEach(function(a, index){\r\n\t\t\t\tfireEvent('update', index);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// Undo attachment of event\r\n\tfunction removeEvent ( namespacedEvent ) {\r\n\r\n\t\tvar event = namespacedEvent.split('.')[0],\r\n\t\t\tnamespace = namespacedEvent.substring(event.length);\r\n\r\n\t\tObject.keys(scope_Events).forEach(function( bind ){\r\n\r\n\t\t\tvar tEvent = bind.split('.')[0],\r\n\t\t\t\ttNamespace = bind.substring(tEvent.length);\r\n\r\n\t\t\tif ( (!event || event === tEvent) && (!namespace || namespace === tNamespace) ) {\r\n\t\t\t\tdelete scope_Events[bind];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// Throw an error if the slider was already initialized.\r\n\tif ( scope_Target.noUiSlider ) {\r\n\t\tthrow new Error('Slider was already initialized.');\r\n\t}\r\n\r\n\r\n\t// Create the base element, initialise HTML and set classes.\r\n\t// Add handles and links.\r\n\tscope_Base = addSlider( options.dir, options.ort, scope_Target );\r\n\tscope_Handles = addHandles( options.handles, options.dir, scope_Base );\r\n\r\n\t// Set the connect classes.\r\n\taddConnection ( options.connect, scope_Target, scope_Handles );\r\n\r\n\t// Attach user events.\r\n\tevents( options.events );\r\n\r\n\tif ( options.pips ) {\r\n\t\tpips(options.pips);\r\n\t}\r\n\r\n\treturn {\r\n\t\tdestroy: destroy,\r\n\t\tsteps: getCurrentStep,\r\n\t\ton: bindEvent,\r\n\t\toff: removeEvent,\r\n\t\tget: valueGet,\r\n\t\tset: valueSet\r\n\t};\r\n\r\n}\r\n\r\n\r\n\t// Run the standard initializer\r\n\tfunction initialize ( target, originalOptions ) {\r\n\r\n\t\tif ( !target.nodeName ) {\r\n\t\t\tthrow new Error('noUiSlider.create requires a single element.');\r\n\t\t}\r\n\r\n\t\t// Test the options and create the slider environment;\r\n\t\tvar options = testOptions( originalOptions, target ),\r\n\t\t\tslider = closure( target, options );\r\n\r\n\t\t// Use the public value method to set the start values.\r\n\t\tslider.set(options.start);\r\n\r\n\t\ttarget.noUiSlider = slider;\r\n\t}\r\n\r\n\t// Use an object instead of a function for future expansibility;\r\n\treturn {\r\n\t\tcreate: initialize\r\n\t};\r\n\r\n}));","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();","(function() {\n\n// Chart design based on the recommendations of Stephen Few. Implementation\n// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n// http://projects.instantcognition.com/protovis/bulletchart/\nd3.bullet = function() {\n  var orient = \"left\", // TODO top & bottom\n      reverse = false,\n      duration = 0,\n      ranges = bulletRanges,\n      markers = bulletMarkers,\n      measures = bulletMeasures,\n      width = 380,\n      height = 30,\n      tickFormat = null;\n\n  // For each small multiple…\n  function bullet(g) {\n    g.each(function(d, i) {\n      var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n          markz = markers.call(this, d, i),\n          markerz = markers.call(this, d, i).slice().sort(d3.descending),\n          measurez = measures.call(this, d, i).slice().sort(d3.descending),\n          g = d3.select(this);\n\n      // Compute the new x-scale.\n      var x1 = d3.scale.linear()\n          .domain([0, Math.max(rangez[0], markerz[0], measurez[0])])\n          .range(reverse ? [width, 0] : [0, width]);\n\n      // Retrieve the old x-scale, if this is an update.\n      var x0 = this.__chart__ || d3.scale.linear()\n          .domain([0, Infinity])\n          .range(x1.range());\n\n      // Stash the new scale.\n      this.__chart__ = x1;\n\n      // Derive width-scales from the x-scales.\n      var w0 = bulletWidth(x0),\n          w1 = bulletWidth(x1);\n\n      // Update the range rects.\n      var range = g.selectAll(\"rect.range\")\n          .data(rangez);\n\n      range.enter().append(\"rect\")\n          .attr(\"class\", function(d, i) { return \"range s\" + i; })\n          .attr(\"width\", w0)\n          .attr(\"height\", height)\n          .attr(\"x\", reverse ? x0 : 0)\n          .attr(\"width\", w1)\n          .attr(\"x\", reverse ? x1 : 0);\n\n      range.attr(\"x\", reverse ? x1 : 0)\n          .attr(\"width\", w1)\n          .attr(\"height\", height);\n\n      // Update the measure rects.\n      var measure = g.selectAll(\"rect.measure\")\n          .data(measurez);\n\n      measure.enter().append(\"rect\")\n          .attr(\"class\", function(d, i) { return \"measure s\" + i; })\n          .attr(\"width\", w0)\n          .attr(\"height\", height / 3)\n          .attr(\"x\", reverse ? x0 : 0)\n          .attr(\"y\", height / 3)\n        .transition()\n          .duration(duration)\n          .attr(\"width\", w1)\n          .attr(\"x\", reverse ? x1 : 0);\n\n      measure\n        .transition()\n          .duration(duration)\n          .attr(\"width\", w1)\n          .attr(\"height\", height / 3)\n          .attr(\"x\", reverse ? x1 : 0)\n          .attr(\"y\", height / 3);\n\n      /**\n       * Begin code for custom measure tooltips show current sales\n       */\n\n      var locationColors = { // Stroke and fill colors for each office\n        jacksonville: ['#008EE5', '#66BBEF'],\n        orlando: ['#936FEE', '#BEA9F5'],\n        tallahassee: ['#FFA435', '#FFC886'],\n        tampa: ['#FC5561', '#FD99A0'],\n        \"west palm beach\": ['#00B058', '#66D09B']\n      };\n\n      // Create and append a tooltip\n      var vizTooltip = d3.select('#sales-goals-chart').append('div')\n                            .attr('class', 'tooltip')\n                            .style('opacity', 0);\n\n      // Custom tooltips for a measure when mouse in\n      measure.on(\"mouseenter\", function(d, i) {\n\n        // Transition to full opacity over 0.3s\n        vizTooltip.transition()\n                    .duration(300)\n                    .style('opacity', 1);\n\n        // Add paragraph holding current sales total\n        vizTooltip.html('<p>' + (d * 1000000).formatMoney(2) + '</p>')\n                    .style('left', function() {\n\n                      // Check if tooltip will be outside chart and position\n                      var tooltipWidth = $('#sales-goals-chart .tooltip').width();\n                      if ((d3.event.pageX + tooltipWidth) > $('#sales-goals-chart').width()) {\n                        return (d3.event.pageX - tooltipWidth) + 'px';\n                      }\n                      else {\n                        return d3.event.pageX + 'px';\n                      }\n                    })\n                    .style('top', function() {\n\n                      // Check if tooltip will be outside chart and position\n                      var tooltipHeight = $('#sales-goals-chart .tooltip').height();\n                      if ((d3.event.pageY + tooltipHeight) > height) {\n                        return (d3.event.pageY - tooltipHeight) + 'px';\n                      }\n                      else {\n                        return d3.event.pageY + 'px';\n                      }\n                    });\n      });\n\n      // Fade out tooltip on mouse out over 0.3s\n      measure.on(\"mouseleave\", function(d, i) {\n        vizTooltip.transition()\n                    .duration(300)\n                    .style('opacity', 0);\n      });\n\n      /**\n       * End code for custom measure tooltips showing current sales\n       */\n\n      // Update the marker lines.\n      var marker = g.selectAll(\"g\")\n          .data(markerz)\n          .enter().append(\"g\")\n            .style('text-anchor', 'end');\n\n      marker.append('line')\n          .attr(\"class\", \"marker\")\n          .attr(\"x1\", x0)\n          .attr(\"x2\", x0)\n          .attr(\"y1\", height / 6)\n          .attr(\"y2\", height * 5 / 6)\n          .attr(\"x1\", x1)\n          .attr(\"x2\", x1);\n\n        marker.append('circle')\n          .attr(\"cx\", x0)\n          .attr(\"cy\", height / 2)\n          .attr(\"r\", 12)\n          .attr(\"cx\", x1)\n          .attr(\"transform\", \"translate(0, -1)\")\n          .attr(\"fill\", \"yellow\");\n\n        marker.append('circle')\n          .attr(\"cx\", x0)\n          .attr(\"cy\", height / 2)\n          .attr(\"r\", 3)\n          .attr(\"cx\", x1)\n          .attr(\"transform\", \"translate(-6, -3)\")\n          .attr(\"fill\", \"black\");\n\n        marker.append('circle')\n            .attr(\"cx\", x0)\n            .attr(\"cy\", height / 2)\n            .attr(\"r\", 3)\n            .attr(\"cx\", x1)\n            .attr(\"transform\", \"translate(6, -3)\")\n            .attr(\"fill\", \"black\");\n\n        marker.append('ellipse')\n            .attr(\"cx\", x0)\n            .attr(\"cy\", height / 2)\n            .attr(\"rx\", 8)\n            .attr(\"ry\", 2)\n            .attr(\"cx\", x1)\n            .attr(\"transform\", \"translate(0, 4)\")\n            .attr(\"fill\", \"black\");\n\n        marker.append('ellipse')\n            .attr(\"cx\", x0)\n            .attr(\"cy\", height / 2)\n            .attr(\"rx\", 8)\n            .attr(\"ry\", 2)\n            .attr(\"cx\", x1)\n            .attr(\"transform\", \"translate(0, 2)\")\n            .attr(\"fill\", \"yellow\");\n\n      marker.append('text')\n          .text(\"Goal\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr('x', x1)\n          .attr('y', (height / 6) - 2);\n\n      marker.attr(\"x1\", x1)\n          .attr(\"x2\", x1)\n          .attr(\"y1\", height / 6)\n          .attr(\"y2\", height * 5 / 6);\n\n      marker.on(\"mouseenter\", function(d, i) {\n        vizTooltip.transition()\n                    .duration(500)\n                    .style('opacity', 1);\n        vizTooltip.html('<p>' + (d * 1000000).formatMoney(2) + '</p>')\n                    .style('left', function() {\n                      var tooltipWidth = $('#sales-goals-chart .tooltip').width();\n                      if ((d3.event.pageX + tooltipWidth) > $('#sales-goals-chart').width()) {\n                        return (d3.event.pageX - tooltipWidth) + 'px';\n                      }\n                      else {\n                        return d3.event.pageX + 'px';\n                      }\n                    })\n                    .style('top', function() {\n                      var tooltipHeight = $('#sales-goals-chart .tooltip').height();\n                      if ((d3.event.pageY + tooltipHeight) > height) {\n                        return (d3.event.pageY - tooltipHeight) + 'px';\n                      }\n                      else {\n                        return d3.event.pageY + 'px';\n                      }\n                    });\n      });\n\n      marker.on(\"mouseleave\", function(d, i) {\n        vizTooltip.transition()\n                    .duration(500)\n                    .style('opacity', 0);\n      });\n\n      // Compute the tick format.\n      var format = tickFormat || x1.tickFormat(8);\n\n      // Update the tick groups.\n      var tick = g.selectAll(\"g.tick\")\n          .data(x1.ticks(8), function(d) {\n            return this.textContent || format(d);\n          });\n\n      // Initialize the ticks with the old scale, x0.\n      var tickEnter = tick.enter().append(\"g\")\n          .attr(\"class\", \"tick\")\n          .attr(\"transform\", bulletTranslate(x0))\n          .style(\"opacity\", 1e-6);\n\n      tickEnter.append(\"line\")\n          .attr(\"y1\", height)\n          .attr(\"y2\", height * 7 / 6);\n\n      tickEnter.append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"dy\", \"1em\")\n          .attr(\"y\", height * 7 / 6)\n          .text(format);\n\n      // Transition the entering ticks to the new scale, x1.\n      tickEnter.attr(\"transform\", bulletTranslate(x1))\n          .style(\"opacity\", 1);\n\n      // Transition the updating ticks to the new scale, x1.\n      var tickUpdate = tick.attr(\"transform\", bulletTranslate(x1))\n          .style(\"opacity\", 1);\n\n      tickUpdate.select(\"line\")\n          .attr(\"y1\", height)\n          .attr(\"y2\", height * 7 / 6);\n\n      tickUpdate.select(\"text\")\n          .attr(\"y\", height * 7 / 6);\n\n      // Transition the exiting ticks to the new scale, x1.\n      tick.exit().attr(\"transform\", bulletTranslate(x1))\n          .style(\"opacity\", 1e-6)\n          .remove();\n    });\n    d3.timer.flush();\n  }\n\n  // left, right, top, bottom\n  bullet.orient = function(x) {\n    if (!arguments.length) return orient;\n    orient = x;\n    reverse = orient == \"right\" || orient == \"bottom\";\n    return bullet;\n  };\n\n  // ranges (bad, satisfactory, good)\n  bullet.ranges = function(x) {\n    if (!arguments.length) return ranges;\n    ranges = x;\n    return bullet;\n  };\n\n  // markers (previous, goal)\n  bullet.markers = function(x) {\n    if (!arguments.length) return markers;\n    markers = x;\n    return bullet;\n  };\n\n  // measures (actual, forecast)\n  bullet.measures = function(x) {\n    if (!arguments.length) return measures;\n    measures = x;\n    return bullet;\n  };\n\n  bullet.width = function(x) {\n    if (!arguments.length) return width;\n    width = x;\n    return bullet;\n  };\n\n  bullet.height = function(x) {\n    if (!arguments.length) return height;\n    height = x;\n    return bullet;\n  };\n\n  bullet.tickFormat = function(x) {\n    if (!arguments.length) return tickFormat;\n    tickFormat = x;\n    return bullet;\n  };\n\n  bullet.duration = function(x) {\n    if (!arguments.length) return duration;\n    duration = x;\n    return bullet;\n  };\n\n  return bullet;\n};\n\nfunction bulletRanges(d) {\n  return d.ranges;\n}\n\nfunction bulletMarkers(d) {\n  return d.markers;\n}\n\nfunction bulletMeasures(d) {\n  return d.measures;\n}\n\nfunction bulletTranslate(x) {\n  return function(d) {\n    return \"translate(\" + x(d) + \",0)\";\n  };\n}\n\nfunction bulletWidth(x) {\n  var x0 = x(0);\n  return function(d) {\n    return Math.abs(x(d) - x0);\n  };\n}\n\nNumber.prototype.formatMoney = function(c, d, t){\n  var n = this,\n      c = isNaN(c = Math.abs(c)) ? 2 : c,\n      d = d == undefined ? \".\" : d,\n      t = t == undefined ? \",\" : t,\n      s = n < 0 ? \"-\" : \"\",\n      i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + \"\",\n      j = (j = i.length) > 3 ? j % 3 : 0;\n     return s + '$' + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\");\n };\n\n})();\n"],"sourceRoot":"/source/"}