{"version":3,"sources":["utils.js","d3/d3.js","d3/d3bullet.js","nouislider/nouislider.js","underscore/underscore.js"],"names":["currencyFormat","number","decimalplaces","decimalcharacter","thousandseparater","parseFloat","sign","formatted","String","toFixed","length","replace","integer","fraction","strnumber","dotpos","indexOf","substr","Math","abs","temparray","Array","unshift","join","createNumber","currencyString","createDate","dateString","format","d3","time","parse","createString","date","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","concat","remove","set","d3_eventPreventDefault","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","hsl","color","exec","toLowerCase","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","Infinity","d3_timer_queueTail","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","zfill","comma","precision","prefix","suffix","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","step","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","define","amd","module","exports","bulletRanges","bulletMarkers","markers","bulletMeasures","measures","bulletTranslate","bulletWidth","bullet","rangez","markerz","measurez","height","measure","vizTooltip","formatMoney","tooltipWidth","tooltipHeight","marker","undefined","factory","fs","require","css","readFileSync","__dirname","noUiSlider","unique","closest","elem","doc","win","parentWindow","docElem","xOff","pageXOffset","pageYOffset","isNumeric","accurateNumber","addClassFor","element","className","addClass","removeClass","limit","asArray","countDecimals","numStr","pieces","el","hasClass","subRangeRatio","fromPercentage","toPercentage","isPercentage","getJ","arr","toStepping","xVal","xPct","fromStepping","getStep","xSteps","snap","handleEntryPoint","percentage","handleStepPoint","Spectrum","singleStep","xNumSteps","ordered","testStep","parsed","testRange","spectrum","dir","testStart","handles","testSnap","testAnimate","animate","testConnect","connect","testOrientation","ort","testMargin","getMargin","testLimit","testDirection","testBehaviour","tap","events","testFormat","testOptions","options","tests","defaultFormatter","orientation","behaviour","defaults","pips","getPositions","delimit","fixEvent","pointer","cursor","addHandle","handle","additions","Classes","addConnection","addHandles","nrHandles","addSlider","div","closure","getGroup","stepped","scope_Spectrum","spread","generateSpread","density","originalSpectrumDirection","firstInRange","lastInRange","ignoreFirst","ignoreLast","prevPct","newPct","pctDifference","pctPos","realSteps","stepsize","low","high","addMarking","filterFunc","formatter","getSize","getTags","addSpread","grid","scope_Target","baseSize","scope_Base","fireEvent","handleNumber","scope_Events","targetEvent","eventType","valueGet","inSliderOrder","scope_Values","attach","hasAttribute","actions","buttons","calcPoint","eventName","positions","scope_Handles","state","proposal","setHandle","getElementsByClassName","noUiListener","noUiListeners","stopPropagation","moveEvent","scope_Locations","endEvent","total","noLimitOption","trigger","lowerMargin","upperMargin","lowerLimit","upperLimit","previousSibling","setValues","valueSet","retour","destroy","cls","getCurrentStep","getApplicableStep","stepDecimals","increment","prev","decrement","bindEvent","namespacedEvent","removeEvent","tEvent","tNamespace","initialize","originalOptions","nodeName","slider","pointerEnabled","msPointerEnabled","convert","createReduce","iterator","obj","iteratee","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","ObjProto","prop","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","VERSION","func","argCount","collection","accumulator","isObject","matcher","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","results","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","reject","negate","every","all","some","any","includes","include","fromIndex","guard","invoke","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","rand","shuffled","sample","sortBy","criteria","groupBy","indexBy","countBy","toArray","pass","fail","head","take","initial","last","rest","tail","drop","compact","flatten","shallow","strict","startIndex","isArguments","len","without","difference","uniq","isSorted","isBoolean","seen","union","argsLength","unzip","findLastIndex","executeBound","sourceFunc","boundFunc","callingContext","TypeError","partial","boundArgs","bindAll","memoize","hasher","cache","address","wait","defer","throttle","timeout","later","leading","trailing","debounce","immediate","timestamp","callNow","wrapper","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","functions","extend","extendOwn","assign","pick","oiteratee","omit","props","clone","interceptor","isMatch","eq","aStack","bStack","areArrays","aCtor","bCtor","isEqual","isEmpty","isString","isElement","Int8Array","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","accum","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","escape","unescape","fallback","idCounter","uniqueId","templateSettings","evaluate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","settings","oldSettings","variable","render","argument","chain","instance","_chain","mixin","toJSON"],"mappings":"AAUA,QAAAA,gBAAAC,GACA,GAAAC,GAAA,EACAC,EAAA,IACAC,EAAA,GACAH,GAAAI,WAAAJ,EACA,IAAAK,GAAA,EAAAL,EAAA,IAAA,GACAM,EAAA,GAAAC,QAAAP,EAAAQ,QAAAP,GACAC,GAAAO,QAAA,KAAAP,IAAAI,EAAAA,EAAAI,QAAA,KAAAR,GACA,IAAAS,GAAA,GACAC,EAAA,GACAC,EAAA,GAAAN,QAAAD,GACAQ,EAAAZ,EAAAO,OAAAI,EAAAE,QAAAb,GAAA,EAQA,KAPAY,EAAA,IAEAA,IAAAH,EAAAE,EAAAG,OAAA,EAAAF,IACAF,EAAAC,EAAAG,OAAAF,EAAA,IAEAH,EAAAE,EACAF,IAAAA,EAAAJ,OAAAU,KAAAC,IAAAP,KACAC,EAAAH,OAAAR,GAAAW,GAAA,GAEA,KADAO,UAAA,GAAAC,OACAT,EAAAF,OAAA,GAEAU,UAAAE,QAAAV,EAAAK,OAAA,KACAL,EAAAA,EAAAK,OAAA,EAAAL,EAAAF,OAAA,EAIA,OAFAU,WAAAE,QAAAV,GACAA,EAAAQ,UAAAG,KAAAnB,GACAE,EAAA,IAAAM,EAAAT,EAAAU,EAMA,QAAAW,cAAAC,GACA,MAAApB,YAAAoB,EAAAd,QAAA,UAAA,KAMA,QAAAe,YAAAC,GACA,GAAAC,GAAAC,GAAAC,KAAAF,OAAA,aACA,OAAAA,GAAAG,MAAAJ,GAMA,QAAAK,cAAAC,GACA,GAAAL,GAAAC,GAAAC,KAAAF,OAAA,aACA,OAAAA,GAAAK,IC7DA,WAQA,QAAAC,GAAAC,GACA,MAAAA,KAAAA,EAAAC,eAAAD,EAAAE,UAAAF,GAAAG,gBAEA,QAAAC,GAAAJ,GACA,MAAAA,KAAAA,EAAAC,eAAAD,EAAAC,cAAAI,aAAAL,EAAAE,UAAAF,GAAAA,EAAAK,aAiCA,QAAAC,GAAAC,EAAAC,GACA,MAAAA,GAAAD,EAAA,GAAAA,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAC,EAAAA,EA8DA,QAAAC,GAAAC,GACA,MAAA,QAAAA,EAAAF,EAAAA,GAAAE,EAEA,QAAAC,GAAAD,GACA,OAAAE,MAAAF,GA0DA,QAAAG,GAAAC,GACA,OACAC,KAAA,SAAAT,EAAAI,EAAAM,EAAAC,GAGA,IAFAC,UAAA5C,OAAA,IAAA0C,EAAA,GACAE,UAAA5C,OAAA,IAAA2C,EAAAX,EAAAhC,QACA2C,EAAAD,GAAA,CACA,GAAAG,GAAAH,EAAAC,IAAA,CACAH,GAAAR,EAAAa,GAAAT,GAAA,EAAAM,EAAAG,EAAA,EAAAF,EAAAE,EAEA,MAAAH,IAEAI,MAAA,SAAAd,EAAAI,EAAAM,EAAAC,GAGA,IAFAC,UAAA5C,OAAA,IAAA0C,EAAA,GACAE,UAAA5C,OAAA,IAAA2C,EAAAX,EAAAhC,QACA2C,EAAAD,GAAA,CACA,GAAAG,GAAAH,EAAAC,IAAA,CACAH,GAAAR,EAAAa,GAAAT,GAAA,EAAAO,EAAAE,EAAAH,EAAAG,EAAA,EAEA,MAAAH,KA2CA,QAAAK,GAAAC,GACA,MAAAA,GAAAhD,OAmDA,QAAAiD,GAAAb,GAEA,IADA,GAAAc,GAAA,EACAd,EAAAc,EAAA,GAAAA,GAAA,EACA,OAAAA,GAEA,QAAAC,GAAAC,EAAAC,GACA,IAAA,GAAAC,KAAAD,GACAE,OAAAC,eAAAJ,EAAAK,UAAAH,GACAI,MAAAL,EAAAC,GACAK,YAAA,IAkBA,QAAAC,KACAC,KAAAC,EAAAP,OAAAQ,OAAA,MAgCA,QAAAC,GAAAV,GACA,OAAAA,GAAA,MAAAW,IAAAX,EAAA,KAAAY,GAAAA,GAAAZ,EAAAA,EAEA,QAAAa,GAAAb,GACA,OAAAA,GAAA,IAAA,KAAAY,GAAAZ,EAAAc,MAAA,GAAAd,EAEA,QAAAe,GAAAf,GACA,MAAAU,GAAAV,IAAAO,MAAAC,EAEA,QAAAQ,GAAAhB,GACA,OAAAA,EAAAU,EAAAV,KAAAO,MAAAC,SAAAD,MAAAC,EAAAR,GAEA,QAAAiB,KACA,GAAAC,KACA,KAAA,GAAAlB,KAAAO,MAAAC,EAAAU,EAAAC,KAAAN,EAAAb,GACA,OAAAkB,GAEA,QAAAE,KACA,GAAAC,GAAA,CACA,KAAA,GAAArB,KAAAO,MAAAC,IAAAa,CACA,OAAAA,GAEA,QAAAC,KACA,IAAA,GAAAtB,KAAAO,MAAAC,EAAA,OAAA,CACA,QAAA,EAsEA,QAAAe,KACAhB,KAAAC,EAAAP,OAAAQ,OAAA,MAiBA,QAAAe,GAAA9B,GACA,MAAAA,GAOA,QAAA+B,GAAAC,EAAAC,EAAAC,GACA,MAAA,YACA,GAAAxB,GAAAwB,EAAAC,MAAAF,EAAArC,UACA,OAAAc,KAAAuB,EAAAD,EAAAtB,GAGA,QAAA0B,GAAAC,EAAAC,GACA,GAAAA,IAAAD,GAAA,MAAAC,EACAA,GAAAA,EAAAC,OAAA,GAAAC,cAAAF,EAAAlB,MAAA,EACA,KAAA,GAAAqB,GAAA,EAAAC,EAAAC,GAAA3F,OAAA0F,EAAAD,IAAAA,EAAA,CACA,GAAAG,GAAAD,GAAAF,GAAAH,CACA,IAAAM,IAAAP,GAAA,MAAAO,IAIA,QAAAC,MAMA,QAAAC,MAeA,QAAAC,GAAAC,GAEA,QAAAC,KAEA,IADA,GAAAC,GAAAC,EAAAC,EAAAX,EAAA,GAAAC,EAAAS,EAAAnG,SACAyF,EAAAC,IAAAQ,EAAAC,EAAAV,GAAAY,KAAAH,EAAAf,MAAAtB,KAAAjB,UACA,OAAAoD,GAJA,GAAAI,MAAAE,EAAA,GAAA1C,EAmBA,OAbAqC,GAAAI,GAAA,SAAAf,EAAAiB,GACA,GAAAd,GAAAS,EAAAI,EAAAE,IAAAlB,EACA,OAAA1C,WAAA5C,OAAA,EAAAkG,GAAAA,EAAAG,IACAH,IACAA,EAAAG,GAAA,KACAD,EAAAA,EAAAhC,MAAA,EAAAqB,EAAAW,EAAA9F,QAAA4F,IAAAO,OAAAL,EAAAhC,MAAAqB,EAAA,IACAa,EAAAI,OAAApB,IAEAiB,GAAAH,EAAA3B,KAAA6B,EAAAK,IAAArB,GACAe,GAAAE,KAEAP,IAEAC,EAGA,QAAAW,KACAzF,GAAA8E,MAAAY,iBAEA,QAAAC,KAEA,IADA,GAAAC,GAAAC,EAAA7F,GAAA8E,MACAc,EAAAC,EAAAC,aAAAD,EAAAD,CACA,OAAAC,GAEA,QAAAE,GAAAlC,GAEA,IADA,GAAAgB,GAAA,GAAAF,GAAAL,EAAA,EAAAC,EAAA9C,UAAA5C,SACAyF,EAAAC,GAAAM,EAAApD,UAAA6C,IAAAM,EAAAC,EAaA,OAZAA,GAAAmB,GAAA,SAAAC,EAAAC,GACA,MAAA,UAAAC,GACA,IACA,GAAAC,GAAAD,EAAAL,YAAA9F,GAAA8E,KACAqB,GAAAtC,OAAAA,EACA7D,GAAA8E,MAAAqB,EACAtB,EAAAsB,EAAAE,MAAArC,MAAAiC,EAAAC,GACA,QACAlG,GAAA8E,MAAAsB,KAIAvB,EAWA,QAAAyB,GAAAC,GAEA,MADAC,IAAAD,EAAAE,IACAF,EAyCA,QAAAG,GAAAC,GACA,MAAA,kBAAAA,GAAAA,EAAA,WACA,MAAAC,IAAAD,EAAAjE,OAgBA,QAAAmE,GAAAF,GACA,MAAA,kBAAAA,GAAAA,EAAA,WACA,MAAAG,IAAAH,EAAAjE,OAoCA,QAAAqE,GAAA5C,EAAA5B,GAEA,QAAAyE,KACAtE,KAAAuE,gBAAA9C,GAEA,QAAA+C,KACAxE,KAAAyE,kBAAAhD,EAAAiD,MAAAjD,EAAAkD,OAEA,QAAAC,KACA5E,KAAA6E,aAAApD,EAAA5B,GAEA,QAAAiF,KACA9E,KAAA+E,eAAAtD,EAAAiD,MAAAjD,EAAAkD,MAAA9E,GAEA,QAAAmF,KACA,GAAAzG,GAAAsB,EAAAyB,MAAAtB,KAAAjB,UACA,OAAAR,EAAAyB,KAAAuE,gBAAA9C,GAAAzB,KAAA6E,aAAApD,EAAAlD,GAEA,QAAA0G,KACA,GAAA1G,GAAAsB,EAAAyB,MAAAtB,KAAAjB,UACA,OAAAR,EAAAyB,KAAAyE,kBAAAhD,EAAAiD,MAAAjD,EAAAkD,OAAA3E,KAAA+E,eAAAtD,EAAAiD,MAAAjD,EAAAkD,MAAApG,GAEA,MArBAkD,GAAAnE,GAAA4H,GAAAC,QAAA1D,GAqBA,MAAA5B,EAAA4B,EAAAkD,MAAAH,EAAAF,EAAA,kBAAAzE,GAAA4B,EAAAkD,MAAAM,EAAAD,EAAAvD,EAAAkD,MAAAG,EAAAF,EAEA,QAAAQ,GAAAlC,GACA,MAAAA,GAAAmC,OAAAjJ,QAAA,OAAA,KAmBA,QAAAkJ,GAAA7D,GACA,MAAA,IAAA8D,QAAA,aAAAjI,GAAAkI,QAAA/D,GAAA,aAAA,KAEA,QAAAgE,GAAAhE,GACA,OAAAA,EAAA,IAAA4D,OAAAK,MAAA,SAEA,QAAAC,GAAAlE,EAAA5B,GAGA,QAAA+F,KAEA,IADA,GAAAhE,GAAA,KACAA,EAAAC,GAAAJ,EAAAG,GAAA5B,KAAAH,GAEA,QAAAgG,KAEA,IADA,GAAAjE,GAAA,GAAArD,EAAAsB,EAAAyB,MAAAtB,KAAAjB,aACA6C,EAAAC,GAAAJ,EAAAG,GAAA5B,KAAAzB,GARAkD,EAAAgE,EAAAhE,GAAAqE,IAAAC,EACA,IAAAlE,GAAAJ,EAAAtF,MASA,OAAA,kBAAA0D,GAAAgG,EAAAD,EAEA,QAAAG,GAAAtE,GACA,GAAAuE,GAAAV,EAAA7D,EACA,OAAA,UAAA7D,EAAAiC,GACA,GAAAoG,EAAArI,EAAAsI,UAAA,MAAArG,GAAAoG,EAAAE,IAAA1E,GAAAwE,EAAApD,OAAApB,EACA,IAAAwE,GAAArI,EAAAwI,aAAA,UAAA,EACAvG,IACAmG,EAAAK,UAAA,EACAL,EAAAM,KAAAL,IAAArI,EAAAiH,aAAA,QAAAO,EAAAa,EAAA,IAAAxE,KAEA7D,EAAAiH,aAAA,QAAAO,EAAAa,EAAA7J,QAAA4J,EAAA,QAoBA,QAAAO,GAAA9E,EAAA5B,EAAA2G,GACA,QAAAC,KACAzG,KAAA0G,MAAAC,eAAAlF,GAEA,QAAAmF,KACA5G,KAAA0G,MAAAG,YAAApF,EAAA5B,EAAA2G,GAEA,QAAAM,KACA,GAAAvI,GAAAsB,EAAAyB,MAAAtB,KAAAjB,UACA,OAAAR,EAAAyB,KAAA0G,MAAAC,eAAAlF,GAAAzB,KAAA0G,MAAAG,YAAApF,EAAAlD,EAAAiI,GAEA,MAAA,OAAA3G,EAAA4G,EAAA,kBAAA5G,GAAAiH,EAAAF,EAUA,QAAAG,GAAAtF,EAAA5B,GACA,QAAAmH,WACAhH,MAAAyB,GAEA,QAAAwF,KACAjH,KAAAyB,GAAA5B,EAEA,QAAAqH,KACA,GAAA3I,GAAAsB,EAAAyB,MAAAtB,KAAAjB,UACA,OAAAR,QAAAyB,MAAAyB,GAAAzB,KAAAyB,GAAAlD,EAEA,MAAA,OAAAsB,EAAAmH,EAAA,kBAAAnH,GAAAqH,EAAAD,EA4BA,QAAAE,GAAA1F,GACA,QAAAvB,KACA,GAAApC,GAAAkC,KAAAnC,cAAAuJ,EAAApH,KAAAqH,YACA,OAAAD,GAAAtJ,EAAAwJ,gBAAAF,EAAA3F,GAAA3D,EAAAyJ,cAAA9F,GAEA,QAAA+F,KACA,MAAAxH,MAAAnC,cAAAyJ,gBAAA7F,EAAAiD,MAAAjD,EAAAkD,OAEA,MAAA,kBAAAlD,GAAAA,GAAAA,EAAAnE,GAAA4H,GAAAC,QAAA1D,IAAAkD,MAAA6C,EAAAtH,EAYA,QAAAuH,KACA,GAAAC,GAAA1H,KAAA2H,UACAD,IAAAA,EAAAE,YAAA5H,MAiFA,QAAA6H,GAAAC,GACA,OACAC,SAAAD,GAoBA,QAAAE,GAAA/D,GACA,MAAA,YACA,MAAAgE,IAAAjI,KAAAiE,IAmBA,QAAAiE,GAAAC,GAEA,MADApJ,WAAA5C,SAAAgM,EAAAjK,GACA,SAAAC,EAAAC,GACA,MAAAD,IAAAC,EAAA+J,EAAAhK,EAAA4J,SAAA3J,EAAA2J,WAAA5J,GAAAC,GAQA,QAAAgK,GAAAvE,EAAAwE,GACA,IAAA,GAAAC,GAAA,EAAAC,EAAA1E,EAAA1H,OAAAoM,EAAAD,EAAAA,IACA,IAAA,GAAA1K,GAAA4K,EAAA3E,EAAAyE,GAAA1G,EAAA,EAAAC,EAAA2G,EAAArM,OAAA0F,EAAAD,EAAAA,KACAhE,EAAA4K,EAAA5G,KAAAyG,EAAAzK,EAAAgE,EAAA0G,EAGA,OAAAzE,GA0BA,QAAA4E,GAAAC,GAEA,MADA5E,IAAA4E,EAAAC,IACAD,EA+BA,QAAAE,GAAAC,GACA,GAAAC,GAAAC,CACA,OAAA,UAAA5J,EAAAyC,EAAA0G,GACA,GAAA1K,GAAA4K,EAAAK,EAAAP,GAAAU,OAAAnH,EAAA2G,EAAArM,MAGA,KAFAmM,GAAAS,IAAAA,EAAAT,EAAAQ,EAAA,GACAlH,GAAAkH,IAAAA,EAAAlH,EAAA,KACAhE,EAAA4K,EAAAM,OAAAA,EAAAjH,IACA,MAAAjE,IAsCA,QAAAqL,GAAAtF,EAAAjB,EAAAwG,GAKA,QAAAC,KACA,GAAA9G,GAAArC,KAAAyB,EACAY,KACArC,KAAAoJ,oBAAAzF,EAAAtB,EAAAA,EAAAgH,SACArJ,MAAAyB,IAGA,QAAA6H,KACA,GAAAjH,GAAAkH,EAAA7G,EAAA8G,GAAAzK,WACAoK,GAAAM,KAAAzJ,MACAA,KAAA0J,iBAAA/F,EAAA3D,KAAAyB,GAAAY,EAAAA,EAAAgH,EAAAH,GACA7G,EAAApC,EAAAyC,EAEA,QAAAiH,KACA,GAAAC,GAAA5D,EAAA,GAAAT,QAAA,eAAAjI,GAAAkI,QAAA7B,GAAA,IACA,KAAA,GAAAlC,KAAAzB,MACA,GAAA4J,EAAAnI,EAAAmI,MAAA5D,GAAA,CACA,GAAA3D,GAAArC,KAAAyB,EACAzB,MAAAoJ,oBAAAQ,EAAA,GAAAvH,EAAAA,EAAAgH,SACArJ,MAAAyB,IAvBA,GAAAA,GAAA,OAAAkC,EAAA/B,EAAA+B,EAAAlH,QAAA,KAAA8M,EAAAM,CACAjI,GAAA,IAAA+B,EAAAA,EAAApD,MAAA,EAAAqB,GACA,IAAAkI,GAAAC,GAAApH,IAAAgB,EAyBA,OAxBAmG,KAAAnG,EAAAmG,EAAAP,EAAAS,GAwBApI,EAAAc,EAAA4G,EAAAH,EAAAzG,EAAAV,EAAA2H,EAWA,QAAAE,GAAAnH,EAAAc,GACA,MAAA,UAAAL,GACA,GAAA8G,GAAA3M,GAAA8E,KACA9E,IAAA8E,MAAAe,EACAK,EAAA,GAAAxD,KAAA+H,QACA,KACArF,EAAApB,MAAAtB,KAAAwD,GACA,QACAlG,GAAA8E,MAAA6H,IAIA,QAAAD,GAAAtH,EAAAc,GACA,GAAAnB,GAAAwH,EAAAnH,EAAAc,EACA,OAAA,UAAAL,GACA,GAAAhC,GAAAnB,KAAAkK,EAAA/G,EAAAgH,aACAD,KAAAA,IAAA/I,GAAA,EAAA+I,EAAAE,wBAAAjJ,KACAkB,EAAAoH,KAAAtI,EAAAgC,IAKA,QAAAkH,GAAAzM,GACA,GAAA6D,GAAA,oBAAA6I,GAAAC,EAAA,QAAA9I,EAAA+I,EAAAlN,GAAAmN,OAAAzM,EAAAJ,IAAA4E,GAAA,YAAAf,EAAAsB,GAAAP,GAAA,YAAAf,EAAAsB,GAAAP,GAAA,cAAAf,EAAAsB,EAIA,IAHA,MAAA2H,KACAA,GAAA,iBAAA9M,IAAA,EAAA2D,EAAA3D,EAAA8I,MAAA,eAEAgE,GAAA,CACA,GAAAhE,GAAA/I,EAAAC,GAAA8I,MAAA+D,EAAA/D,EAAAgE,GACAhE,GAAAgE,IAAA,OAEA,MAAA,UAAAC,GAGA,GAFAH,EAAAhI,GAAAf,EAAA,MACAiJ,KAAAhE,EAAAgE,IAAAD,GACAE,EAAA,CACA,GAAAC,GAAA,WACAJ,EAAAhI,GAAA+H,EAAA,MAEAC,GAAAhI,GAAA+H,EAAA,WACAxH,IACA6H,MACA,GACAC,WAAAD,EAAA,KAQA,QAAAE,GAAAC,EAAA5H,GACAA,EAAA6H,iBAAA7H,EAAAA,EAAA6H,eAAA,GACA,IAAAC,GAAAF,EAAAG,iBAAAH,CACA,IAAAE,EAAAE,eAAA,CACA,GAAAC,GAAAH,EAAAE,gBACA,IAAA,EAAAE,GAAA,CACA,GAAAC,GAAAtN,EAAA+M,EACA,IAAAO,EAAAC,SAAAD,EAAAE,QAAA,CACAP,EAAA3N,GAAAmN,OAAA,QAAAgB,OAAA,OAAA/E,OACAgF,SAAA,WACAC,IAAA,EACA/M,KAAA,EACAgN,OAAA,EACAC,QAAA,EACAC,OAAA,QACA,YACA,IAAAC,GAAAd,EAAA,GAAA,GAAAe,cACAX,MAAAU,EAAAE,GAAAF,EAAA5I,GACA8H,EAAApI,UAMA,MAHAwI,KAAAD,EAAA7M,EAAA4E,EAAA+I,MAAAd,EAAAe,EAAAhJ,EAAAiJ,QAAAhB,EAAA7M,EAAA4E,EAAAkJ,QACAjB,EAAAe,EAAAhJ,EAAAmJ,SACAlB,EAAAA,EAAAmB,gBAAAxB,EAAAiB,eAAAQ,YACApB,EAAA7M,EAAA6M,EAAAe,GAEA,GAAAM,GAAA1B,EAAA2B,uBACA,QAAAvJ,EAAAkJ,QAAAI,EAAA7N,KAAAmM,EAAA4B,WAAAxJ,EAAAmJ,QAAAG,EAAAd,IAAAZ,EAAA6B,WA2DA,QAAAC,KACA,MAAAvP,IAAA8E,MAAA4I,eAAA,GAAA8B,WAWA,QAAAC,GAAAxO,GACA,MAAAA,GAAA,EAAA,EAAA,EAAAA,EAAA,GAAA,EAEA,QAAAyO,GAAA7O,EAAAC,EAAA6H,GACA,OAAA7H,EAAA,GAAAD,EAAA,KAAA8H,EAAA,GAAA9H,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAA8H,EAAA,GAAA9H,EAAA,IAEA,QAAA8O,IAAA1O,GACA,MAAAA,GAAA,EAAA,EAAA,GAAAA,EAAA2O,GAAAvQ,KAAAwQ,KAAA5O,GAEA,QAAA6O,IAAA7O,GACA,MAAAA,GAAA,EAAA8O,GAAA,GAAA9O,GAAA8O,GAAA1Q,KAAA2Q,KAAA/O,GAEA,QAAAgP,IAAAhP,GACA,QAAAA,EAAA5B,KAAA6Q,IAAAjP,IAAA,EAAAA,GAAA,EAEA,QAAAkP,IAAAlP,GACA,QAAAA,EAAA5B,KAAA6Q,IAAAjP,IAAA,EAAAA,GAAA,EAEA,QAAAmP,IAAAnP,GACA,QAAAA,EAAA5B,KAAA6Q,IAAA,EAAAjP,IAAA,IAAAA,EAAA,GAEA,QAAAoP,IAAApP,GACA,OAAAA,EAAA5B,KAAAiR,IAAArP,EAAA,IAAAA,EAkSA,QAAAsP,OAKA,QAAAC,IAAAC,EAAA7K,EAAAb,GACA,MAAArC,gBAAA8N,KAAA9N,KAAA+N,GAAAA,EAAA/N,KAAAkD,GAAAA,OAAAlD,KAAAqC,GAAAA,IAAAtD,UAAA5C,OAAA,EAAA4R,YAAAD,IAAA,GAAAA,IAAAC,EAAAA,EAAAA,EAAA7K,EAAA6K,EAAA1L,GAAA2L,GAAA,GAAAD,EAAAE,GAAAH,IAAA,GAAAA,IAAAC,EAAA7K,EAAAb,GAcA,QAAA6L,IAAAH,EAAA7K,EAAAb,GAOA,QAAA8L,GAAAJ,GAEA,MADAA,GAAA,IAAAA,GAAA,IAAA,EAAAA,IAAAA,GAAA,KACA,GAAAA,EAAAK,GAAAC,EAAAD,GAAAL,EAAA,GACA,IAAAA,EAAAM,EACA,IAAAN,EAAAK,GAAAC,EAAAD,IAAA,IAAAL,GAAA,GACAK,EAEA,QAAAE,GAAAP,GACA,MAAApR,MAAA4R,MAAA,IAAAJ,EAAAJ,IAdA,GAAAK,GAAAC,CAgBA,OAfAN,GAAAtP,MAAAsP,GAAA,GAAAA,GAAA,KAAA,EAAAA,EAAA,IAAAA,EACA7K,EAAAzE,MAAAyE,GAAA,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAAA,EAAAA,EACAb,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAAA,EAAAA,EACAgM,EAAA,IAAAhM,EAAAA,GAAA,EAAAa,GAAAb,EAAAa,EAAAb,EAAAa,EACAkL,EAAA,EAAA/L,EAAAgM,EAWA,GAAAG,IAAAF,EAAAP,EAAA,KAAAO,EAAAP,GAAAO,EAAAP,EAAA,MAGA,QAAAU,IAAAV,EAAA9H,EAAA5D,GACA,MAAArC,gBAAAyO,KAAAzO,KAAA+N,GAAAA,EAAA/N,KAAAiG,GAAAA,OAAAjG,KAAAqC,GAAAA,IAAAtD,UAAA5C,OAAA,EAAA4R,YAAAU,IAAA,GAAAA,IAAAV,EAAAA,EAAAA,EAAA9H,EAAA8H,EAAA1L,GAAA0L,YAAAW,IAAAC,GAAAZ,EAAA1L,EAAA0L,EAAA5P,EAAA4P,EAAA3P,GAAAuQ,IAAAZ,EAAAa,IAAAb,EAAAzQ,GAAAuR,IAAAd,IAAAe,EAAAf,EAAAgB,EAAAhB,EAAA3P,IAAAiE,EAAA0L,EAAA5P,EAAA4P,EAAA3P,GAAA,GAAAqQ,IAAAV,EAAA9H,EAAA5D,GAYA,QAAA2M,IAAAjB,EAAA9H,EAAA5D,GAGA,MAFA5D,OAAAsP,KAAAA,EAAA,GACAtP,MAAAwH,KAAAA,EAAA,GACA,GAAAyI,IAAArM,EAAA1F,KAAAsS,IAAAlB,GAAAmB,IAAAjJ,EAAAtJ,KAAAiR,IAAAG,GAAA9H,GAGA,QAAAyI,IAAArM,EAAAlE,EAAAC,GACA,MAAA4B,gBAAA0O,KAAA1O,KAAAqC,GAAAA,EAAArC,KAAA7B,GAAAA,OAAA6B,KAAA5B,GAAAA,IAAAW,UAAA5C,OAAA,EAAAkG,YAAAqM,IAAA,GAAAA,IAAArM,EAAAA,EAAAA,EAAAlE,EAAAkE,EAAAjE,GAAAiE,YAAAoM,IAAAO,GAAA3M,EAAA0L,EAAA1L,EAAA4D,EAAA5D,EAAAA,GAAAuM,IAAAvM,EAAAmM,GAAAnM,IAAAyM,EAAAzM,EAAA0M,EAAA1M,EAAAjE,GAAA,GAAAsQ,IAAArM,EAAAlE,EAAAC,GAcA,QAAA+Q,IAAA9M,EAAAlE,EAAAC,GACA,GAAA+N,IAAA9J,EAAA,IAAA,IAAA9D,EAAA4N,EAAAhO,EAAA,IAAAmE,EAAA6J,EAAA/N,EAAA,GAIA,OAHAG,GAAA6Q,GAAA7Q,GAAA8Q,GACAlD,EAAAiD,GAAAjD,GAAAmD,GACAhN,EAAA8M,GAAA9M,GAAAiN,GACA,GAAAf,IAAAgB,GAAA,UAAAjR,EAAA,UAAA4N,EAAA,SAAA7J,GAAAkN,IAAA,QAAAjR,EAAA,UAAA4N,EAAA,QAAA7J,GAAAkN,GAAA,SAAAjR,EAAA,SAAA4N,EAAA,UAAA7J,IAEA,QAAAqM,IAAAtM,EAAAlE,EAAAC,GACA,MAAAiE,GAAA,EAAA,GAAAoM,IAAA9R,KAAA8S,MAAArR,EAAAD,GAAAuR,GAAA/S,KAAAgT,KAAAxR,EAAAA,EAAAC,EAAAA,GAAAiE,GAAA,GAAAoM,IAAApQ,EAAAA,EAAAA,EAAAA,EAAAgE,GAEA,QAAA+M,IAAA7Q,GACA,MAAAA,GAAA,WAAAA,EAAAA,EAAAA,GAAAA,EAAA,EAAA,IAAA,SAEA,QAAAqR,IAAArR,GACA,MAAAA,GAAA,QAAA5B,KAAAkT,IAAAtR,EAAA,EAAA,GAAA,SAAAA,EAAA,EAAA,GAEA,QAAAiR,IAAAV,GACA,MAAAnS,MAAA4R,MAAA,KAAA,QAAAO,EAAA,MAAAA,EAAA,MAAAnS,KAAAkT,IAAAf,EAAA,EAAA,KAAA,OAGA,QAAAN,IAAAM,EAAAC,EAAA3Q,GACA,MAAA4B,gBAAAwO,KAAAxO,KAAA8O,IAAAA,EAAA9O,KAAA+O,IAAAA,OAAA/O,KAAA5B,IAAAA,IAAAW,UAAA5C,OAAA,EAAA2S,YAAAN,IAAA,GAAAA,IAAAM,EAAAA,EAAAA,EAAAC,EAAAD,EAAA1Q,GAAA4P,GAAA,GAAAc,EAAAN,GAAAN,IAAA,GAAAM,IAAAM,EAAAC,EAAA3Q,GAEA,QAAA0R,IAAAjQ,GACA,MAAA,IAAA2O,IAAA3O,GAAA,GAAAA,GAAA,EAAA,IAAA,IAAAA,GAEA,QAAAkQ,IAAAlQ,GACA,MAAAiQ,IAAAjQ,GAAA,GAsBA,QAAAmQ,IAAA7B,GACA,MAAA,IAAAA,EAAA,IAAAxR,KAAAsT,IAAA,EAAA9B,GAAA+B,SAAA,IAAAvT,KAAAwT,IAAA,IAAAhC,GAAA+B,SAAA,IAEA,QAAAlC,IAAA3Q,EAAAwR,EAAAuB,GACA,GAAAhC,GAAAC,EAAAgC,EAAAvB,EAAA,EAAAC,EAAA,EAAA3Q,EAAA,CAEA,IADAgQ,EAAA,mBAAAkC,KAAAjT,EAAAA,EAAAkT,eAGA,OADAlC,EAAAD,EAAA,GAAA1I,MAAA,KACA0I,EAAA,IACA,IAAA,MAEA,MAAAgC,GAAAtU,WAAAuS,EAAA,IAAAvS,WAAAuS,EAAA,IAAA,IAAAvS,WAAAuS,EAAA,IAAA,IAGA,KAAA,MAEA,MAAAQ,GAAA2B,GAAAnC,EAAA,IAAAmC,GAAAnC,EAAA,IAAAmC,GAAAnC,EAAA,KAIA,OAAAgC,EAAAI,GAAA9N,IAAAtF,IACAwR,EAAAwB,EAAAvB,EAAAuB,EAAAtB,EAAAsB,EAAAjS,IAEA,MAAAf,GAAA,MAAAA,EAAAqE,OAAA,IAAAjD,MAAA4R,EAAAK,SAAArT,EAAAkD,MAAA,GAAA,OACA,IAAAlD,EAAAlB,QACA2S,GAAA,KAAAuB,IAAA,EACAvB,EAAAA,GAAA,EAAAA,EACAC,EAAA,IAAAsB,EACAtB,EAAAA,GAAA,EAAAA,EACA3Q,EAAA,GAAAiS,EACAjS,EAAAA,GAAA,EAAAA,GACA,IAAAf,EAAAlB,SACA2S,GAAA,SAAAuB,IAAA,GACAtB,GAAA,MAAAsB,IAAA,EACAjS,EAAA,IAAAiS,IAGAxB,EAAAC,EAAAC,EAAA3Q,IAEA,QAAA6P,IAAAa,EAAAC,EAAA3Q,GACA,GAAA2P,GAAA7K,EAAAiN,EAAAxT,KAAAwT,IAAArB,GAAA,IAAAC,GAAA,IAAA3Q,GAAA,KAAA6R,EAAAtT,KAAAsT,IAAAnB,EAAAC,EAAA3Q,GAAAe,EAAA8Q,EAAAE,EAAA9N,GAAA4N,EAAAE,GAAA,CASA,OARAhR,IACA+D,EAAA,GAAAb,EAAAlD,GAAA8Q,EAAAE,GAAAhR,GAAA,EAAA8Q,EAAAE,GACApC,EAAAe,GAAAmB,GAAAlB,EAAA3Q,GAAAe,GAAAf,EAAA2Q,EAAA,EAAA,GAAAA,GAAAkB,GAAA7R,EAAA0Q,GAAA3P,EAAA,GAAA2P,EAAAC,GAAA5P,EAAA,EACA4O,GAAA,KAEAA,EAAA1P,EAAAA,EACA6E,EAAAb,EAAA,GAAA,EAAAA,EAAA,EAAA0L,GAEA,GAAAD,IAAAC,EAAA7K,EAAAb,GAEA,QAAAuM,IAAAE,EAAAC,EAAA3Q,GACA0Q,EAAA6B,GAAA7B,GACAC,EAAA4B,GAAA5B,GACA3Q,EAAAuS,GAAAvS,EACA,IAAAG,GAAAqR,IAAA,SAAAd,EAAA,SAAAC,EAAA,SAAA3Q,GAAAiR,IAAAlD,EAAAyD,IAAA,SAAAd,EAAA,SAAAC,EAAA,QAAA3Q,GAAAkR,IAAAhN,EAAAsN,IAAA,SAAAd,EAAA,QAAAC,EAAA,SAAA3Q,GAAAmR,GACA,OAAAb,IAAA,IAAAvC,EAAA,GAAA,KAAA5N,EAAA4N,GAAA,KAAAA,EAAA7J,IAEA,QAAAqO,IAAA7B,GACA,OAAAA,GAAA,MAAA,OAAAA,EAAA,MAAAnS,KAAAkT,KAAAf,EAAA,MAAA,MAAA,KAEA,QAAA0B,IAAAvK,GACA,GAAAgG,GAAAnQ,WAAAmK,EACA,OAAA,MAAAA,EAAAvE,OAAAuE,EAAA9J,OAAA,GAAAQ,KAAA4R,MAAA,KAAAtC,GAAAA,EA2JA,QAAA2E,IAAAzC,GACA,MAAA,kBAAAA,GAAAA,EAAA,WACA,MAAAA,IAKA,QAAA0C,IAAAC,GACA,MAAA,UAAAC,EAAAC,EAAA3I,GAGA,MAFA,KAAAtJ,UAAA5C,QAAA,kBAAA6U,KAAA3I,EAAA2I,EACAA,EAAA,MACAC,GAAAF,EAAAC,EAAAF,EAAAzI,IAGA,QAAA4I,IAAAF,EAAAC,EAAAF,EAAAzI,GAMA,QAAA6I,KACA,GAAAC,GAAAC,EAAAC,EAAAD,MACA,KAAAA,GAAAE,GAAAD,IAAAD,GAAA,KAAA,IAAAA,GAAA,MAAAA,EAAA,CACA,IACAD,EAAAL,EAAArH,KAAA8H,EAAAF,GACA,MAAAlO,GAEA,WADAhB,GAAAqP,MAAA/H,KAAA8H,EAAApO,GAGAhB,EAAAsP,KAAAhI,KAAA8H,EAAAJ,OAEAhP,GAAAqP,MAAA/H,KAAA8H,EAAAF,GAhBA,GAAAE,MAAApP,EAAA7E,GAAA6E,SAAA,aAAA,WAAA,OAAA,SAAAuP,KAAAL,EAAA,GAAAM,gBAAAC,EAAA,IAwEA,QAvEA5R,KAAA6R,gBAAA,mBAAAR,KAAA,oBAAA/K,KAAAyK,KAAAM,EAAA,GAAAQ,iBACA,UAAAR,GAAAA,EAAAS,OAAAT,EAAAU,QAAAb,EAAAG,EAAAW,mBAAA,WACAX,EAAAY,WAAA,GAAAf,KAgBAG,EAAAa,WAAA,SAAA9P,GACA,GAAA6H,GAAA3M,GAAA8E,KACA9E,IAAA8E,MAAAA,CACA,KACAD,EAAAgQ,SAAA1I,KAAA8H,EAAAF,GACA,QACA/T,GAAA8E,MAAA6H,IAGAsH,EAAAa,OAAA,SAAA3Q,EAAA5B,GAEA,MADA4B,IAAAA,EAAA,IAAA8O,cACAxR,UAAA5C,OAAA,EAAAuV,EAAAjQ,IACA,MAAA5B,QAAA6R,GAAAjQ,GAAAiQ,EAAAjQ,GAAA5B,EAAA,GACA0R,IAEAA,EAAAP,SAAA,SAAAnR,GACA,MAAAd,WAAA5C,QACA6U,EAAA,MAAAnR,EAAA,KAAAA,EAAA,GACA0R,GAFAP,GAIAO,EAAAK,aAAA,SAAA/R,GACA,MAAAd,WAAA5C,QACAyV,EAAA/R,EACA0R,GAFAK,GAIAL,EAAAT,SAAA,SAAAjR,GAEA,MADAiR,GAAAjR,EACA0R,IAEA,MAAA,QAAAc,QAAA,SAAAhR,GACAkQ,EAAAlQ,GAAA,WACA,MAAAkQ,GAAAe,KAAAhR,MAAAiQ,GAAAlQ,GAAAuB,OAAA4G,GAAAzK,gBAGAwS,EAAAe,KAAA,SAAAjR,EAAAyG,EAAAO,GAIA,GAHA,IAAAtJ,UAAA5C,QAAA,kBAAA2L,KAAAO,EAAAP,EAAAA,EAAA,MACAuJ,EAAAkB,KAAAlR,EAAA0P,GAAA,GACA,MAAAC,GAAA,UAAAU,KAAAA,EAAA,OAAAV,EAAA,QACAK,EAAAmB,iBAAA,IAAA,GAAA/Q,KAAAiQ,GAAAL,EAAAmB,iBAAA/Q,EAAAiQ,EAAAjQ,GAQA,OAPA,OAAAuP,GAAAK,EAAAoB,kBAAApB,EAAAoB,iBAAAzB,GACA,MAAAY,IAAAP,EAAAO,aAAAA,GACA,MAAAvJ,GAAAkJ,EAAA/O,GAAA,QAAA6F,GAAA7F,GAAA,OAAA,SAAA6O,GACAhJ,EAAA,KAAAgJ,KAEAlP,EAAAuQ,WAAAjJ,KAAA8H,EAAAF,GACAA,EAAAiB,KAAA,MAAAxK,EAAA,KAAAA,GACAyJ,GAEAA,EAAAoB,MAAA,WAEA,MADAtB,GAAAsB,QACApB,GAEAjU,GAAAsV,OAAArB,EAAApP,EAAA,MACA,MAAAkG,EAAAkJ,EAAAA,EAAA5O,IAAAkQ,GAAAxK,IAEA,QAAAwK,IAAAxK,GACA,MAAA,KAAAA,EAAAlM,OAAA,SAAAqV,EAAAH,GACAhJ,EAAA,MAAAmJ,EAAAH,EAAA,OACAhJ,EAEA,QAAAiJ,IAAAD,GACA,GAAA1N,GAAA0N,EAAAO,YACA,OAAAjO,IAAA,SAAAA,EAAA0N,EAAAP,SAAAO,EAAAyB,aA+HA,QAAAC,MACA,GAAAC,GAAAC,KAAAC,EAAAC,KAAAH,CACAE,GAAA,IACAE,SAAAF,KACAG,aAAAC,IACAA,GAAAzI,WAAAkI,GAAAG,IAEAK,GAAA,IAEAA,GAAA,EACAC,GAAAT,KAOA,QAAAE,MACA,GAAAD,GAAAS,KAAAT,KAEA,KADAU,GAAAC,GACAD,IACAV,GAAAU,GAAAE,IAAAF,GAAAzH,EAAAyH,GAAAzN,EAAA+M,EAAAU,GAAAE,IACAF,GAAAA,GAAA7R,CAEA,OAAAmR,GAEA,QAAAG,MAEA,IADA,GAAAU,GAAAC,EAAAH,GAAApW,EAAAwW,EAAAA,EACAD,GACAA,EAAA7H,EACA6H,EAAAD,EAAAA,EAAAhS,EAAAiS,EAAAjS,EAAA8R,GAAAG,EAAAjS,GAEAiS,EAAAF,EAAArW,IAAAA,EAAAuW,EAAAF,GACAE,GAAAD,EAAAC,GAAAjS,EAIA,OADAmS,IAAAH,EACAtW,EAEA,QAAA0W,IAAA1V,EAAA2V,GACA,MAAAA,IAAA3V,EAAA5B,KAAAwX,KAAAxX,KAAAyX,IAAA7V,GAAA5B,KAAA0X,MAAA,GAgBA,QAAAC,IAAAnV,EAAAyC,GACA,GAAAvC,GAAA1C,KAAAkT,IAAA,GAAA,EAAAjT,GAAA,EAAAgF,GACA,QACA2S,MAAA3S,EAAA,EAAA,SAAAzC,GACA,MAAAA,GAAAE,GACA,SAAAF,GACA,MAAAA,GAAAE,GAEAmV,OAAArV,GAGA,QAAAsV,IAAAC,GACA,GAAAC,GAAAD,EAAAE,QAAAC,EAAAH,EAAAI,UAAAC,EAAAL,EAAAM,SAAAC,EAAAP,EAAAQ,SAAAC,EAAAJ,GAAAF,EAAA,SAAAhV,EAAAuV,GAEA,IADA,GAAAxT,GAAA/B,EAAA1D,OAAAyX,KAAAtL,EAAA,EAAAyG,EAAAgG,EAAA,GAAA5Y,EAAA,EACAyF,EAAA,GAAAmN,EAAA,IACA5S,EAAA4S,EAAA,EAAAqG,IAAArG,EAAApS,KAAAsT,IAAA,EAAAmF,EAAAjZ,IACAyX,EAAAhT,KAAAf,EAAAwV,UAAAzT,GAAAmN,EAAAnN,EAAAmN,OACA5S,GAAA4S,EAAA,GAAAqG,KACArG,EAAAgG,EAAAzM,GAAAA,EAAA,GAAAyM,EAAA5Y,OAEA,OAAAyX,GAAA0B,UAAAtY,KAAA6X,IACA5T,CACA,OAAA,UAAAsU,GACA,GAAA3L,GAAA4L,GAAAlF,KAAAiF,GAAAE,EAAA7L,EAAA,IAAA,IAAA8L,EAAA9L,EAAA,IAAA,IAAA7N,EAAA6N,EAAA,IAAA,IAAA4K,EAAA5K,EAAA,IAAA,GAAA+L,EAAA/L,EAAA,GAAAwL,GAAAxL,EAAA,GAAAgM,EAAAhM,EAAA,GAAAiM,EAAAjM,EAAA,GAAAjG,EAAAiG,EAAA,GAAA2K,EAAA,EAAAuB,EAAA,GAAAC,EAAA,GAAA1Z,GAAA,EAAA2Z,GAAA,CAMA,QALAH,IAAAA,GAAAA,EAAAR,UAAA,KACAM,GAAA,MAAAF,GAAA,MAAAC,KACAC,EAAAF,EAAA,IACAC,EAAA,KAEA/R,GACA,IAAA,IACAiS,GAAA,EACAjS,EAAA,GACA,MAEA,KAAA,IACA4Q,EAAA,IACAwB,EAAA,IACApS,EAAA,GACA,MAEA,KAAA,IACA4Q,EAAA,IACAwB,EAAA,IACApS,EAAA,GACA,MAEA,KAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,MAAA6Q,IAAAsB,EAAA,IAAAnS,EAAA4M,cAEA,KAAA,IACAyF,GAAA,CAEA,KAAA,IACA3Z,GAAA,EACAwZ,EAAA,CACA,MAEA,KAAA,IACAtB,EAAA,GACA5Q,EAAA,IAGA,MAAA6Q,IAAAsB,EAAAb,EAAA,GAAAc,EAAAd,EAAA,IACA,KAAAtR,GAAAkS,IAAAlS,EAAA,KACA,MAAAkS,IACA,KAAAlS,EAAAkS,EAAAlZ,KAAAsT,IAAA,EAAAtT,KAAAwT,IAAA,GAAA0F,KAAA,KAAAlS,GAAA,KAAAA,KAAAkS,EAAAlZ,KAAAsT,IAAA,EAAAtT,KAAAwT,IAAA,GAAA0F,MAEAlS,EAAAsS,GAAAtT,IAAAgB,IAAAuS,EACA,IAAAC,GAAAR,GAAAC,CACA,OAAA,UAAA/V,GACA,GAAAuW,GAAAL,CACA,IAAA1Z,GAAAwD,EAAA,EAAA,MAAA,EACA,IAAAwW,GAAA,EAAAxW,GAAA,IAAAA,GAAA,EAAA,EAAAA,GAAAA,GAAAA,EAAA,KAAA,MAAA9D,EAAA,GAAAA,CACA,IAAA,EAAAwY,EAAA,CACA,GAAA+B,GAAAhZ,GAAAiZ,aAAA1W,EAAAgW,EACAhW,GAAAyW,EAAA/B,MAAA1U,GACAuW,EAAAE,EAAA9B,OAAAuB,MAEAlW,IAAA0U,CAEA1U,GAAA8D,EAAA9D,EAAAgW,EACA,IAAAW,GAAAC,EAAA7U,EAAA/B,EAAA6W,YAAA,IACA,IAAA,EAAA9U,EAAA,CACA,GAAA0G,GAAA0N,EAAAnW,EAAA6W,YAAA,KAAA,EACA,GAAApO,GAAAkO,EAAA3W,EAAA4W,EAAA,KAAAD,EAAA3W,EAAAwV,UAAA,EAAA/M,GAAAmO,EAAA5W,EAAAwV,UAAA/M,QAEAkO,GAAA3W,EAAAwV,UAAA,EAAAzT,GACA6U,EAAA9B,EAAA9U,EAAAwV,UAAAzT,EAAA,IAEA+T,GAAAC,IAAAY,EAAArB,EAAAqB,EAAAzC,EAAAA,GACA,IAAA5X,GAAA2Z,EAAA3Z,OAAAqa,EAAAra,OAAAsa,EAAAta,QAAAga,EAAA,EAAAE,EAAAla,QAAA0P,EAAAuJ,EAAAjZ,EAAA,GAAAW,OAAAX,EAAAiZ,EAAAjZ,EAAA,GAAAa,KAAAyY,GAAA,EAIA,OAHAU,KAAAK,EAAArB,EAAAtJ,EAAA2K,EAAA3K,EAAA1P,OAAAiZ,EAAAqB,EAAAta,OAAA4X,EAAAA,IACAsC,GAAAP,EACAjW,EAAA2W,EAAAC,GACA,MAAAf,EAAAW,EAAAxW,EAAAgM,EAAA,MAAA6J,EAAA7J,EAAAwK,EAAAxW,EAAA,MAAA6V,EAAA7J,EAAAwJ,UAAA,EAAAlZ,IAAA,GAAAka,EAAAxW,EAAAgM,EAAAwJ,UAAAlZ,GAAAka,GAAAF,EAAAtW,EAAAgM,EAAAhM,IAAAuW,IAkCA,QAAAF,IAAA3X,GACA,MAAAA,GAAA,GAGA,QAAAoY,MACA3W,KAAAC,EAAA,GAAAwT,MAAA1U,UAAA5C,OAAA,EAAAsX,KAAAmD,IAAAtV,MAAAtB,KAAAjB,WAAAA,UAAA,IAiEA,QAAA8X,IAAAlS,EAAAmS,EAAApb,GACA,QAAA6S,GAAA7Q,GACA,GAAAqZ,GAAApS,EAAAjH,GAAAsZ,EAAAC,EAAAF,EAAA,EACA,OAAAC,GAAAtZ,EAAAA,EAAAqZ,EAAAA,EAAAC,EAEA,QAAA7C,GAAAzW,GAEA,MADAoZ,GAAApZ,EAAAiH,EAAA,GAAAuS,IAAAxZ,EAAA,IAAA,GACAA,EAEA,QAAAuZ,GAAAvZ,EAAA2B,GAEA,MADAyX,GAAApZ,EAAA,GAAAwZ,KAAAxZ,GAAA2B,GACA3B,EAEA,QAAAyZ,GAAAtD,EAAAC,EAAAsD,GACA,GAAA7Z,GAAA4W,EAAAN,GAAAwD,IACA,IAAAD,EAAA,EACA,KAAAtD,EAAAvW,GACA7B,EAAA6B,GAAA6Z,GAAAC,EAAAzW,KAAA,GAAA6S,OAAAlW,IACAuZ,EAAAvZ,EAAA,OAGA,MAAAuW,EAAAvW,GAAA8Z,EAAAzW,KAAA,GAAA6S,OAAAlW,IAAAuZ,EAAAvZ,EAAA,EAEA,OAAA8Z,GAEA,QAAAC,GAAAzD,EAAAC,EAAAsD,GACA,IACAF,GAAAP,EACA,IAAAY,GAAA,GAAAZ,GAEA,OADAY,GAAAtX,EAAA4T,EACAsD,EAAAI,EAAAzD,EAAAsD,GACA,QACAF,GAAAzD,MAGA9O,EAAA6S,MAAA7S,EACAA,EAAA4J,MAAAA,EACA5J,EAAAwP,KAAAA,EACAxP,EAAAsS,OAAAA,EACAtS,EAAAwS,MAAAA,CACA,IAAAI,GAAA5S,EAAA4S,IAAAE,GAAA9S,EAMA,OALA4S,GAAAC,MAAAD,EACAA,EAAAhJ,MAAAkJ,GAAAlJ,GACAgJ,EAAApD,KAAAsD,GAAAtD,GACAoD,EAAAN,OAAAQ,GAAAR,GACAM,EAAAJ,MAAAG,EACA3S,EAEA,QAAA8S,IAAApW,GACA,MAAA,UAAA3D,EAAA2B,GACA,IACA6X,GAAAP,EACA,IAAAY,GAAA,GAAAZ,GAEA,OADAY,GAAAtX,EAAAvC,EACA2D,EAAAkW,EAAAlY,GAAAY,EACA,QACAiX,GAAAzD,OAoDA,QAAAiE,IAAAhD,GAEA,QAAAiD,GAAAC,GAEA,QAAAva,GAAAK,GAEA,IADA,GAAAuI,GAAAiO,EAAAjI,EAAA4L,KAAAjW,EAAA,GAAA0G,EAAA,IACA1G,EAAAC,GACA,KAAA+V,EAAAE,WAAAlW,KACAiW,EAAAjX,KAAAgX,EAAArX,MAAA+H,EAAA1G,IACA,OAAAsS,EAAA6D,GAAA9R,EAAA2R,EAAAlW,SAAAE,OAAAqE,EAAA2R,EAAAlW,SAAAE,KACAqK,EAAA+L,EAAA/R,MAAAA,EAAAgG,EAAAvO,EAAA,MAAAwW,EAAA,MAAAjO,EAAA,IAAA,IAAAiO,IACA2D,EAAAjX,KAAAqF,GACAqC,EAAA1G,EAAA,EAIA,OADAiW,GAAAjX,KAAAgX,EAAArX,MAAA+H,EAAA1G,IACAiW,EAAA7a,KAAA,IAbA,GAAA6E,GAAA+V,EAAAzb,MAuCA,OAxBAkB,GAAAG,MAAA,SAAAqa,GACA,GAAA1Y,IACAgN,EAAA,KACA5D,EAAA,EACApJ,EAAA,EACA8Y,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,MACAzW,EAAA0W,EAAAnZ,EAAAyY,EAAAC,EAAA,EACA,IAAAjW,GAAAiW,EAAA1b,OAAA,MAAA,KACA,MAAAgD,KAAAA,EAAA8Y,EAAA9Y,EAAA8Y,EAAA,GAAA,GAAA9Y,EAAA+U,EACA,IAAAqE,GAAA,MAAApZ,EAAAkZ,GAAAnB,KAAAP,GAAAjZ,EAAA,IAAA6a,EAAA5B,GAAAO,GAMA,OALA,KAAA/X,GAAAzB,EAAA8a,YAAArZ,EAAAgN,EAAA,EAAAhN,EAAAmJ,GAAA,KAAAnJ,KAAA,KAAAA,IAAA,KAAAA,KACAzB,EAAA8a,YAAArZ,EAAAgN,EAAA,EAAA,GACAzO,EAAA8a,YAAArZ,EAAAgN,EAAA,EAAA,KAAAhN,IAAAA,EAAAqL,EAAA,GAAA,EAAA,EAAArL,EAAAsZ,GAAA/a,EAAAgb,SAAA,GAAA,EAAAvZ,EAAAqL,EAAA,EAAArL,EAAAwZ,GAAAjb,EAAAgb,SAAA,GAAA,IACAhb,EAAA8a,YAAArZ,EAAAgN,EAAAhN,EAAAoJ,EAAApJ,EAAAA,GACAzB,EAAAkb,SAAAzZ,EAAA8Y,GAAA9Y,EAAAkZ,EAAA,IAAA,GAAAlZ,EAAA+Y,EAAA/Y,EAAAkZ,EAAA,IAAAlZ,EAAAgZ,EAAAhZ,EAAAiZ,GACAG,EAAA7a,EAAAuC,EAAAvC,GAEAL,EAAA6S,SAAA,WACA,MAAA0H,IAEAva,EAEA,QAAAib,GAAA5a,EAAAka,EAAAC,EAAAvP,GAEA,IADA,GAAArC,GAAAiO,EAAAN,EAAAhS,EAAA,EAAAC,EAAA+V,EAAAzb,OAAAoM,EAAAsP,EAAA1b,OACA0F,EAAAD,GAAA,CACA,GAAA0G,GAAAC,EAAA,MAAA,EAEA,IADAtC,EAAA2R,EAAAE,WAAAlW,KACA,KAAAqE,GAGA,GAFA2N,EAAAgE,EAAAlW,OAAAE,KACAsS,EAAA2E,EAAAjF,IAAAmE,IAAAH,EAAAlW,OAAAE,KAAAgS,IACAM,IAAA5L,EAAA4L,EAAAxW,EAAAma,EAAAvP,IAAA,EAAA,MAAA,OACA,IAAArC,GAAA4R,EAAAC,WAAAxP,KACA,MAAA,GAGA,MAAAA,GA2HA,QAAAwQ,GAAApb,EAAAma,EAAAjW,GACAmX,EAAA1S,UAAA,CACA,IAAAxE,GAAAkX,EAAAzI,KAAAuH,EAAAtX,MAAAqB,GACA,OAAAC,IAAAnE,EAAA8M,EAAAwO,EAAArW,IAAAd,EAAA,GAAA0O,eAAA3O,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAA8c,GAAAvb,EAAAma,EAAAjW,GACAsX,EAAA7S,UAAA,CACA,IAAAxE,GAAAqX,EAAA5I,KAAAuH,EAAAtX,MAAAqB,GACA,OAAAC,IAAAnE,EAAA8M,EAAA2O,EAAAxW,IAAAd,EAAA,GAAA0O,eAAA3O,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAAid,GAAA1b,EAAAma,EAAAjW,GACAyX,EAAAhT,UAAA,CACA,IAAAxE,GAAAwX,EAAA/I,KAAAuH,EAAAtX,MAAAqB,GACA,OAAAC,IAAAnE,EAAA6K,EAAA+Q,EAAA3W,IAAAd,EAAA,GAAA0O,eAAA3O,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAAod,GAAA7b,EAAAma,EAAAjW,GACA4X,EAAAnT,UAAA,CACA,IAAAxE,GAAA2X,EAAAlJ,KAAAuH,EAAAtX,MAAAqB,GACA,OAAAC,IAAAnE,EAAA6K,EAAAkR,EAAA9W,IAAAd,EAAA,GAAA0O,eAAA3O,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAAud,GAAAhc,EAAAma,EAAAjW,GACA,MAAA0W,GAAA5a,EAAAsa,EAAA/R,EAAAiK,WAAA2H,EAAAjW,GAEA,QAAA+X,GAAAjc,EAAAma,EAAAjW,GACA,MAAA0W,GAAA5a,EAAAsa,EAAAzZ,EAAA2R,WAAA2H,EAAAjW,GAEA,QAAAgY,GAAAlc,EAAAma,EAAAjW,GACA,MAAA0W,GAAA5a,EAAAsa,EAAA6B,EAAA3J,WAAA2H,EAAAjW,GAEA,QAAAkY,GAAApc,EAAAma,EAAAjW,GACA,GAAAC,GAAAkY,EAAApX,IAAAkV,EAAAtX,MAAAqB,EAAAA,GAAA,GAAA2O,cACA,OAAA,OAAA1O,EAAA,IAAAnE,EAAAwW,EAAArS,EAAAD,GAlNA,GAAAoY,GAAAtF,EAAAuF,SAAAC,EAAAxF,EAAAhX,KAAAyc,EAAAzF,EAAAnX,KAAA6c,EAAA1F,EAAA2F,QAAAC,EAAA5F,EAAA6F,KAAAC,EAAA9F,EAAA+F,UAAAC,EAAAhG,EAAAiG,OAAAC,EAAAlG,EAAAmG,WA0DAlD,GAAAJ,IAAA,SAAAK,GAEA,QAAAva,GAAAK,GACA,IACAwZ,GAAAP,EACA,IAAAY,GAAA,GAAAL,GAEA,OADAK,GAAAtX,EAAAvC,EACAiH,EAAA4S,GACA,QACAL,GAAAzD,MARA,GAAA9O,GAAAgT,EAAAC,EAqBA,OAVAva,GAAAG,MAAA,SAAAqa,GACA,IACAX,GAAAP,EACA,IAAAjZ,GAAAiH,EAAAnH,MAAAqa,EACA,OAAAna,IAAAA,EAAAuC,EACA,QACAiX,GAAAzD,OAGApW,EAAA6S,SAAAvL,EAAAuL,SACA7S,GAEAsa,EAAAmD,MAAAnD,EAAAJ,IAAAuD,MAAAC,EACA,IAAAhB,GAAAzc,GAAAwI,MAAAoT,EAAA8B,GAAAV,GAAAnB,EAAA8B,GAAAX,GAAAvB,EAAAiC,GAAAR,GAAAxB,EAAAiC,GAAAT,GAAAhB,EAAAwB,GAAAN,GAAAjB,EAAAwB,GAAAP,GAAArB,EAAA2B,GAAAJ,GAAAtB,EAAA2B,GAAAL,EACAR,GAAA/H,QAAA,SAAA6B,EAAAtS,GACAmY,EAAAjX,IAAAoR,EAAA3D,cAAA3O,IAEA,IAAAoW,IACA7Z,EAAA,SAAAgB,GACA,MAAAqb,GAAArb,EAAAuZ,WAEAwC,EAAA,SAAA/b,GACA,MAAAmb,GAAAnb,EAAAuZ,WAEAta,EAAA,SAAAe,GACA,MAAAyb,GAAAzb,EAAAgc,aAEAC,EAAA,SAAAjc,GACA,MAAAub,GAAAvb,EAAAgc,aAEAlV,EAAA0R,EAAAqC,GACA7a,EAAA,SAAAA,EAAA+U,GACA,MAAAmH,IAAAlc,EAAAmc,UAAApH,EAAA,IAEA/Q,EAAA,SAAAhE,EAAA+U,GACA,MAAAmH,IAAAlc,EAAAmc,UAAApH,EAAA,IAEA+D,EAAA,SAAA9Y,EAAA+U,GACA,MAAAmH,IAAAlc,EAAAoc,WAAArH,EAAA,IAEAsH,EAAA,SAAArc,EAAA+U,GACA,MAAAmH,IAAAlc,EAAAoc,WAAA,IAAA,GAAArH,EAAA,IAEA5L,EAAA,SAAAnJ,EAAA+U,GACA,MAAAmH,IAAA,EAAAI,GAAAC,UAAAvc,GAAA+U,EAAA,IAEAkE,EAAA,SAAAjZ,EAAA+U,GACA,MAAAmH,IAAAlc,EAAAwc,kBAAAzH,EAAA,IAEA3L,EAAA,SAAApJ,EAAA+U,GACA,MAAAmH,IAAAlc,EAAAgc,WAAA,EAAAjH,EAAA,IAEAgE,EAAA,SAAA/Y,EAAA+U,GACA,MAAAmH,IAAAlc,EAAAyc,aAAA1H,EAAA,IAEAA,EAAA,SAAA/U,GACA,MAAAib,KAAAjb,EAAAoc,YAAA,MAEApD,EAAA,SAAAhZ,EAAA+U,GACA,MAAAmH,IAAAlc,EAAA0c,aAAA3H,EAAA,IAEAyE,EAAA,SAAAxZ,EAAA+U,GACA,MAAAmH,IAAAI,GAAAK,aAAA3c,GAAA+U,EAAA,IAEA1J,EAAA,SAAArL,GACA,MAAAA,GAAAuZ,UAEAD,EAAA,SAAAtZ,EAAA+U,GACA,MAAAmH,IAAAI,GAAAM,aAAA5c,GAAA+U,EAAA,IAEA3V,EAAAoZ,EAAAuC,GACAL,EAAAlC,EAAAwC,GACAhO,EAAA,SAAAhN,EAAA+U,GACA,MAAAmH,IAAAlc,EAAA6c,cAAA,IAAA9H,EAAA,IAEA+H,EAAA,SAAA9c,EAAA+U,GACA,MAAAmH,IAAAlc,EAAA6c,cAAA,IAAA9H,EAAA,IAEAmE,EAAA6D,GACAC,IAAA,WACA,MAAA,MAGAtD,GACA1a,EAAA2a,EACAoC,EAAAjC,EACA7a,EAAAgb,EACAgC,EAAA7B,EACAtT,EAAAyT,EACAva,EAAAid,GACAjZ,EAAAiZ,GACAnE,EAAAoE,GACAb,EAAAa,GACA/T,EAAAgU,GACAlE,EAAAmE,GACAhU,EAAAiU,GACAtE,EAAAuE,GACAvI,EAAA4F,EACA3B,EAAAuE,GACA/D,EAAAgE,GACAnS,EAAAoS,GACAnE,EAAAoE,GACAte,EAAAob,EACAE,EAAAD,EACAzN,EAAA2Q,GACAb,EAAAc,GACA1E,EAAA2E,GACAb,IAAAc,GAmCA,OAAAtF,GAOA,QAAA0D,IAAAxb,EAAA4V,EAAAL,GACA,GAAArZ,GAAA,EAAA8D,EAAA,IAAA,GAAAgY,GAAA9b,GAAA8D,EAAAA,GAAA,GAAA1D,EAAA0b,EAAA1b,MACA,OAAAJ,IAAAqZ,EAAAjZ,EAAA,GAAAW,OAAAsY,EAAAjZ,EAAA,GAAAa,KAAAyY,GAAAoC,EAAAA,GAEA,QAAAmD,IAAAkC,GACA,MAAA,IAAA3X,QAAA,OAAA2X,EAAApX,IAAAxI,GAAAkI,SAAAxI,KAAA,KAAA,IAAA,KAEA,QAAAie,IAAAiC,GAEA,IADA,GAAApX,GAAA,GAAA/F,GAAA6B,EAAA,GAAAC,EAAAqb,EAAA/gB,SACAyF,EAAAC,GAAAiE,EAAAhD,IAAAoa,EAAAtb,GAAA2O,cAAA3O,EACA,OAAAkE,GAEA,QAAA8W,IAAAlf,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,IAAAnE,EAAA8M,GAAA3I,EAAA,GAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAAwgB,IAAAjf,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,GACA,OAAAC,IAAAnE,EAAAib,GAAA9W,EAAA,GAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAA0gB,IAAAnf,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,GACA,OAAAC,IAAAnE,EAAA+a,GAAA5W,EAAA,GAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAA4gB,IAAArf,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,IAAAnE,EAAAyO,GAAAtK,EAAA,GAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAA2gB,IAAApf,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,IAAAnE,EAAAyO,EAAAiR,IAAAvb,EAAA,IAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAA6gB,IAAAtf,EAAAma,EAAAjW,GACA,MAAA,cAAA0E,KAAAuR,EAAAA,EAAAtX,MAAAqB,EAAAA,EAAA,KAAAlE,EAAA2a,GAAAR,EACAjW,EAAA,GAAA,GAEA,QAAAwb,IAAAje,GACA,MAAAA,IAAAA,EAAA,GAAA,KAAA,KAEA,QAAAqd,IAAA9e,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,IAAAnE,EAAA6K,EAAA1G,EAAA,GAAA,EAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAAigB,IAAA1e,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,IAAAnE,EAAAyB,GAAA0C,EAAA,GAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAAmgB,IAAA5e,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,IAAAnE,EAAA4K,GAAAzG,EAAA,GAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAAkgB,IAAA3e,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,IAAAnE,EAAAua,GAAApW,EAAA,GAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAAsgB,IAAA/e,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,IAAAnE,EAAAwa,GAAArW,EAAA,GAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAAugB,IAAAhf,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,IAAAnE,EAAAya,GAAAtW,EAAA,GAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAAogB,IAAA7e,EAAAma,EAAAjW,GACAub,GAAA9W,UAAA,CACA,IAAAxE,GAAAsb,GAAA7M,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,IAAAnE,EAAA0a,GAAAvW,EAAA,GAAAD,EAAAC,EAAA,GAAA1F,QAAA,GAEA,QAAA+f,IAAA/c,GACA,GAAAmD,GAAAnD,EAAAke,oBAAAC,EAAAhb,EAAA,EAAA,IAAA,IAAAib,EAAA3gB,GAAA0F,GAAA,GAAA,EAAAkb,EAAA5gB,GAAA0F,GAAA,EACA,OAAAgb,GAAAjC,GAAAkC,EAAA,IAAA,GAAAlC,GAAAmC,EAAA,IAAA,GAEA,QAAAP,IAAAvf,EAAAma,EAAAjW,GACA6b,GAAApX,UAAA,CACA,IAAAxE,GAAA4b,GAAAnN,KAAAuH,EAAAtX,MAAAqB,EAAAA,EAAA,GACA,OAAAC,GAAAD,EAAAC,EAAA,GAAA1F,OAAA,GAEA,QAAA4e,IAAA2C,GAEA,IADA,GAAA7b,GAAA6b,EAAAvhB,OAAAyF,EAAA,KACAA,EAAAC,GAAA6b,EAAA9b,GAAA,GAAA5B,KAAA0d,EAAA9b,GAAA,GACA,OAAA,UAAAlE,GAEA,IADA,GAAAkE,GAAA,EAAAqK,EAAAyR,EAAA9b,IACAqK,EAAA,GAAAvO,IAAAuO,EAAAyR,IAAA9b,EACA,OAAAqK,GAAA,GAAAvO,IAyBA,QAAAigB,OAiBA,QAAAC,IAAAzf,EAAAC,EAAA6L,GACA,GAAA1L,GAAA0L,EAAA/G,EAAA/E,EAAAC,EAAAyf,EAAAtf,EAAAJ,EAAA2f,EAAAvf,EAAAsf,CACA5T,GAAA2J,EAAAzV,EAAA2f,GAAA1f,EAAAyf,GASA,QAAAE,IAAAC,EAAAtb,GACAsb,GAAAC,GAAAC,eAAAF,EAAAra,OACAsa,GAAAD,EAAAra,MAAAqa,EAAAtb,GA2CA,QAAAyb,IAAAC,EAAA1b,EAAA2b,GACA,GAAAC,GAAA1c,EAAA,GAAAC,EAAAuc,EAAAjiB,OAAAkiB,CAEA,KADA3b,EAAA6b,cACA3c,EAAAC,GAAAyc,EAAAF,EAAAxc,GAAAc,EAAA0I,MAAAkT,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA5b,GAAA8b,UAEA,QAAAC,IAAAL,EAAA1b,GACA,GAAAd,GAAA,GAAAC,EAAAuc,EAAAjiB,MAEA,KADAuG,EAAAgc,iBACA9c,EAAAC,GAAAsc,GAAAC,EAAAxc,GAAAc,EAAA,EACAA,GAAAic,aAyBA,QAAAC,MAOA,QAAAC,GAAAC,EAAAC,GACAD,GAAA5P,GACA6P,EAAAA,EAAA7P,GAAA,EAAAhC,GAAA,CACA,IAAA8R,GAAAF,EAAAG,EAAAC,EAAAF,GAAA,EAAA,EAAA,GAAAG,EAAAD,EAAAF,EAAAI,EAAAziB,KAAAsS,IAAA8P,GAAAM,EAAA1iB,KAAAiR,IAAAmR,GAAA1f,EAAAigB,EAAAD,EAAAE,EAAAC,EAAAJ,EAAA/f,EAAA1C,KAAAsS,IAAAkQ,GAAAhR,EAAA9O,EAAA6f,EAAAviB,KAAAiR,IAAAuR,EACAM,IAAAtZ,IAAAxJ,KAAA8S,MAAAtB,EAAAoR,IACAN,EAAAH,EAAAU,EAAAJ,EAAAE,EAAAD,EAXA,GAAAK,GAAAC,EAAAV,EAAAO,EAAAF,CACAM,IAAAxU,MAAA,SAAA0T,EAAAC,GACAa,GAAAxU,MAAAyT,EACAI,GAAAS,EAAAZ,GAAA5P,GAAAsQ,EAAA7iB,KAAAsS,IAAA8P,GAAAY,EAAAZ,GAAA7P,GAAA,EAAAhC,GAAA,GACAoS,EAAA3iB,KAAAiR,IAAAmR,IASAa,GAAApB,QAAA,WACAK,EAAAa,EAAAC,IAGA,QAAAE,IAAAC,GACA,GAAAhB,GAAAgB,EAAA,GAAAf,EAAAe,EAAA,GAAAV,EAAAziB,KAAAsS,IAAA8P,EACA,QAAAK,EAAAziB,KAAAsS,IAAA6P,GAAAM,EAAAziB,KAAAiR,IAAAkR,GAAAniB,KAAAiR,IAAAmR,IAEA,QAAAgB,IAAA5hB,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAEA,QAAA4hB,IAAA7hB,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAEA,QAAA6hB,IAAA9hB,EAAAC,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GAEA,QAAA8hB,IAAAC,EAAA9gB,GACA,OAAA8gB,EAAA,GAAA9gB,EAAA8gB,EAAA,GAAA9gB,EAAA8gB,EAAA,GAAA9gB,GAEA,QAAA+gB,IAAAjhB,GACA,GAAAkD,GAAA1F,KAAAgT,KAAAxQ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAAkD,EACAlD,EAAA,IAAAkD,EACAlD,EAAA,IAAAkD,EAEA,QAAAge,IAAAC,GACA,OAAA3jB,KAAA8S,MAAA6Q,EAAA,GAAAA,EAAA,IAAAlT,GAAAkT,EAAA,KAEA,QAAAC,IAAApiB,EAAAC,GACA,MAAAxB,IAAAuB,EAAA,GAAAC,EAAA,IAAAoiB,IAAA5jB,GAAAuB,EAAA,GAAAC,EAAA,IAAAoiB,GA2JA,QAAAC,IAAA3B,EAAAC,GACAD,GAAA5P,EACA,IAAAkQ,GAAAziB,KAAAsS,IAAA8P,GAAA7P,GACAwR,IAAAtB,EAAAziB,KAAAsS,IAAA6P,GAAAM,EAAAziB,KAAAiR,IAAAkR,GAAAniB,KAAAiR,IAAAmR,IAEA,QAAA2B,IAAAniB,EAAA4N,EAAA7J,KACAqe,GACAC,KAAAriB,EAAAqiB,IAAAD,GACAE,KAAA1U,EAAA0U,IAAAF,GACAG,KAAAxe,EAAAwe,IAAAH,GAEA,QAAAI,MAWA,QAAAlC,GAAAC,EAAAC,GACAD,GAAA5P,EACA,IAAAkQ,GAAAziB,KAAAsS,IAAA8P,GAAA7P,IAAA3Q,EAAA6gB,EAAAziB,KAAAsS,IAAA6P,GAAA3S,EAAAiT,EAAAziB,KAAAiR,IAAAkR,GAAAxc,EAAA3F,KAAAiR,IAAAmR,GAAAvU,EAAA7N,KAAA8S,MAAA9S,KAAAgT,MAAAnF,EAAAwW,EAAA1e,EAAA2e,EAAA9U,GAAA3B,GAAAA,EAAAyW,EAAA1iB,EAAA2iB,EAAA5e,GAAAkI,GAAAA,EAAA0W,EAAA/U,EAAA6U,EAAAziB,GAAAiM,GAAA0W,EAAA3iB,EAAAyiB,EAAA7U,EAAA8U,EAAA3e,EACA6e,KAAA3W,EACA4W,IAAA5W,GAAA0W,GAAAA,EAAA3iB,IACA8iB,IAAA7W,GAAAwW,GAAAA,EAAA7U,IACAmV,IAAA9W,GAAAyW,GAAAA,EAAA3e,IACAoe,GAAAQ,EAAAF,EAAAC,GAjBA,GAAAC,GAAAF,EAAAC,CACAM,IAAAnW,MAAA,SAAA0T,EAAAC,GACAD,GAAA5P,EACA,IAAAkQ,GAAAziB,KAAAsS,IAAA8P,GAAA7P,GACAgS,GAAA9B,EAAAziB,KAAAsS,IAAA6P,GACAkC,EAAA5B,EAAAziB,KAAAiR,IAAAkR,GACAmC,EAAAtkB,KAAAiR,IAAAmR,GACAwC,GAAAnW,MAAAyT,EACA6B,GAAAQ,EAAAF,EAAAC,IAYA,QAAAO,MACAD,GAAAnW,MAAAqV,GAEA,QAAAgB,MAiBA,QAAA5C,GAAAC,EAAAC,GACAD,GAAA5P,EACA,IAAAkQ,GAAAziB,KAAAsS,IAAA8P,GAAA7P,IAAA3Q,EAAA6gB,EAAAziB,KAAAsS,IAAA6P,GAAA3S,EAAAiT,EAAAziB,KAAAiR,IAAAkR,GAAAxc,EAAA3F,KAAAiR,IAAAmR,GAAA2C,EAAAV,EAAA1e,EAAA2e,EAAA9U,EAAAwV,EAAAV,EAAA1iB,EAAA2iB,EAAA5e,EAAAsf,EAAAV,EAAA/U,EAAA6U,EAAAziB,EAAAgK,EAAA5L,KAAAgT,KAAA+R,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,GAAArC,EAAA2B,EAAA3iB,EAAAyiB,EAAA7U,EAAA8U,EAAA3e,EAAA6L,EAAA5F,IAAA0E,GAAAsS,GAAAhX,EAAAiC,EAAA7N,KAAA8S,MAAAlH,EAAAgX,EACAsC,KAAA1T,EAAAuT,EACAI,IAAA3T,EAAAwT,EACAI,IAAA5T,EAAAyT,EACAT,IAAA3W,EACA4W,IAAA5W,GAAA0W,GAAAA,EAAA3iB,IACA8iB,IAAA7W,GAAAwW,GAAAA,EAAA7U,IACAmV,IAAA9W,GAAAyW,GAAAA,EAAA3e,IACAoe,GAAAQ,EAAAF,EAAAC,GA1BA,GAAAvB,GAAAC,EAAAuB,EAAAF,EAAAC,CACAM,IAAAnW,MAAA,SAAA0T,EAAAC,GACAW,EAAAZ,EAAAa,EAAAZ,EACAwC,GAAAnW,MAAAyT,EACAC,GAAA5P,EACA,IAAAkQ,GAAAziB,KAAAsS,IAAA8P,GAAA7P,GACAgS,GAAA9B,EAAAziB,KAAAsS,IAAA6P,GACAkC,EAAA5B,EAAAziB,KAAAiR,IAAAkR,GACAmC,EAAAtkB,KAAAiR,IAAAmR,GACA2B,GAAAQ,EAAAF,EAAAC,IAEAM,GAAA/C,QAAA,WACAK,EAAAa,EAAAC,GACA4B,GAAA/C,QAAAgD,GACAD,GAAAnW,MAAAqV,IAeA,QAAAuB,IAAA7jB,EAAAC,GACA,QAAA6jB,GAAA1jB,EAAA4N,GACA,MAAA5N,GAAAJ,EAAAI,EAAA4N,GAAA/N,EAAAG,EAAA,GAAAA,EAAA,IAKA,MAHAJ,GAAA+jB,QAAA9jB,EAAA8jB,SAAAD,EAAAC,OAAA,SAAA3jB,EAAA4N,GACA,MAAA5N,GAAAH,EAAA8jB,OAAA3jB,EAAA4N,GAAA5N,GAAAJ,EAAA+jB,OAAA3jB,EAAA,GAAAA,EAAA,MAEA0jB,EAEA,QAAAE,MACA,OAAA,EAEA,QAAAC,IAAAC,EAAA1jB,EAAA2jB,EAAAC,EAAA7f,GACA,GAAA8f,MAAAC,IAuBA,IAtBAJ,EAAAhQ,QAAA,SAAAqQ,GACA,MAAA7gB,EAAA6gB,EAAAvmB,OAAA,IAAA,GAAA,CACA,GAAA0F,GAAA8gB,EAAAD,EAAA,GAAAE,EAAAF,EAAA7gB,EACA,IAAA0e,GAAAoC,EAAAC,GAAA,CACAlgB,EAAA6b,WACA,KAAA,GAAA3c,GAAA,EAAAC,EAAAD,IAAAA,EAAAc,EAAA0I,OAAAuX,EAAAD,EAAA9gB,IAAA,GAAA+gB,EAAA,GAEA,YADAjgB,GAAA8b,UAGA,GAAArgB,GAAA,GAAA0kB,IAAAF,EAAAD,EAAA,MAAA,GAAAtkB,EAAA,GAAAykB,IAAAF,EAAA,KAAAxkB,GAAA,EACAA,GAAA8L,EAAA7L,EACAokB,EAAA5hB,KAAAzC,GACAskB,EAAA7hB,KAAAxC,GACAD,EAAA,GAAA0kB,IAAAD,EAAAF,EAAA,MAAA,GACAtkB,EAAA,GAAAykB,IAAAD,EAAA,KAAAzkB,GAAA,GACAA,EAAA8L,EAAA7L,EACAokB,EAAA5hB,KAAAzC,GACAskB,EAAA7hB,KAAAxC,MAEAqkB,EAAAK,KAAAnkB,GACAokB,GAAAP,GACAO,GAAAN,GACAD,EAAArmB,OAAA,CACA,IAAA,GAAAyF,GAAA,EAAAohB,EAAAV,EAAAzgB,EAAA4gB,EAAAtmB,OAAA0F,EAAAD,IAAAA,EACA6gB,EAAA7gB,GAAAuB,EAAA6f,GAAAA,CAGA,KADA,GAAAC,GAAA7X,EAAA8X,EAAAV,EAAA,KACA,CAEA,IADA,GAAAW,GAAAD,EAAAE,GAAA,EACAD,EAAAhV,GAAA,IAAAgV,EAAAA,EAAAthB,KAAAqhB,EAAA,MACAD,GAAAE,EAAA7gB,EACAI,EAAA6b,WACA,GAAA,CAEA,GADA4E,EAAAhV,EAAAgV,EAAAlZ,EAAAkE,GAAA,EACAgV,EAAAhgB,EAAA,CACA,GAAAigB,EACA,IAAA,GAAAxhB,GAAA,EAAAC,EAAAohB,EAAA9mB,OAAA0F,EAAAD,IAAAA,EAAAc,EAAA0I,OAAAA,EAAA6X,EAAArhB,IAAA,GAAAwJ,EAAA,QAEAmX,GAAAY,EAAA5kB,EAAA4kB,EAAAthB,EAAAtD,EAAA,EAAAmE,EAEAygB,GAAAA,EAAAthB,MACA,CACA,GAAAuhB,EAAA,CACAH,EAAAE,EAAAjP,EAAA5R,CACA,KAAA,GAAAV,GAAAqhB,EAAA9mB,OAAA,EAAAyF,GAAA,IAAAA,EAAAc,EAAA0I,OAAAA,EAAA6X,EAAArhB,IAAA,GAAAwJ,EAAA,QAEAmX,GAAAY,EAAA5kB,EAAA4kB,EAAAjP,EAAA3V,EAAA,GAAAmE,EAEAygB,GAAAA,EAAAjP,EAEAiP,EAAAA,EAAAlZ,EACAgZ,EAAAE,EAAA7gB,EACA8gB,GAAAA,SACAD,EAAAhV,EACAzL,GAAA8b,YAGA,QAAAuE,IAAAM,GACA,GAAAxhB,EAAAwhB,EAAAlnB,OAAA,CAEA,IADA,GAAA0F,GAAAzD,EAAAwD,EAAA,EAAAzD,EAAAklB,EAAA,KACAzhB,EAAAC,GACA1D,EAAA0D,EAAAzD,EAAAilB,EAAAzhB,GACAxD,EAAA8V,EAAA/V,EACAA,EAAAC,CAEAD,GAAA0D,EAAAzD,EAAAilB,EAAA,GACAjlB,EAAA8V,EAAA/V,GAEA,QAAA0kB,IAAAzX,EAAA6X,EAAAK,EAAAN,GACAhjB,KAAAzB,EAAA6M,EACApL,KAAAsC,EAAA2gB,EACAjjB,KAAAiK,EAAAqZ,EACAtjB,KAAAmD,EAAA6f,EACAhjB,KAAAmO,GAAA,EACAnO,KAAA6B,EAAA7B,KAAAkU,EAAA,KAEA,QAAAqP,IAAAC,EAAAC,EAAAlB,EAAAmB,GACA,MAAA,UAAAC,EAAAjhB,GAuCA,QAAA0I,GAAA0T,EAAAC,GACA,GAAA3T,GAAAuY,EAAA7E,EAAAC,EACAyE,GAAA1E,EAAA1T,EAAA,GAAA2T,EAAA3T,EAAA,KAAA1I,EAAA0I,MAAA0T,EAAAC,GAEA,QAAA6E,GAAA9E,EAAAC,GACA,GAAA3T,GAAAuY,EAAA7E,EAAAC,EACA8E,GAAAzY,MAAAA,EAAA,GAAAA,EAAA,IAEA,QAAAmT,KACAkE,EAAArX,MAAAwY,EACAC,EAAAtF,YAEA,QAAAC,KACAiE,EAAArX,MAAAA,EACAyY,EAAArF,UAIA,QAAAsF,GAAAhF,EAAAC,GACAgF,EAAAnjB,MAAAke,EAAAC,GACA,IAAA3T,GAAAuY,EAAA7E,EAAAC,EACAiF,GAAA5Y,MAAAA,EAAA,GAAAA,EAAA,IAEA,QAAA6Y,KACAD,EAAAzF,YACAwF,KAEA,QAAAG,KACAJ,EAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IACAC,EAAAxF,SACA,IAAAkE,GAAAyB,EAAAH,EAAAG,QAAAC,EAAAC,EAAAA,SAAAxiB,EAAAuiB,EAAAjoB,MAIA,IAHA4nB,EAAAO,MACAC,EAAA3jB,KAAAmjB,GACAA,EAAA,KACAliB,EACA,GAAA,EAAAsiB,EAAA,CACAzB,EAAA0B,EAAA,EACA,IAAAhZ,GAAAvJ,EAAA6gB,EAAAvmB,OAAA,EAAAyF,EAAA,EACA,IAAAC,EAAA,EAAA,CAGA,IAFA2iB,IAAA9hB,EAAAgc,eAAA8F,GAAA,GACA9hB,EAAA6b,cACA3c,EAAAC,GAAAa,EAAA0I,OAAAA,EAAAsX,EAAA9gB,IAAA,GAAAwJ,EAAA,GACA1I,GAAA8b,eAIA3c,GAAA,GAAA,EAAAsiB,GAAAC,EAAAxjB,KAAAwjB,EAAAE,MAAA1hB,OAAAwhB,EAAAK,UACApC,EAAAzhB,KAAAwjB,EAAAta,OAAA4a,KArFA,GAsDArC,GACAkC,EAAAR,EAvDAF,EAAAJ,EAAA/gB,GAAAiiB,EAAAhB,EAAAzB,OAAAwB,EAAA,GAAAA,EAAA,IACAjB,GACArX,MAAAA,EACAmT,UAAAA,EACAC,QAAAA,EACAE,aAAA,WACA+D,EAAArX,MAAA0Y,EACArB,EAAAlE,UAAA0F,EACAxB,EAAAjE,QAAA0F,EACA7B,KACAkC,MAEA5F,WAAA,WACA8D,EAAArX,MAAAA,EACAqX,EAAAlE,UAAAA,EACAkE,EAAAjE,QAAAA,EACA6D,EAAA/kB,GAAAsnB,MAAAvC,EACA,IAAAC,GAAAuC,GAAAF,EAAAJ,EACAlC,GAAAlmB,QACAqoB,IAAA9hB,EAAAgc,eAAA8F,GAAA,GACApC,GAAAC,EAAAyC,GAAAxC,EAAAC,EAAA7f,IACA4f,IACAkC,IAAA9hB,EAAAgc,eAAA8F,GAAA,GACA9hB,EAAA6b,YACAgE,EAAA,KAAA,KAAA,EAAA7f,GACAA,EAAA8b,WAEAgG,IAAA9hB,EAAAic,aAAA6F,GAAA,GACAnC,EAAAkC,EAAA,MAEAQ,OAAA,WACAriB,EAAAgc,eACAhc,EAAA6b,YACAgE,EAAA,KAAA,KAAA,EAAA7f,GACAA,EAAA8b,UACA9b,EAAAic,eAoBA0F,EAAAW,KAAAhB,EAAAP,EAAAY,GAAAG,GAAA,CAgCA,OAAA/B,IAGA,QAAAiC,IAAAhC,GACA,MAAAA,GAAAvmB,OAAA,EAEA,QAAA6oB,MACA,GAAAnB,GAAAoB,IACA,QACA1G,UAAA,WACA0G,EAAArkB,KAAAijB,OAEAzY,MAAA,SAAA0T,EAAAC,GACA8E,EAAAjjB,MAAAke,EAAAC,KAEAP,QAAAxc,EACAqiB,OAAA,WACA,GAAAA,GAAAY,CAGA,OAFAA,MACApB,EAAA,KACAQ,GAEAa,OAAA,WACAD,EAAA9oB,OAAA,GAAA8oB,EAAArkB,KAAAqkB,EAAAX,MAAA1hB,OAAAqiB,EAAAR,YAIA,QAAAK,IAAA3mB,EAAAC,GACA,QAAAD,EAAAA,EAAAI,GAAA,GAAA,EAAAJ,EAAA,GAAAkP,GAAAmT,GAAAnT,GAAAlP,EAAA,MAAAC,EAAAA,EAAAG,GAAA,GAAA,EAAAH,EAAA,GAAAiP,GAAAmT,GAAAnT,GAAAjP,EAAA,IAGA,QAAA+mB,IAAAziB,GACA,GAAAyhB,GAAAlF,EAAA5gB,EAAAA,EAAA+mB,EAAA/mB,EAAAA,EAAAgnB,EAAAhnB,EAAAA,CACA,QACAkgB,UAAA,WACA7b,EAAA6b,YACA4F,EAAA,GAEA/Y,MAAA,SAAAka,EAAAC,GACA,GAAAC,GAAAF,EAAA,EAAApY,IAAAA,GAAA8R,EAAApiB,GAAA0oB,EAAArG,EACAriB,IAAAoiB,EAAA9R,IAAAsT,IACA9d,EAAA0I,MAAA6T,EAAAmG,GAAAA,EAAAG,GAAA,EAAA,EAAAlY,IAAAA,IACA3K,EAAA0I,MAAAia,EAAAD,GACA1iB,EAAA8b,UACA9b,EAAA6b,YACA7b,EAAA0I,MAAAoa,EAAAJ,GACA1iB,EAAA0I,MAAAka,EAAAF,GACAjB,EAAA,GACAkB,IAAAG,GAAAxG,GAAA9R,KACAtQ,GAAAqiB,EAAAoG,GAAA7E,KAAAvB,GAAAoG,EAAA7E,IACA5jB,GAAA0oB,EAAAE,GAAAhF,KAAA8E,GAAAE,EAAAhF,IACA4E,EAAAK,GAAAxG,EAAAmG,EAAAE,EAAAC,GACA7iB,EAAA0I,MAAAia,EAAAD,GACA1iB,EAAA8b,UACA9b,EAAA6b,YACA7b,EAAA0I,MAAAoa,EAAAJ,GACAjB,EAAA,GAEAzhB,EAAA0I,MAAA6T,EAAAqG,EAAAF,EAAAG,GACAF,EAAAG,GAEAhH,QAAA,WACA9b,EAAA8b,UACAS,EAAAmG,EAAA/mB,EAAAA,GAEA8lB,MAAA,WACA,MAAA,GAAAA,IAIA,QAAAsB,IAAAxG,EAAAmG,EAAAE,EAAAC,GACA,GAAA/F,GAAAkG,EAAAC,EAAAhpB,KAAAiR,IAAAqR,EAAAqG,EACA,OAAA1oB,IAAA+oB,GAAAnF,GAAA7jB,KAAAipB,MAAAjpB,KAAAiR,IAAAwX,IAAAM,EAAA/oB,KAAAsS,IAAAsW,IAAA5oB,KAAAiR,IAAA0X,GAAA3oB,KAAAiR,IAAA2X,IAAA/F,EAAA7iB,KAAAsS,IAAAmW,IAAAzoB,KAAAiR,IAAAqR,KAAAO,EAAAkG,EAAAC,KAAAP,EAAAG,GAAA,EAEA,QAAAM,IAAAC,EAAAC,EAAAC,EAAAtjB,GACA,GAAAqc,EACA,IAAA,MAAA+G,EACA/G,EAAAiH,EAAA3Y,GACA3K,EAAA0I,OAAA8B,GAAA6R,GACArc,EAAA0I,MAAA,EAAA2T,GACArc,EAAA0I,MAAA8B,GAAA6R,GACArc,EAAA0I,MAAA8B,GAAA,GACAxK,EAAA0I,MAAA8B,IAAA6R,GACArc,EAAA0I,MAAA,GAAA2T,GACArc,EAAA0I,OAAA8B,IAAA6R,GACArc,EAAA0I,OAAA8B,GAAA,GACAxK,EAAA0I,OAAA8B,GAAA6R,OACA,IAAAniB,GAAAkpB,EAAA,GAAAC,EAAA,IAAAvF,GAAA,CACA,GAAAtd,GAAA4iB,EAAA,GAAAC,EAAA,GAAA7Y,IAAAA,EACA6R,GAAAiH,EAAA9iB,EAAA,EACAR,EAAA0I,OAAAlI,EAAA6b,GACArc,EAAA0I,MAAA,EAAA2T,GACArc,EAAA0I,MAAAlI,EAAA6b,OAEArc,GAAA0I,MAAA2a,EAAA,GAAAA,EAAA,IAGA,QAAAlB,IAAAzZ,EAAAmZ,GACA,GAAA0B,GAAA7a,EAAA,GAAA8a,EAAA9a,EAAA,GAAA+a,GAAAxpB,KAAAiR,IAAAqY,IAAAtpB,KAAAsS,IAAAgX,GAAA,GAAAG,EAAA,EAAAC,EAAA,CACA5G,IAAA6G,OACA,KAAA,GAAA1kB,GAAA,EAAAC,EAAA0iB,EAAApoB,OAAA0F,EAAAD,IAAAA,EAAA,CACA,GAAAmiB,GAAAQ,EAAA3iB,GAAA2G,EAAAwb,EAAA5nB,MACA,IAAAoM,EAEA,IADA,GAAAge,GAAAxC,EAAA,GAAA9E,EAAAsH,EAAA,GAAAnB,EAAAmB,EAAA,GAAA,EAAArZ,GAAA,EAAAoS,EAAA3iB,KAAAiR,IAAAwX,GAAA5F,EAAA7iB,KAAAsS,IAAAmW,GAAA9c,EAAA,IACA,CACAA,IAAAC,IAAAD,EAAA,GACA8C,EAAA2Y,EAAAzb,EACA,IAAAwW,GAAA1T,EAAA,GAAA2T,EAAA3T,EAAA,GAAA,EAAA8B,GAAA,EAAAmS,EAAA1iB,KAAAiR,IAAAmR,GAAAK,EAAAziB,KAAAsS,IAAA8P,GAAAC,EAAAF,EAAAG,EAAAC,EAAAF,GAAA,EAAA,EAAA,GAAAG,EAAAD,EAAAF,EAAAwH,EAAArH,EAAAjS,GAAA7N,EAAAigB,EAAAD,CAGA,IAFAI,GAAAtZ,IAAAxJ,KAAA8S,MAAApQ,EAAA6f,EAAAviB,KAAAiR,IAAAuR,GAAAK,EAAAJ,EAAA/f,EAAA1C,KAAAsS,IAAAkQ,KACAiH,GAAAI,EAAAxH,EAAAE,EAAAuH,GAAAzH,EACAwH,EAAAvH,GAAAgH,EAAAnH,GAAAmH,EAAA,CACA,GAAAS,GAAA1G,GAAAH,GAAA0G,GAAA1G,GAAAzU,GACAgV,IAAAsG,EACA,IAAAC,GAAA3G,GAAAmG,EAAAO,EACAtG,IAAAuG,EACA,IAAAC,IAAAJ,EAAAxH,GAAA,EAAA,GAAA,GAAA5R,GAAAuZ,EAAA,KACAT,EAAAU,GAAAV,IAAAU,IAAAF,EAAA,IAAAA,EAAA,OACAL,GAAAG,EAAAxH,GAAA,EAAA,EAAA,IAGA,IAAA1W,IAAA,KACA2W,GAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAAAmH,EAAAnb,GAGA,QAAAoV,GAAA4F,GAAA5F,GAAA4F,GAAA,EAAA3G,IAAA,EAAA4G,EAEA,QAAAQ,IAAAC,GAGA,QAAAC,GAAAjI,EAAAC,GACA,MAAApiB,MAAAsS,IAAA6P,GAAAniB,KAAAsS,IAAA8P,GAAAiI,EAEA,QAAAvD,GAAA/gB,GACA,GAAA6jB,GAAAU,EAAAC,EAAAC,EAAAhD,CACA,QACA5F,UAAA,WACA4I,EAAAD,GAAA,EACA/C,EAAA,GAEA/Y,MAAA,SAAA0T,EAAAC,GACA,GAAAqI,GAAAC,GAAAvI,EAAAC,GAAA5Q,EAAA4Y,EAAAjI,EAAAC,GAAA9Y,EAAAqhB,EAAAnZ,EAAA,EAAAoZ,EAAAzI,EAAAC,GAAA5Q,EAAAoZ,EAAAzI,GAAA,EAAAA,EAAA5R,IAAAA,IAAA6R,GAAA,CAUA,KATAwH,IAAAY,EAAAD,EAAA/Y,IAAAzL,EAAA6b,YACApQ,IAAA+Y,IACAE,EAAAI,EAAAjB,EAAAc,IACA9G,GAAAgG,EAAAa,IAAA7G,GAAA8G,EAAAD,MACAC,EAAA,IAAA7G,GACA6G,EAAA,IAAA7G,GACArS,EAAA4Y,EAAAM,EAAA,GAAAA,EAAA,MAGAlZ,IAAA+Y,EACA/C,EAAA,EACAhW,GACAzL,EAAA6b,YACA6I,EAAAI,EAAAH,EAAAd,GACA7jB,EAAA0I,MAAAgc,EAAA,GAAAA,EAAA,MAEAA,EAAAI,EAAAjB,EAAAc,GACA3kB,EAAA0I,MAAAgc,EAAA,GAAAA,EAAA,IACA1kB,EAAA8b,WAEA+H,EAAAa,MACA,IAAAK,GAAAlB,GAAAe,EAAAnZ,EAAA,CACA,GAAAyF,EACA3N,GAAAghB,KAAArT,EAAA4T,EAAAH,EAAAd,GAAA,MACApC,EAAA,EACAmD,GACA5kB,EAAA6b,YACA7b,EAAA0I,MAAAwI,EAAA,GAAA,GAAAA,EAAA,GAAA,IACAlR,EAAA0I,MAAAwI,EAAA,GAAA,GAAAA,EAAA,GAAA,IACAlR,EAAA8b,YAEA9b,EAAA0I,MAAAwI,EAAA,GAAA,GAAAA,EAAA,GAAA,IACAlR,EAAA8b,UACA9b,EAAA6b,YACA7b,EAAA0I,MAAAwI,EAAA,GAAA,GAAAA,EAAA,GAAA,OAIAzF,GAAAoY,GAAAhG,GAAAgG,EAAAc,IACA3kB,EAAA0I,MAAAic,EAAA,GAAAA,EAAA,IAEAd,EAAAc,EAAAH,EAAA/Y,EAAA8Y,EAAAhhB,GAEAuY,QAAA,WACA0I,GAAAxkB,EAAA8b,UACA+H,EAAA,MAEApC,MAAA,WACA,MAAAA,IAAAgD,GAAAD,IAAA,IAIA,QAAAM,GAAArpB,EAAAC,EAAAspB,GACA,GAAAC,GAAA9H,GAAA1hB,GAAAypB,EAAA/H,GAAAzhB,GACAypB,GAAA,EAAA,EAAA,GAAAC,EAAA9H,GAAA2H,EAAAC,GAAAG,EAAAhI,GAAA+H,EAAAA,GAAAE,EAAAF,EAAA,GAAAG,EAAAF,EAAAC,EAAAA,CACA,KAAAC,EAAA,OAAAP,GAAAvpB,CACA,IAAA+pB,GAAAlB,EAAAe,EAAAE,EAAAE,GAAAnB,EAAAgB,EAAAC,EAAAG,EAAApI,GAAA6H,EAAAC,GAAA5M,EAAAgF,GAAA2H,EAAAK,GAAA9M,EAAA8E,GAAA4H,EAAAK,EACAlI,IAAA/E,EAAAE,EACA,IAAAmE,GAAA6I,EAAA5d,EAAAuV,GAAA7E,EAAAqE,GAAA8I,EAAAtI,GAAAR,EAAAA,GAAA+I,EAAA9d,EAAAA,EAAA6d,GAAAtI,GAAA7E,EAAAA,GAAA,EACA,MAAA,EAAAoN,GAAA,CACA,GAAA1U,GAAAjX,KAAAgT,KAAA2Y,GAAAC,EAAArI,GAAAX,IAAA/U,EAAAoJ,GAAAyU,EAGA,IAFApI,GAAAsI,EAAArN,GACAqN,EAAAlI,GAAAkI,IACAb,EAAA,MAAAa,EACA,IAAAjmB,GAAA2c,EAAA9gB,EAAA,GAAAmnB,EAAAlnB,EAAA,GAAAgnB,EAAAjnB,EAAA,GAAAonB,EAAAnnB,EAAA,EACA6gB,GAAAqG,IAAAhjB,EAAA2c,EAAAA,EAAAqG,EAAAA,EAAAhjB,EACA,IAAAkmB,GAAAlD,EAAArG,EAAAwJ,EAAA7rB,GAAA4rB,EAAAtb,IAAAsT,GAAAyF,EAAAwC,GAAAjI,GAAAgI,CAEA,KADAC,GAAArD,EAAAG,IAAAjjB,EAAA8iB,EAAAA,EAAAG,EAAAA,EAAAjjB,GACA2jB,EAAAwC,EAAArD,EAAAG,EAAA,EAAAgD,EAAA,IAAA3rB,GAAA2rB,EAAA,GAAAtJ,GAAAuB,GAAA4E,EAAAG,GAAAH,GAAAmD,EAAA,IAAAA,EAAA,IAAAhD,EAAAiD,EAAAtb,IAAA+R,GAAAsJ,EAAA,IAAAA,EAAA,IAAAjD,GAAA,CACA,GAAAoD,GAAAxI,GAAAX,IAAA/U,EAAAoJ,GAAAyU,EAEA,OADApI,IAAAyI,EAAAxN,IACAqN,EAAAlI,GAAAqI,MAGA,QAAAnB,GAAAzI,EAAAC,GACA,GAAAjQ,GAAAwY,EAAAR,EAAA5Z,GAAA4Z,EAAAS,EAAA,CAGA,QAFAzY,EAAAgQ,EAAAyI,GAAA,EAAAzI,EAAAhQ,IAAAyY,GAAA,IACAzY,EAAAiQ,EAAAwI,GAAA,EAAAxI,EAAAjQ,IAAAyY,GAAA,GACAA,EA5FA,GAAAP,GAAArqB,KAAAsS,IAAA6X,GAAAQ,EAAAN,EAAA,EAAAS,EAAA7qB,GAAAoqB,GAAAxG,GAAA+B,EAAAoG,GAAA7B,EAAA,EAAA5X,GACA,OAAAqU,IAAAwD,EAAAtD,EAAAlB,EAAA+E,GAAA,GAAAR,KAAA5Z,GAAA4Z,EAAA5Z,KA8FA,QAAA0b,IAAA1H,EAAAF,EAAA6H,EAAAC,GACA,MAAA,UAAAjF,GACA,GAAA/U,GAAA3Q,EAAA0lB,EAAA1lB,EAAAC,EAAAylB,EAAAzlB,EAAA2qB,EAAA5qB,EAAAI,EAAAyqB,EAAA7qB,EAAAgO,EAAA8c,EAAA7qB,EAAAG,EAAA2qB,EAAA9qB,EAAA+N,EAAA0H,EAAA,EAAAC,EAAA,EAAAqV,EAAAF,EAAAF,EAAAK,EAAAF,EAAAF,CAEA,IADAla,EAAAoS,EAAA6H,EACAI,KAAAra,EAAA,GAAA,CAEA,GADAA,GAAAqa,EACA,EAAAA,EAAA,CACA,GAAAtV,EAAA/E,EAAA,MACAgF,GAAAhF,IAAAgF,EAAAhF,OACA,IAAAqa,EAAA,EAAA,CACA,GAAAra,EAAAgF,EAAA,MACAhF,GAAA+E,IAAAA,EAAA/E,GAGA,GADAA,EAAA+Z,EAAAE,EACAI,KAAA,EAAAra,GAAA,CAEA,GADAA,GAAAqa,EACA,EAAAA,EAAA,CACA,GAAAra,EAAAgF,EAAA,MACAhF,GAAA+E,IAAAA,EAAA/E,OACA,IAAAqa,EAAA,EAAA,CACA,GAAAtV,EAAA/E,EAAA,MACAgF,GAAAhF,IAAAgF,EAAAhF,GAGA,GADAA,EAAAkS,EAAAgI,EACAI,KAAAta,EAAA,GAAA,CAEA,GADAA,GAAAsa,EACA,EAAAA,EAAA,CACA,GAAAvV,EAAA/E,EAAA,MACAgF,GAAAhF,IAAAgF,EAAAhF,OACA,IAAAsa,EAAA,EAAA,CACA,GAAAta,EAAAgF,EAAA,MACAhF,GAAA+E,IAAAA,EAAA/E,GAGA,GADAA,EAAAga,EAAAE,EACAI,KAAA,EAAAta,GAAA,CAEA,GADAA,GAAAsa,EACA,EAAAA,EAAA,CACA,GAAAta,EAAAgF,EAAA,MACAhF,GAAA+E,IAAAA,EAAA/E,OACA,IAAAsa,EAAA,EAAA,CACA,GAAAvV,EAAA/E,EAAA,MACAgF,GAAAhF,IAAAgF,EAAAhF,GAUA,MARA+E,GAAA,IAAAgQ,EAAA1lB,GACAI,EAAAwqB,EAAAlV,EAAAsV,EACAhd,EAAA6c,EAAAnV,EAAAuV,IAEA,EAAAtV,IAAA+P,EAAAzlB,GACAG,EAAAwqB,EAAAjV,EAAAqV,EACAhd,EAAA6c,EAAAlV,EAAAsV,IAEAvF,OAqBA,QAAAwF,IAAAnI,EAAAF,EAAA6H,EAAAC,GA2HA,QAAAQ,GAAApV,EAAA8R,GACA,MAAAppB,IAAAsX,EAAA,GAAAgN,GAAAV,GAAAwF,EAAA,EAAA,EAAA,EAAAppB,GAAAsX,EAAA,GAAA2U,GAAArI,GAAAwF,EAAA,EAAA,EAAA,EAAAppB,GAAAsX,EAAA,GAAA8M,GAAAR,GAAAwF,EAAA,EAAA,EAAA,EAAAA,EAAA,EAAA,EAAA,EAEA,QAAArnB,GAAAR,EAAAC,GACA,MAAAmrB,GAAAprB,EAAAI,EAAAH,EAAAG,GAEA,QAAAgrB,GAAAprB,EAAAC,GACA,GAAAorB,GAAAF,EAAAnrB,EAAA,GAAAsrB,EAAAH,EAAAlrB,EAAA,EACA,OAAAorB,KAAAC,EAAAD,EAAAC,EAAA,IAAAD,EAAAprB,EAAA,GAAAD,EAAA,GAAA,IAAAqrB,EAAArrB,EAAA,GAAAC,EAAA,GAAA,IAAAorB,EAAArrB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAlIA,MAAA,UAAAuE,GA+BA,QAAAgnB,GAAAxV,GAEA,IAAA,GADAyV,GAAA,EAAA9nB,EAAA0iB,EAAApoB,OAAAgQ,EAAA+H,EAAA,GACAtS,EAAA,EAAAC,EAAAD,IAAAA,EACA,IAAA,GAAAxD,GAAAkK,EAAA,EAAA6F,EAAAoW,EAAA3iB,GAAA2G,EAAA4F,EAAAhS,OAAAgC,EAAAgQ,EAAA,GAAA5F,EAAAD,IAAAA,EACAlK,EAAA+P,EAAA7F,GACAnK,EAAA,IAAAgO,EACA/N,EAAA,GAAA+N,GAAAa,EAAA7O,EAAAC,EAAA8V,GAAA,KAAAyV,EAEAvrB,EAAA,IAAA+N,GAAAa,EAAA7O,EAAAC,EAAA8V,GAAA,KAAAyV,EAEAxrB,EAAAC,CAGA,OAAA,KAAAurB,EAEA,QAAApH,GAAAuD,EAAAC,EAAAC,EAAAtjB,GACA,GAAAvE,GAAA,EAAAyrB,EAAA,CACA,IAAA,MAAA9D,IAAA3nB,EAAAmrB,EAAAxD,EAAAE,OAAA4D,EAAAN,EAAAvD,EAAAC,KAAAuD,EAAAzD,EAAAC,GAAA,EAAAC,EAAA,GACA,EACAtjB,GAAA0I,MAAA,IAAAjN,GAAA,IAAAA,EAAA+iB,EAAA2H,EAAA1qB,EAAA,EAAA2qB,EAAA9H,UACA7iB,GAAAA,EAAA6nB,EAAA,GAAA,KAAA4D,OAEAlnB,GAAA0I,MAAA2a,EAAA,GAAAA,EAAA,IAGA,QAAAvC,GAAAjlB,EAAA4N,GACA,MAAA5N,IAAA2iB,GAAA2H,GAAAtqB,GAAA4N,GAAA6U,GAAA8H,GAAA3c,EAEA,QAAAf,GAAA7M,EAAA4N,GACAqX,EAAAjlB,EAAA4N,IAAAzJ,EAAA0I,MAAA7M,EAAA4N,GAGA,QAAAoS,KACAkE,EAAArX,MAAAye,EACAtF,GAAAA,EAAA3jB,KAAAmjB,MACA+F,GAAA,EACAC,GAAA,EACAC,EAAAC,EAAA5rB,EAAAA,EAEA,QAAAmgB,KACA6D,IACAwH,EAAAK,EAAAC,GACAC,GAAAL,GAAAM,EAAAnF,SACA7C,EAAAzhB,KAAAypB,EAAAhG,WAEA5B,EAAArX,MAAAA,EACA2e,GAAArnB,EAAA8b,UAEA,QAAAqL,GAAAtrB,EAAA4N,GACA5N,EAAA5B,KAAAsT,KAAAqa,GAAA3tB,KAAAwT,IAAAma,GAAA/rB,IACA4N,EAAAxP,KAAAsT,KAAAqa,GAAA3tB,KAAAwT,IAAAma,GAAAne,GACA,IAAAgC,GAAAqV,EAAAjlB,EAAA4N,EAEA,IADAoY,GAAAR,EAAAnjB,MAAArC,EAAA4N,IACA2d,EACAI,EAAA3rB,EAAA4rB,EAAAhe,EAAAie,EAAAjc,EACA2b,GAAA,EACA3b,IACAzL,EAAA6b,YACA7b,EAAA0I,MAAA7M,EAAA4N,QAGA,IAAAgC,GAAA4b,EAAArnB,EAAA0I,MAAA7M,EAAA4N,OAAA,CACA,GAAA9J,IACAlE,GACAI,EAAAyrB,EACA7d,EAAA8d,GAEA7rB,GACAG,EAAAA,EACA4N,EAAAA,GAGAsX,GAAAphB,IACA0nB,IACArnB,EAAA6b,YACA7b,EAAA0I,MAAA/I,EAAAlE,EAAAI,EAAA8D,EAAAlE,EAAAgO,IAEAzJ,EAAA0I,MAAA/I,EAAAjE,EAAAG,EAAA8D,EAAAjE,EAAA+N,GACAgC,GAAAzL,EAAA8b,UACA2F,GAAA,GACAhW,IACAzL,EAAA6b,YACA7b,EAAA0I,MAAA7M,EAAA4N,GACAgY,GAAA,GAIA6F,EAAAzrB,EAAA0rB,EAAA9d,EAAA4d,EAAA5b,EArHA,GAAAkU,GAAAkC,EAAAR,EA6DAmG,EAAAC,EAAAC,EAAAJ,EAAAC,EAAAF,EAAAD,EAAA3F,EA7DAoG,EAAA7nB,EAAA2nB,EAAArF,KAAAvB,EAAAmF,GAAA1H,EAAAF,EAAA6H,EAAAC,GACArG,GACArX,MAAAA,EACAmT,UAAAA,EACAC,QAAAA,EACAE,aAAA,WACAhc,EAAA2nB,EACAhI,KACAkC,KACAJ,GAAA,GAEAxF,WAAA,WACAjc,EAAA6nB,EACAlI,EAAA/kB,GAAAsnB,MAAAvC,EACA,IAAAC,GAAAoH,GAAAxI,EAAA4H,IAAA0B,EAAArG,GAAA7B,EAAAyE,EAAA1E,EAAAlmB,QACAquB,GAAAzD,KACArkB,EAAAgc,eACA8L,IACA9nB,EAAA6b,YACAgE,EAAA,KAAA,KAAA,EAAA7f,GACAA,EAAA8b,WAEAuI,GACA3E,GAAAC,EAAA1jB,EAAA2jB,EAAAC,EAAA7f,GAEAA,EAAAic,cAEA0D,EAAAkC,EAAAR,EAAA,MA4FA,OAAAtB,IAaA,QAAAgI,IAAAC,GACA,GAAAtF,GAAA,EAAAG,EAAArY,GAAA,EAAA3E,EAAAoiB,GAAAD,GAAAxW,EAAA3L,EAAA6c,EAAAG,EAKA,OAJArR,GAAA0W,UAAA,SAAA3qB,GACA,MAAAlB,WAAA5C,OACAoM,EAAA6c,EAAAnlB,EAAA,GAAAiN,GAAA,IAAAqY,EAAAtlB,EAAA,GAAAiN,GAAA,MADAkY,EAAAlY,GAAA,IAAAqY,EAAArY,GAAA,MAGAgH,EAEA,QAAA2W,IAAAzF,EAAAG,GAEA,QAAAuF,GAAAhM,EAAAC,GACA,GAAAgM,GAAApuB,KAAAgT,KAAAqb,EAAA,EAAAnpB,EAAAlF,KAAAiR,IAAAmR,IAAAld,CACA,QAAAkpB,EAAApuB,KAAAiR,IAAAkR,GAAAjd,GAAAopB,EAAAF,EAAApuB,KAAAsS,IAAA6P,IAHA,GAAAQ,GAAA3iB,KAAAiR,IAAAwX,GAAAvjB,GAAAyd,EAAA3iB,KAAAiR,IAAA2X,IAAA,EAAAyF,EAAA,EAAA1L,GAAA,EAAAzd,EAAAyd,GAAA2L,EAAAtuB,KAAAgT,KAAAqb,GAAAnpB,CASA,OAJAipB,GAAA5I,OAAA,SAAA3jB,EAAA4N,GACA,GAAA+e,GAAAD,EAAA9e,CACA,QAAAxP,KAAA8S,MAAAlR,EAAA2sB,GAAArpB,EAAAuL,IAAA4d,GAAAzsB,EAAAA,EAAA2sB,EAAAA,GAAArpB,EAAAA,IAAA,EAAAA,MAEAipB,EAmGA,QAAAK,MAMA,QAAAtM,GAAAtgB,EAAA4N,GACAif,IAAApK,EAAAziB,EAAA2iB,EAAA/U,EACA+U,EAAA3iB,EAAAyiB,EAAA7U,EAPA,GAAAkf,GAAAC,EAAApK,EAAAF,CACAuK,IAAAngB,MAAA,SAAA7M,EAAA4N,GACAof,GAAAngB,MAAAyT,EACAwM,EAAAnK,EAAA3iB,EAAA+sB,EAAAtK,EAAA7U,GAMAof,GAAA/M,QAAA,WACAK,EAAAwM,EAAAC,IAWA,QAAAE,IAAAjtB,EAAA4N,GACAsf,GAAAltB,IAAAktB,GAAAltB,GACAA,EAAAmtB,KAAAA,GAAAntB,GACAotB,GAAAxf,IAAAwf,GAAAxf,GACAA,EAAAyf,KAAAA,GAAAzf,GAEA,QAAA0f,MA2BA,QAAAzgB,GAAA7M,EAAA4N,GACAkY,EAAAzjB,KAAA,IAAArC,EAAA,IAAA4N,EAAA2f,GAEA,QAAAC,GAAAxtB,EAAA4N,GACAkY,EAAAzjB,KAAA,IAAArC,EAAA,IAAA4N,GACA6f,EAAA5gB,MAAAwY,EAEA,QAAAA,GAAArlB,EAAA4N,GACAkY,EAAAzjB,KAAA,IAAArC,EAAA,IAAA4N,GAEA,QAAAqS,KACAwN,EAAA5gB,MAAAA,EAEA,QAAA6gB,KACA5H,EAAAzjB,KAAA,KAxCA,GAAAkrB,GAAAI,GAAA,KAAA7H,KACA2H,GACA5gB,MAAAA,EACAmT,UAAA,WACAyN,EAAA5gB,MAAA2gB,GAEAvN,QAAAA,EACAE,aAAA,WACAsN,EAAAxN,QAAAyN,GAEAtN,WAAA,WACAqN,EAAAxN,QAAAA,EACAwN,EAAA5gB,MAAAA,GAEA+gB,YAAA,SAAAlsB,GAEA,MADA6rB,GAAAI,GAAAjsB,GACA+rB,GAEA7a,OAAA,WACA,GAAAkT,EAAAloB,OAAA,CACA,GAAAgV,GAAAkT,EAAArnB,KAAA,GAEA,OADAqnB,MACAlT,IAoBA,OAAA6a,GAEA,QAAAE,IAAApF,GACA,MAAA,MAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,YAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,YAAA,EAAAA,EAAA,IAeA,QAAAsF,IAAA7tB,EAAA4N,GACAyU,IAAAriB,EACAsiB,IAAA1U,IACA2U,GAEA,QAAAuL,MAMA,QAAAxN,GAAAtgB,EAAA4N,GACA,GAAAgd,GAAA5qB,EAAA2iB,EAAAkI,EAAAjd,EAAA6U,EAAA1e,EAAA3F,KAAAgT,KAAAwZ,EAAAA,EAAAC,EAAAA,EACAhI,KAAA9e,GAAA4e,EAAA3iB,GAAA,EACA8iB,IAAA/e,GAAA0e,EAAA7U,GAAA,EACAmV,IAAAhf,EACA8pB,GAAAlL,EAAA3iB,EAAAyiB,EAAA7U,GAVA,GAAA+U,GAAAF,CACAsL,IAAAlhB,MAAA,SAAA7M,EAAA4N,GACAmgB,GAAAlhB,MAAAyT,EACAuN,GAAAlL,EAAA3iB,EAAAyiB,EAAA7U,IAUA,QAAAogB,MACAD,GAAAlhB,MAAAghB,GAEA,QAAAI,MAMA,QAAA3N,GAAAtgB,EAAA4N,GACA,GAAAgd,GAAA5qB,EAAA2iB,EAAAkI,EAAAjd,EAAA6U,EAAA1e,EAAA3F,KAAAgT,KAAAwZ,EAAAA,EAAAC,EAAAA,EACAhI,KAAA9e,GAAA4e,EAAA3iB,GAAA,EACA8iB,IAAA/e,GAAA0e,EAAA7U,GAAA,EACAmV,IAAAhf,EACAA,EAAA0e,EAAAziB,EAAA2iB,EAAA/U,EACA0V,IAAAvf,GAAA4e,EAAA3iB,GACAujB,IAAAxf,GAAA0e,EAAA7U,GACA4V,IAAA,EAAAzf,EACA8pB,GAAAlL,EAAA3iB,EAAAyiB,EAAA7U,GAdA,GAAAkf,GAAAC,EAAApK,EAAAF,CACAsL,IAAAlhB,MAAA,SAAA7M,EAAA4N,GACAmgB,GAAAlhB,MAAAyT,EACAuN,GAAAf,EAAAnK,EAAA3iB,EAAA+sB,EAAAtK,EAAA7U,IAaAmgB,GAAA9N,QAAA,WACAK,EAAAwM,EAAAC,IAGA,QAAAmB,IAAAC,GAqBA,QAAAthB,GAAA7M,EAAA4N,GACAugB,EAAAC,OAAApuB,EAAA4tB,EAAAhgB,GACAugB,EAAAhG,IAAAnoB,EAAA4N,EAAAggB,EAAA,EAAA1F,IAEA,QAAAsF,GAAAxtB,EAAA4N,GACAugB,EAAAC,OAAApuB,EAAA4N,GACA6f,EAAA5gB,MAAAwY,EAEA,QAAAA,GAAArlB,EAAA4N,GACAugB,EAAAE,OAAAruB,EAAA4N,GAEA,QAAAqS,KACAwN,EAAA5gB,MAAAA,EAEA,QAAA6gB,KACAS,EAAAG,YAnCA,GAAAV,GAAA,IACAH,GACA5gB,MAAAA,EACAmT,UAAA,WACAyN,EAAA5gB,MAAA2gB,GAEAvN,QAAAA,EACAE,aAAA,WACAsN,EAAAxN,QAAAyN,GAEAtN,WAAA,WACAqN,EAAAxN,QAAAA;AACAwN,EAAA5gB,MAAAA,GAEA+gB,YAAA,SAAAlsB,GAEA,MADAksB,GAAAlsB,EACA+rB,GAEA7a,OAAAnP,EAmBA,OAAAgqB,GAEA,QAAAc,IAAAC,GAEA,QAAAC,GAAAhB,GACA,OAAAiB,EAAAC,EAAAC,GAAAnB,GAEA,QAAAmB,GAAAnB,GACA,MAAAoB,IAAApB,EAAA,SAAAztB,EAAA4N,GACA5N,EAAAwuB,EAAAxuB,EAAA4N,GACA6f,EAAA5gB,MAAA7M,EAAA,GAAAA,EAAA,MAGA,QAAA2uB,GAAAlB,GAeA,QAAA5gB,GAAA7M,EAAA4N,GACA5N,EAAAwuB,EAAAxuB,EAAA4N,GACA6f,EAAA5gB,MAAA7M,EAAA,GAAAA,EAAA,IAEA,QAAAggB,KACA2C,EAAA7iB,EAAAA,EACA2uB,EAAA5hB,MAAAye,EACAmC,EAAAzN,YAEA,QAAAsL,GAAA/K,EAAAC,GACA,GAAA9Y,GAAA4Z,IAAAf,EAAAC,IAAA7K,EAAA6Y,EAAAjO,EAAAC,EACAsO,GAAAnM,EAAAF,EAAA/B,EAAAqO,EAAAC,EAAAtG,EAAA/F,EAAAhN,EAAA,GAAA8M,EAAA9M,EAAA,GAAA+K,EAAAH,EAAAwO,EAAArnB,EAAA,GAAAsnB,EAAAtnB,EAAA,GAAAghB,EAAAhhB,EAAA,GAAAgnB,EAAAjB,GACAA,EAAA5gB,MAAA8V,EAAAF,GAEA,QAAAxC,KACAwO,EAAA5hB,MAAAA,EACA4gB,EAAAxN,UAEA,QAAAyF,KACA1F,IACAyO,EAAA5hB,MAAAoiB,EACAR,EAAAxO,QAAA0F,EAEA,QAAAsJ,GAAA1O,EAAAC,GACA8K,EAAAnK,EAAAZ,EAAAa,EAAAZ,GAAAsM,EAAAnK,EAAAoK,EAAAtK,EAAAyM,EAAAH,EAAAI,EAAAH,EAAAI,EAAA1G,EACA+F,EAAA5hB,MAAAye,EAEA,QAAA3F,KACAmJ,EAAAnM,EAAAF,EAAA/B,EAAAqO,EAAAC,EAAAtG,EAAAoE,EAAAC,EAAA5L,EAAA+N,EAAAC,EAAAC,EAAAV,EAAAjB,GACAgB,EAAAxO,QAAAA,EACAA,IA5CA,GAAAkB,GAAAC,EAAA0L,EAAAC,EAAAmC,EAAAC,EAAAC,EAAA1O,EAAAiC,EAAAF,EAAAsM,EAAAC,EAAAtG,EACA+F,GACA5hB,MAAAA,EACAmT,UAAAA,EACAC,QAAAA,EACAE,aAAA,WACAsN,EAAAtN,eACAsO,EAAAzO,UAAA0F,GAEAtF,WAAA,WACAqN,EAAArN,aACAqO,EAAAzO,UAAAA,GAmCA,OAAAyO,GAEA,QAAAK,GAAAnM,EAAAF,EAAA/B,EAAAqO,EAAAC,EAAAtG,EAAA4B,EAAAC,EAAAxD,EAAAsE,EAAAgE,EAAA1F,EAAA2F,EAAA7B,GACA,GAAA7C,GAAAN,EAAA3H,EAAAkI,EAAAN,EAAA9H,EAAA8M,EAAA3E,EAAAA,EAAAC,EAAAA,CACA,IAAA0E,EAAA,EAAAC,GAAAF,IAAA,CACA,GAAA1vB,GAAAmvB,EAAA1D,EAAAxrB,EAAAmvB,EAAAK,EAAA3nB,EAAAghB,EAAAiB,EAAA3f,EAAA5L,KAAAgT,KAAAxR,EAAAA,EAAAC,EAAAA,EAAA6H,EAAAA,GAAA+nB,EAAArxB,KAAA2Q,KAAArH,GAAAsC,GAAA0lB,EAAArxB,GAAAA,GAAAqJ,GAAA,GAAAua,IAAA5jB,GAAAqiB,EAAAqG,GAAA9E,IAAAvB,EAAAqG,GAAA,EAAA3oB,KAAA8S,MAAArR,EAAAD,GAAA+V,EAAA6Y,EAAAkB,EAAAD,GAAAE,EAAAha,EAAA,GAAAia,EAAAja,EAAA,GAAAka,EAAAF,EAAAhN,EAAAmN,EAAAF,EAAAnN,EAAAsN,EAAAlF,EAAAgF,EAAAjF,EAAAkF,GACAC,EAAAA,EAAAR,EAAAC,GAAAnxB,IAAAusB,EAAAiF,EAAAhF,EAAAiF,GAAAP,EAAA,IAAA,IAAAS,EAAAjB,EAAA1D,EAAA2D,EAAAK,EAAA3G,EAAAiB,KACAmF,EAAAnM,EAAAF,EAAA/B,EAAAqO,EAAAC,EAAAtG,EAAAiH,EAAAC,EAAAF,EAAA9vB,GAAAoK,EAAAnK,GAAAmK,EAAAtC,EAAA4nB,EAAA7B,GACAA,EAAA5gB,MAAA8iB,EAAAC,GACAd,EAAAa,EAAAC,EAAAF,EAAA9vB,EAAAC,EAAA6H,EAAA4iB,EAAAC,EAAAxD,EAAAsE,EAAAgE,EAAA1F,EAAA2F,EAAA7B,KAlEA,GAAA+B,GAAA,GAAAQ,EAAA5xB,KAAAsS,IAAA,GAAAC,IAAA+d,EAAA,EA2EA,OALAD,GAAAnX,UAAA,SAAA5V,GACA,MAAAlB,WAAA5C,QACA8wB,GAAAc,EAAA9tB,EAAAA,GAAA,GAAA,GACA+sB,GAFArwB,KAAAgT,KAAAoe,IAIAf,EAiDA,QAAAwB,IAAAzB,GACA,GAAAC,GAAAF,GAAA,SAAAvuB,EAAA4N,GACA,MAAA4gB,IAAAxuB,EAAAmR,GAAAvD,EAAAuD,MAEA,OAAA,UAAAsc,GACA,MAAAyC,IAAAzB,EAAAhB,KAYA,QAAA0C,IAAA1C,GACAhsB,KAAAgsB,OAAAA,EAsBA,QAAAoB,IAAApB,EAAA5gB,GACA,OACAA,MAAAA,EACA2Z,OAAA,WACAiH,EAAAjH,UAEAxG,UAAA,WACAyN,EAAAzN,aAEAC,QAAA,WACAwN,EAAAxN,WAEAE,aAAA,WACAsN,EAAAtN,gBAEAC,WAAA,WACAqN,EAAArN,eAMA,QAAAgQ,IAAA5B,GACA,MAAApC,IAAA,WACA,MAAAoC,OAGA,QAAApC,IAAAD,GAKA,QAAAkE,GAAAxjB,GAEA,MADAA,GAAAyjB,EAAAzjB,EAAA,GAAA8D,GAAA9D,EAAA,GAAA8D,KACA9D,EAAA,GAAA/L,EAAAyvB,EAAAC,EAAA3jB,EAAA,GAAA/L,GAEA,QAAA6iB,GAAA9W,GAEA,MADAA,GAAAyjB,EAAA3M,QAAA9W,EAAA,GAAA0jB,GAAAzvB,GAAA0vB,EAAA3jB,EAAA,IAAA/L,GACA+L,IAAAA,EAAA,GAAAsE,GAAAtE,EAAA,GAAAsE,IA4CA,QAAA4W,KACAuI,EAAA7M,GAAA2B,EAAAqL,GAAAxG,EAAAyG,EAAAC,GAAAnC,EACA,IAAAoC,GAAApC,EAAAjO,EAAAC,EAGA,OAFA+P,GAAAvwB,EAAA4wB,EAAA,GAAA9vB,EACA0vB,EAAA5iB,EAAAgjB,EAAA,GAAA9vB,EACA+vB,IAEA,QAAAA,KAEA,MADApD,KAAAA,EAAAqD,OAAA,EAAArD,EAAA,MACA4C,EA/DA,GAAA7B,GAAApJ,EAAAkL,EAGAC,EAAAC,EAAA/C,EAHAsD,EAAAxC,GAAA,SAAAvuB,EAAA4N,GAEA,MADA5N,GAAAwuB,EAAAxuB,EAAA4N,IACA5N,EAAA,GAAAc,EAAAyvB,EAAAC,EAAAxwB,EAAA,GAAAc,KACAA,EAAA,IAAAd,EAAA,IAAA4N,EAAA,IAAA2S,EAAA,EAAAC,EAAA,EAAAyJ,EAAA,EAAAyG,EAAA,EAAAC,EAAA,EAAAK,EAAAC,GAAAC,EAAAxuB,EAAAyuB,EAAA,KAAAC,EAAA,IA8DA,OArDAf,GAAA5C,OAAA,SAAA4D,GAIA,MAHA5D,KAAAA,EAAAqD,OAAA,GACArD,EAAAyC,GAAAc,EAAA5L,EAAA2L,EAAAG,EAAAG,MACA5D,EAAAqD,OAAA,EACArD,GAEA4C,EAAAc,UAAA,SAAAzvB,GACA,MAAAlB,WAAA5C,QACAozB,EAAA,MAAAtvB,GAAAyvB,EAAAzvB,EAAAuvB,IAAA3I,IAAA6I,GAAAzvB,GAAAiP,IACAkgB,KAFAM,GAIAd,EAAAe,WAAA,SAAA1vB,GACA,MAAAlB,WAAA5C,QACAwzB,EAAA1vB,EACAwvB,EAAAxvB,EAAAopB,GAAAppB,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAgB,EACAmuB,KAHAO,GAKAf,EAAAra,MAAA,SAAAtU,GACA,MAAAlB,WAAA5C,QACAkD,GAAAY,EACAqmB,KAFAjnB,GAIAuvB,EAAAiB,UAAA,SAAA5vB,GACA,MAAAlB,WAAA5C,QACAoC,GAAA0B,EAAA,GACAkM,GAAAlM,EAAA,GACAqmB,MAHA/nB,EAAA4N,IAKAyiB,EAAAO,OAAA,SAAAlvB,GACA,MAAAlB,WAAA5C,QACA2iB,EAAA7e,EAAA,GAAA,IAAAiP,GACA6P,EAAA9e,EAAA,GAAA,IAAAiP,GACAoX,MAHAxH,EAAApP,GAAAqP,EAAArP,KAKAkf,EAAAjL,OAAA,SAAA1jB,GACA,MAAAlB,WAAA5C,QACAqsB,EAAAvoB,EAAA,GAAA,IAAAiP,GACA+f,EAAAhvB,EAAA,GAAA,IAAAiP,GACAggB,EAAAjvB,EAAA9D,OAAA,EAAA8D,EAAA,GAAA,IAAAiP,GAAA,EACAoX,MAJAkC,EAAA9Y,GAAAuf,EAAAvf,GAAAwf,EAAAxf,KAMApS,GAAAsV,OAAAgc,EAAAU,EAAA,aAYA,WAGA,MAFAvC,GAAArC,EAAAppB,MAAAtB,KAAAjB,WACA6vB,EAAA1M,OAAA6K,EAAA7K,QAAAA,EACAoE,KAGA,QAAAmI,IAAAzC,GACA,MAAAoB,IAAApB,EAAA,SAAAztB,EAAA4N,GACA6f,EAAA5gB,MAAA7M,EAAA2Q,GAAA/C,EAAA+C,MAGA,QAAA4gB,IAAAhR,EAAAC,GACA,OAAAD,EAAAC,GAiBA,QAAAgR,IAAAjR,EAAAC,GACA,OAAAD,EAAA5R,GAAA4R,EAAA2H,IAAAvZ,GAAA4R,EAAAA,EAAA2H,GAAA3H,EAAAC,GAGA,QAAAiQ,IAAAxG,EAAAyG,EAAAC,GACA,MAAA1G,GAAAyG,GAAAC,EAAAlN,GAAAgO,GAAAxH,GAAAyH,GAAAhB,EAAAC,IAAAc,GAAAxH,GAAAyG,GAAAC,EAAAe,GAAAhB,EAAAC,GAAAa,GAEA,QAAAG,IAAA1H,GACA,MAAA,UAAA1J,EAAAC,GACA,MAAAD,IAAA0J,GAAA1J,EAAA5R,GAAA4R,EAAA2H,IAAAvZ,GAAA4R,EAAAA,EAAA2H,GAAA3H,EAAAC,IAGA,QAAAiR,IAAAxH,GACA,GAAA2H,GAAAD,GAAA1H,EAEA,OADA2H,GAAAjO,OAAAgO,IAAA1H,GACA2H,EAEA,QAAAF,IAAAhB,EAAAC,GAEA,QAAAiB,GAAArR,EAAAC,GACA,GAAAK,GAAAziB,KAAAsS,IAAA8P,GAAAxgB,EAAA5B,KAAAsS,IAAA6P,GAAAM,EAAAjT,EAAAxP,KAAAiR,IAAAkR,GAAAM,EAAA9c,EAAA3F,KAAAiR,IAAAmR,GAAA1f,EAAAiD,EAAA8tB,EAAA7xB,EAAA8xB,CACA,QAAA1zB,KAAA8S,MAAAtD,EAAAmkB,EAAAjxB,EAAAkxB,EAAAhyB,EAAA6xB,EAAA9tB,EAAA+tB,GAAAjjB,GAAA/N,EAAAixB,EAAAnkB,EAAAokB,IAHA,GAAAH,GAAAzzB,KAAAsS,IAAAggB,GAAAoB,EAAA1zB,KAAAiR,IAAAqhB,GAAAqB,EAAA3zB,KAAAsS,IAAAigB,GAAAqB,EAAA5zB,KAAAiR,IAAAshB,EASA,OAJAiB,GAAAjO,OAAA,SAAApD,EAAAC,GACA,GAAAK,GAAAziB,KAAAsS,IAAA8P,GAAAxgB,EAAA5B,KAAAsS,IAAA6P,GAAAM,EAAAjT,EAAAxP,KAAAiR,IAAAkR,GAAAM,EAAA9c,EAAA3F,KAAAiR,IAAAmR,GAAA1f,EAAAiD,EAAAguB,EAAAnkB,EAAAokB,CACA,QAAA5zB,KAAA8S,MAAAtD,EAAAmkB,EAAAhuB,EAAAiuB,EAAAhyB,EAAA6xB,EAAA/wB,EAAAgxB,GAAAjjB,GAAA/N,EAAA+wB,EAAA7xB,EAAA8xB,KAEAF,EAkCA,QAAAxH,IAAA7B,EAAAjR,GACA,GAAAmR,GAAArqB,KAAAsS,IAAA6X,GAAA0J,EAAA7zB,KAAAiR,IAAAkZ,EACA,OAAA,UAAAhB,EAAAC,EAAAC,EAAAtjB,GACA,GAAAoU,GAAAkP,EAAAnQ,CACA,OAAAiQ,GACAA,EAAA2K,GAAAzJ,EAAAlB,GACAC,EAAA0K,GAAAzJ,EAAAjB,IACAC,EAAA,EAAAD,EAAAD,EAAAA,EAAAC,KAAAD,GAAAE,EAAAS,MAEAX,EAAAgB,EAAAd,EAAAS,GACAV,EAAAe,EAAA,GAAAhQ,EAEA,KAAA,GAAA1L,GAAAwI,EAAAkS,EAAAE,EAAA,EAAApS,EAAAmS,EAAAA,EAAAnS,EAAAA,GAAAkD,EACApU,EAAA0I,OAAAA,EAAAiV,IAAA2G,GAAAwJ,EAAA7zB,KAAAsS,IAAA2E,IAAA4c,EAAA7zB,KAAAiR,IAAAgG,MAAA,GAAAxI,EAAA,KAIA,QAAAqlB,IAAAzJ,EAAA5b,GACA,GAAAjN,GAAA0hB,GAAAzU,EACAjN,GAAA,IAAA6oB,EACA5G,GAAAjiB,EACA,IAAAuyB,GAAAzjB,IAAA9O,EAAA,GACA,UAAAA,EAAA,GAAA,GAAAuyB,EAAAA,GAAA,EAAA/zB,KAAAg0B,GAAAnQ,KAAA,EAAA7jB,KAAAg0B,IAgFA,QAAAC,IAAA5P,EAAA8H,EAAAM,GACA,GAAAjd,GAAA7O,GAAA6Z,MAAA6J,EAAA8H,EAAAtI,GAAA4I,GAAAxmB,OAAAkmB,EACA,OAAA,UAAAvqB,GACA,MAAA4N,GAAArG,IAAA,SAAAqG,GACA,OAAA5N,EAAA4N,MAIA,QAAA0kB,IAAA3P,EAAA2H,EAAAM,GACA,GAAA5qB,GAAAjB,GAAA6Z,MAAA+J,EAAA2H,EAAArI,GAAA2I,GAAAvmB,OAAAimB,EACA,OAAA,UAAA1c,GACA,MAAA5N,GAAAuH,IAAA,SAAAvH,GACA,OAAAA,EAAA4N,MAIA,QAAA2kB,IAAA3xB,GACA,MAAAA,GAAAiC,OAEA,QAAA2vB,IAAA5xB,GACA,MAAAA,GAAAgC,OA+BA,QAAA6vB,IAAA9P,EAAAF,EAAA6H,EAAAC,GACA,GAAAmI,GAAAt0B,KAAAsS,IAAA+R,GAAAkQ,EAAAv0B,KAAAiR,IAAAoT,GAAAmQ,EAAAx0B,KAAAsS,IAAA6Z,GAAAsI,EAAAz0B,KAAAiR,IAAAkb,GAAAuI,EAAAJ,EAAAt0B,KAAAsS,IAAAiS,GAAAoQ,EAAAL,EAAAt0B,KAAAiR,IAAAsT,GAAAqQ,EAAAJ,EAAAx0B,KAAAsS,IAAA4Z,GAAA2I,EAAAL,EAAAx0B,KAAAiR,IAAAib,GAAA1pB,EAAA,EAAAxC,KAAA2Q,KAAA3Q,KAAAgT,KAAAhC,GAAAmb,EAAA9H,GAAAiQ,EAAAE,EAAAxjB,GAAAkb,EAAA3H,KAAA7hB,EAAA,EAAA1C,KAAAiR,IAAAzO,GACAojB,EAAApjB,EAAA,SAAAyU,GACA,GAAAwH,GAAAze,KAAAiR,IAAAgG,GAAAzU,GAAAE,EAAA6b,EAAAve,KAAAiR,IAAAzO,EAAAyU,GAAAvU,EAAAd,EAAA2c,EAAAmW,EAAAjW,EAAAmW,EAAAplB,EAAA+O,EAAAoW,EAAAlW,EAAAoW,EAAAlvB,EAAA4Y,EAAAgW,EAAA9V,EAAAgW,CACA,QAAAz0B,KAAA8S,MAAAtD,EAAA5N,GAAAmR,GAAA/S,KAAA8S,MAAAnN,EAAA3F,KAAAgT,KAAApR,EAAAA,EAAA4N,EAAAA,IAAAuD,KACA,WACA,OAAAwR,EAAAxR,GAAAsR,EAAAtR,IAGA,OADA6S,GAAAkP,SAAAtyB,EACAojB,EAgBA,QAAAmP,MASA,QAAA7S,GAAAC,EAAAC,GACA,GAAAM,GAAA1iB,KAAAiR,IAAAmR,GAAA7P,IAAAkQ,EAAAziB,KAAAsS,IAAA8P,GAAAnL,EAAAhX,IAAAkiB,GAAA5P,IAAA+P,GAAA0S,EAAAh1B,KAAAsS,IAAA2E,EACAge,KAAAj1B,KAAA8S,MAAA9S,KAAAgT,MAAAiE,EAAAwL,EAAAziB,KAAAiR,IAAAgG,IAAAA,GAAAA,EAAA4L,EAAAH,EAAAC,EAAAF,EAAAuS,GAAA/d,GAAA0L,EAAAD,EAAAG,EAAAJ,EAAAuS,GACA1S,EAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAXA,GAAAH,GAAAK,EAAAE,CACAqS,IAAAzmB,MAAA,SAAA0T,EAAAC,GACAE,EAAAH,EAAA5P,GAAAoQ,EAAA3iB,KAAAiR,IAAAmR,GAAA7P,IAAAsQ,EAAA7iB,KAAAsS,IAAA8P,GACA8S,GAAAzmB,MAAAyT,GAEAgT,GAAArT,QAAA,WACAqT,GAAAzmB,MAAAymB,GAAArT,QAAAxc,GAQA,QAAA8vB,IAAAvd,EAAAmc,GACA,QAAAqB,GAAAjT,EAAAC,GACA,GAAAiT,GAAAr1B,KAAAsS,IAAA6P,GAAAM,EAAAziB,KAAAsS,IAAA8P,GAAA1f,EAAAkV,EAAAyd,EAAA5S,EACA,QAAA/f,EAAA+f,EAAAziB,KAAAiR,IAAAkR,GAAAzf,EAAA1C,KAAAiR,IAAAmR,IAMA,MAJAgT,GAAA7P,OAAA,SAAA3jB,EAAA4N,GACA,GAAA4e,GAAApuB,KAAAgT,KAAApR,EAAAA,EAAA4N,EAAAA,GAAAlG,EAAAyqB,EAAA3F,GAAAkH,EAAAt1B,KAAAiR,IAAA3H,GAAAisB,EAAAv1B,KAAAsS,IAAAhJ,EACA,QAAAtJ,KAAA8S,MAAAlR,EAAA0zB,EAAAlH,EAAAmH,GAAAv1B,KAAA2Q,KAAAyd,GAAA5e,EAAA8lB,EAAAlH,KAEAgH,EAiBA,QAAAI,IAAA/M,EAAAG,GAKA,QAAAuF,GAAAhM,EAAAC,GACAqT,EAAA,GACA/kB,GAAAmT,GAAAzB,IAAAA,GAAA1R,GAAAmT,IAEAzB,EAAA1R,GAAAmT,KAAAzB,EAAA1R,GAAAmT,GAEA,IAAAuK,GAAAqH,EAAAz1B,KAAAkT,IAAA+D,EAAAmL,GAAAld,EACA,QAAAkpB,EAAApuB,KAAAiR,IAAA/L,EAAAid,GAAAsT,EAAArH,EAAApuB,KAAAsS,IAAApN,EAAAid,IAXA,GAAAU,GAAA7iB,KAAAsS,IAAAmW,GAAAxR,EAAA,SAAAmL,GACA,MAAApiB,MAAA01B,IAAAnlB,GAAA,EAAA6R,EAAA,IACAld,EAAAujB,IAAAG,EAAA5oB,KAAAiR,IAAAwX,GAAAzoB,KAAAyX,IAAAoL,EAAA7iB,KAAAsS,IAAAsW,IAAA5oB,KAAAyX,IAAAR,EAAA2R,GAAA3R,EAAAwR,IAAAgN,EAAA5S,EAAA7iB,KAAAkT,IAAA+D,EAAAwR,GAAAvjB,GAAAA,CACA,OAAAA,IAUAipB,EAAA5I,OAAA,SAAA3jB,EAAA4N,GACA,GAAA+e,GAAAkH,EAAAjmB,EAAA4e,EAAAhe,EAAAlL,GAAAlF,KAAAgT,KAAApR,EAAAA,EAAA2sB,EAAAA,EACA,QAAAvuB,KAAA8S,MAAAlR,EAAA2sB,GAAArpB,EAAA,EAAAlF,KAAAipB,KAAAjpB,KAAAkT,IAAAuiB,EAAArH,EAAA,EAAAlpB,IAAAwL,KAEAyd,GAdAwH,GAmBA,QAAAC,IAAAnN,EAAAG,GAGA,QAAAuF,GAAAhM,EAAAC,GACA,GAAAgM,GAAAyH,EAAAzT,CACA,QAAAgM,EAAApuB,KAAAiR,IAAA/L,EAAAid,GAAA0T,EAAAzH,EAAApuB,KAAAsS,IAAApN,EAAAid,IAJA,GAAAU,GAAA7iB,KAAAsS,IAAAmW,GAAAvjB,EAAAujB,IAAAG,EAAA5oB,KAAAiR,IAAAwX,IAAA5F,EAAA7iB,KAAAsS,IAAAsW,KAAAA,EAAAH,GAAAoN,EAAAhT,EAAA3d,EAAAujB,CACA,OAAAxoB,IAAAiF,GAAA2e,GAAAsP,IAKAhF,EAAA5I,OAAA,SAAA3jB,EAAA4N,GACA,GAAA+e,GAAAsH,EAAArmB,CACA,QAAAxP,KAAA8S,MAAAlR,EAAA2sB,GAAArpB,EAAA2wB,EAAAzlB,EAAAlL,GAAAlF,KAAAgT,KAAApR,EAAAA,EAAA2sB,EAAAA,KAEAJ,GAWA,QAAAwH,IAAAxT,EAAAC,GACA,OAAAD,EAAAniB,KAAAyX,IAAAzX,KAAA01B,IAAAnlB,GAAA,EAAA6R,EAAA,KAKA,QAAA0T,IAAA1F,GACA,GAAA2F,GAAAnqB,EAAAomB,GAAA5B,GAAAxY,EAAAhM,EAAAgM,MAAAsb,EAAAtnB,EAAAsnB,UAAAF,EAAApnB,EAAAonB,UAqBA,OApBApnB,GAAAgM,MAAA,WACA,GAAApG,GAAAoG,EAAAjT,MAAAiH,EAAAxJ,UACA,OAAAoP,KAAA5F,EAAAmqB,EAAAnqB,EAAAonB,WAAA,MAAApnB,EAAA4F,GAEA5F,EAAAsnB,UAAA,WACA,GAAA1hB,GAAA0hB,EAAAvuB,MAAAiH,EAAAxJ,UACA,OAAAoP,KAAA5F,EAAAmqB,EAAAnqB,EAAAonB,WAAA,MAAApnB,EAAA4F,GAEA5F,EAAAonB,WAAA,SAAA1vB,GACA,GAAAkO,GAAAwhB,EAAAruB,MAAAiH,EAAAxJ,UACA,IAAAoP,IAAA5F,GACA,GAAAmqB,EAAA,MAAAzyB,EAAA,CACA,GAAAZ,GAAA6N,GAAAqH,IAAAX,EAAAic,GACAF,KAAA/b,EAAA,GAAAvU,EAAAuU,EAAA,GAAAvU,IAAAuU,EAAA,GAAAvU,EAAAuU,EAAA,GAAAvU,UAEAqzB,KACAvkB,EAAA,KAEA,OAAAA,IAEA5F,EAAAonB,WAAA,MAmBA,QAAAgD,IAAA7T,EAAAC,GACA,OAAApiB,KAAAyX,IAAAzX,KAAA01B,IAAAnlB,GAAA,EAAA6R,EAAA,KAAAD,GAiBA,QAAA8T,IAAAzzB,GACA,MAAAA,GAAA,GAEA,QAAA0zB,IAAA1zB,GACA,MAAAA,GAAA,GA2BA,QAAA2zB,IAAA7P,GAEA,IAAA,GADAphB,GAAAohB,EAAA9mB,OAAA42B,GAAA,EAAA,GAAAC,EAAA,EACApxB,EAAA,EAAAC,EAAAD,EAAAA,IAAA,CACA,KAAAoxB,EAAA,GAAAhmB,EAAAiW,EAAA8P,EAAAC,EAAA,IAAA/P,EAAA8P,EAAAC,EAAA,IAAA/P,EAAArhB,KAAA,KAAAoxB,CACAD,GAAAC,KAAApxB,EAEA,MAAAmxB,GAAAxyB,MAAA,EAAAyyB,GAEA,QAAAC,IAAA90B,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAqDA,QAAA80B,IAAAhf,EAAA/V,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAA+V,EAAA,GAAA/V,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAA+V,EAAA,GAAA/V,EAAA,IAEA,QAAAg1B,IAAAltB,EAAA9G,EAAAhB,EAAAC,GACA,GAAAyqB,GAAA5iB,EAAA,GAAAmtB,EAAAj1B,EAAA,GAAAk1B,EAAAl0B,EAAA,GAAA0pB,EAAAyK,EAAAl1B,EAAA,GAAAg1B,EAAAtK,EAAA7iB,EAAA,GAAAstB,EAAAp1B,EAAA,GAAAq1B,EAAAr0B,EAAA,GAAA2pB,EAAA2K,EAAAr1B,EAAA,GAAAm1B,EAAAG,GAAAJ,GAAAxK,EAAAyK,GAAAE,GAAA5K,EAAAuK,KAAAK,EAAAJ,EAAAC,EAAAE,EACA,QAAA3K,EAAA6K,EAAAL,EAAAvK,EAAA4K,EAAAF,GAEA,QAAAG,IAAAvV,GACA,GAAAjgB,GAAAigB,EAAA,GAAAhgB,EAAAggB,EAAAA,EAAAjiB,OAAA,EACA,SAAAgC,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAGA,QAAAw1B,MACAC,GAAA7zB,MACAA,KAAA8zB,KAAA9zB,KAAA+zB,KAAA/zB,KAAAg0B,OAAA,KAEA,QAAAC,IAAAF,GACA,GAAAG,GAAAC,GAAA7P,OAAA,GAAAsP,GAEA,OADAM,GAAAH,KAAAA,EACAG,EAEA,QAAAE,IAAAF,GACAG,GAAAH,GACAI,GAAAzxB,OAAAqxB,GACAC,GAAAvzB,KAAAszB,GACAL,GAAAK,GAEA,QAAAK,IAAAL,GACA,GAAAF,GAAAE,EAAAF,OAAAz1B,EAAAy1B,EAAAz1B,EAAA4N,EAAA6nB,EAAArS,GAAA6S,GACAj2B,EAAAA,EACA4N,EAAAA,GACAsoB,EAAAP,EAAAQ,EAAAC,EAAAT,EAAAU,EAAAC,GAAAX,EACAE,IAAAF,EAEA,KADA,GAAAY,GAAAL,EACAK,EAAAd,QAAAp3B,GAAA2B,EAAAu2B,EAAAd,OAAAz1B,GAAAiiB,IAAA5jB,GAAAuP,EAAA2oB,EAAAd,OAAArS,IAAAnB,IACAiU,EAAAK,EAAAJ,EACAG,EAAA93B,QAAA+3B,GACAV,GAAAU,GACAA,EAAAL,CAEAI,GAAA93B,QAAA+3B,GACAT,GAAAS,EAEA,KADA,GAAAC,GAAAJ,EACAI,EAAAf,QAAAp3B,GAAA2B,EAAAw2B,EAAAf,OAAAz1B,GAAAiiB,IAAA5jB,GAAAuP,EAAA4oB,EAAAf,OAAArS,IAAAnB,IACAmU,EAAAI,EAAAH,EACAC,EAAAj0B,KAAAm0B,GACAX,GAAAW,GACAA,EAAAJ,CAEAE,GAAAj0B,KAAAm0B,GACAV,GAAAU,EACA,IAAAC,GAAAC,EAAAJ,EAAA14B,MACA,KAAA64B,EAAA,EAAAC,EAAAD,IAAAA,EACAD,EAAAF,EAAAG,GACAF,EAAAD,EAAAG,EAAA,GACAE,GAAAH,EAAAjB,KAAAgB,EAAAf,KAAAgB,EAAAhB,KAAAS,EAEAM,GAAAD,EAAA,GACAE,EAAAF,EAAAI,EAAA,GACAF,EAAAjB,KAAAqB,GAAAL,EAAAf,KAAAgB,EAAAhB,KAAA,KAAAS,GACAY,GAAAN,GACAM,GAAAL,GAEA,QAAAM,IAAAtB,GAEA,IADA,GAAAe,GAAAC,EAAAO,EAAAC,EAAAh3B,EAAAw1B,EAAAx1B,EAAAi3B,EAAAzB,EAAA5nB,EAAAvO,EAAA02B,GAAAr0B,EACArC,GAEA,GADA03B,EAAAG,GAAA73B,EAAA43B,GAAAj3B,EACA+2B,EAAA9U,GAAA5iB,EAAAA,EAAAwa,MAAA,CAEA,GADAmd,EAAAh3B,EAAAm3B,GAAA93B,EAAA43B,KACAD,EAAA/U,IAMA,CACA8U,GAAA9U,IACAsU,EAAAl3B,EAAA82B,EACAK,EAAAn3B,GACA23B,GAAA/U,IACAsU,EAAAl3B,EACAm3B,EAAAn3B,EAAAg3B,GAEAE,EAAAC,EAAAn3B,CAEA,OAfA,IAAAA,EAAA+3B,EAAA,CACAb,EAAAl3B,CACA,OAEAA,EAAAA,EAAA+3B,EAeA,GAAAC,GAAA3B,GAAAF,EAEA,IADAO,GAAAuB,OAAAf,EAAAc,GACAd,GAAAC,EAAA,CACA,GAAAD,IAAAC,EAOA,MANAV,IAAAS,GACAC,EAAAd,GAAAa,EAAAf,MACAO,GAAAuB,OAAAD,EAAAb,GACAa,EAAA9B,KAAAiB,EAAAjB,KAAAqB,GAAAL,EAAAf,KAAA6B,EAAA7B,MACAqB,GAAAN,OACAM,IAAAL,EAGA,KAAAA,EAEA,YADAa,EAAA9B,KAAAqB,GAAAL,EAAAf,KAAA6B,EAAA7B,MAGAM,IAAAS,GACAT,GAAAU,EACA,IAAAe,GAAAhB,EAAAf,KAAAhL,EAAA+M,EAAAv3B,EAAAyqB,EAAA8M,EAAA3pB,EAAA8c,EAAA8K,EAAAx1B,EAAAwqB,EAAAG,EAAA6K,EAAA5nB,EAAA6c,EAAA+M,EAAAhB,EAAAhB,KAAArS,EAAAqU,EAAAx3B,EAAAwqB,EAAApH,EAAAoU,EAAA5pB,EAAA6c,EAAA7pB,EAAA,GAAA8pB,EAAAtH,EAAAuH,EAAAxH,GAAAsU,EAAA/M,EAAAA,EAAAC,EAAAA,EAAA+M,EAAAvU,EAAAA,EAAAC,EAAAA,EAAA6S,GACAj2B,GAAAojB,EAAAqU,EAAA9M,EAAA+M,GAAA92B,EAAA4pB,EACA5c,GAAA8c,EAAAgN,EAAAvU,EAAAsU,GAAA72B,EAAA6pB,EAEAkM,IAAAH,EAAAjB,KAAAgC,EAAAC,EAAAvB,GACAoB,EAAA9B,KAAAqB,GAAAW,EAAA/B,EAAA,KAAAS,GACAO,EAAAjB,KAAAqB,GAAApB,EAAAgC,EAAA,KAAAvB,GACAY,GAAAN,GACAM,GAAAL,IAEA,QAAAU,IAAA/O,EAAA8O,GACA,GAAAzB,GAAArN,EAAAqN,KAAAmC,EAAAnC,EAAAx1B,EAAA43B,EAAApC,EAAA5nB,EAAAiqB,EAAAD,EAAAX,CACA,KAAAY,EAAA,MAAAF,EACA,IAAApB,GAAApO,EAAAgO,CACA,KAAAI,EAAA,QAAA/gB,EAAAA,EACAggB,GAAAe,EAAAf,IACA,IAAAsC,GAAAtC,EAAAx1B,EAAA+3B,EAAAvC,EAAA5nB,EAAAoqB,EAAAD,EAAAd,CACA,KAAAe,EAAA,MAAAF,EACA,IAAAG,GAAAH,EAAAH,EAAAO,EAAA,EAAAL,EAAA,EAAAG,EAAAn4B,EAAAo4B,EAAAD,CACA,OAAAE,KAAAr4B,EAAAzB,KAAAgT,KAAAvR,EAAAA,EAAA,EAAAq4B,GAAAD,EAAAA,GAAA,GAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GACAA,EAAAG,GAAA,EAEA,QAAAX,IAAAhP,EAAA8O,GACA,GAAAT,GAAArO,EAAAkO,CACA,IAAAG,EAAA,MAAAU,IAAAV,EAAAS,EACA,IAAAzB,GAAArN,EAAAqN,IACA,OAAAA,GAAA5nB,IAAAqpB,EAAAzB,EAAAx1B,EAAAwV,EAAAA,EAEA,QAAA2iB,IAAA3C,GACA/zB,KAAA+zB,KAAAA,EACA/zB,KAAA22B,SAWA,QAAAC,IAAAC,GAEA,IADA,GAAA3I,GAAAC,EAAAiF,EAAAG,EAAAuD,EAAAC,EAAAC,EAAAC,EAAA/T,EAAAgU,EAAAhW,EAAA2V,EAAA,GAAA,GAAAhO,EAAAgO,EAAA,GAAA,GAAA7V,EAAA6V,EAAA,GAAA,GAAA/N,EAAA+N,EAAA,GAAA,GAAAM,EAAAC,GAAAC,EAAAF,EAAAh7B,OACAk7B,KAEA,GADAP,EAAAK,EAAAE,GACAP,GAAAA,EAAAQ,UAIA,IAHAN,EAAAF,EAAAH,MACAM,EAAAD,EAAA76B,OACA46B,EAAA,EACAE,EAAAF,GACAG,EAAAF,EAAAD,GAAAG,MAAA9D,EAAA8D,EAAA34B,EAAAg1B,EAAA2D,EAAA/qB,EACA+W,EAAA8T,IAAAD,EAAAE,GAAA/T,QAAAgL,EAAAhL,EAAA3kB,EAAA4vB,EAAAjL,EAAA/W,GACAvP,GAAAw2B,EAAAlF,GAAA1N,IAAA5jB,GAAA22B,EAAApF,GAAA3N,MACAwW,EAAAO,OAAAR,EAAA,EAAA,GAAAS,IAAAC,GAAAX,EAAA/C,KAAAmD,EAAAt6B,GAAAw2B,EAAAlS,GAAAV,IAAAsI,EAAAyK,EAAA/S,IACAjiB,EAAA2iB,EACA/U,EAAAvP,GAAAsxB,EAAAhN,GAAAV,GAAA2N,EAAArF,GACAlsB,GAAA22B,EAAAzK,GAAAtI,IAAAqI,EAAAuK,EAAA5S,IACAjiB,EAAA3B,GAAAuxB,EAAArF,GAAAtI,GAAA0N,EAAArF,EACA1c,EAAA2c,GACAlsB,GAAAw2B,EAAAvK,GAAArI,IAAA+S,EAAAvS,EAAAR,IACAjiB,EAAAsqB,EACA1c,EAAAvP,GAAAsxB,EAAArF,GAAArI,GAAA2N,EAAAnN,GACApkB,GAAA22B,EAAAvS,GAAAR,IAAA4S,EAAAlS,EAAAV,IACAjiB,EAAA3B,GAAAuxB,EAAAnN,GAAAR,GAAA0N,EAAAhN,EACA/U,EAAA6U,GACA,MAAA8V,EAAA/C,KAAA,SACAkD,GAKA,QAAAS,IAAAv5B,EAAAC,GACA,MAAAA,GAAAsyB,MAAAvyB,EAAAuyB,MAEA,QAAAiH,MACA9D,GAAA7zB,MACAA,KAAAzB,EAAAyB,KAAAmM,EAAAnM,KAAA0mB,IAAA1mB,KAAA+zB,KAAA/zB,KAAA2hB,GAAA,KAEA,QAAAyT,IAAA1O,GACA,GAAAoO,GAAApO,EAAAgO,EAAAK,EAAArO,EAAAkO,CACA,IAAAE,GAAAC,EAAA,CACA,GAAAe,GAAAhB,EAAAf,KAAA6D,EAAAlR,EAAAqN,KAAAgC,EAAAhB,EAAAhB,IACA,IAAA+B,IAAAC,EAAA,CACA,GAAA9M,GAAA2O,EAAAr5B,EAAA2qB,EAAA0O,EAAAzrB,EAAA4c,EAAA+M,EAAAv3B,EAAA0qB,EAAAD,EAAA8M,EAAA3pB,EAAA+c,EAAAxH,EAAAqU,EAAAx3B,EAAA0qB,EAAAtH,EAAAoU,EAAA5pB,EAAA+c,EACA/pB,EAAA,GAAA4pB,EAAApH,EAAAqH,EAAAtH,EACA,MAAAviB,IAAA04B,IAAA,CACA,GAAAC,GAAA/O,EAAAA,EAAAC,EAAAA,EAAAiN,EAAAvU,EAAAA,EAAAC,EAAAA,EAAApjB,GAAAojB,EAAAmW,EAAA9O,EAAAiN,GAAA92B,EAAAgN,GAAA4c,EAAAkN,EAAAvU,EAAAoW,GAAA34B,EAAAwiB,EAAAxV,EAAA+c,EACA8K,EAAA+D,GAAAzT,OAAA,GAAAqT,GACA3D,GAAAtN,IAAAA,EACAsN,EAAAD,KAAA6D,EACA5D,EAAAz1B,EAAAA,EAAA0qB,EACA+K,EAAA7nB,EAAAwV,EAAAhlB,KAAAgT,KAAApR,EAAAA,EAAA4N,EAAAA,GACA6nB,EAAArS,GAAAA,EACA+E,EAAAsN,OAAAA,CAEA,KADA,GAAAxd,GAAA,KAAA5Y,EAAAo6B,GAAA/3B,EACArC,GACA,GAAAo2B,EAAA7nB,EAAAvO,EAAAuO,GAAA6nB,EAAA7nB,IAAAvO,EAAAuO,GAAA6nB,EAAAz1B,GAAAX,EAAAW,EAAA,CACA,IAAAX,EAAAwa,EAAA,CACA5B,EAAA5Y,EAAA82B,CACA,OAFA92B,EAAAA,EAAAwa,MAIA,CACA,IAAAxa,EAAA+3B,EAAA,CACAnf,EAAA5Y,CACA,OAFAA,EAAAA,EAAA+3B,EAMAqC,GAAAnC,OAAArf,EAAAwd,GACAxd,IAAAyhB,GAAAjE,MAEA,QAAAK,IAAA3N,GACA,GAAAsN,GAAAtN,EAAAsN,MACAA,KACAA,EAAAU,IAAAuD,GAAAjE,EAAAY,GACAoD,GAAAn1B,OAAAmxB,GACA+D,GAAAn3B,KAAAozB,GACAH,GAAAG,GACAtN,EAAAsN,OAAA,MAGA,QAAAkE,IAAArB,GAEA,IADA,GAAA1zB,GAAAwzB,EAAAwB,GAAA1V,EAAAmG,GAAAiO,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAj1B,EAAA+0B,EAAAx6B,OACAyF,KACAuB,EAAAwzB,EAAA/0B,KACAw2B,GAAAj1B,EAAA0zB,KAAApU,EAAAtf,IAAAvG,GAAAuG,EAAAhF,EAAAI,EAAA4E,EAAA/E,EAAAG,GAAAiiB,IAAA5jB,GAAAuG,EAAAhF,EAAAgO,EAAAhJ,EAAA/E,EAAA+N,GAAAqU,MACArd,EAAAhF,EAAAgF,EAAA/E,EAAA,KACAu4B,EAAAY,OAAA31B,EAAA,IAIA,QAAAw2B,IAAAtE,EAAA+C,GACA,GAAAwB,GAAAvE,EAAA11B,CACA,IAAAi6B,EAAA,OAAA,CACA,IAAAC,GAAAC,EAAAC,EAAA1E,EAAA31B,EAAA+iB,EAAA2V,EAAA,GAAA,GAAAhO,EAAAgO,EAAA,GAAA,GAAA7V,EAAA6V,EAAA,GAAA,GAAA/N,EAAA+N,EAAA,GAAA,GAAAf,EAAAhC,EAAAzxB,EAAA0zB,EAAAjC,EAAAhlB,EAAA2pB,EAAA3C,EAAAv3B,EAAAm6B,EAAA5C,EAAA3pB,EAAAwsB,EAAA5C,EAAAx3B,EAAAq6B,EAAA7C,EAAA5pB,EAAA0sB,GAAAJ,EAAAE,GAAA,EAAAG,GAAAJ,EAAAE,GAAA,CACA,IAAAA,IAAAF,EAAA,CACA,GAAAxX,EAAA2X,GAAAA,GAAAhQ,EAAA,MACA,IAAA4P,EAAAE,EAAA,CACA,GAAAH,GAGA,GAAAA,EAAArsB,GAAA2c,EAAA,WAHA0P,IACAj6B,EAAAs6B,EACA1sB,EAAA6U,EAEAqX,IACA95B,EAAAs6B,EACA1sB,EAAA2c,OAEA,CACA,GAAA0P,GAGA,GAAAA,EAAArsB,EAAA6U,EAAA,WAHAwX,IACAj6B,EAAAs6B,EACA1sB,EAAA2c,EAEAuP,IACA95B,EAAAs6B,EACA1sB,EAAA6U,QAMA,IAFAsX,GAAAG,EAAAE,IAAAC,EAAAF,GACAH,EAAAO,EAAAR,EAAAO,EACA,GAAAP,GAAAA,EAAA,EACA,GAAAG,EAAAE,EAAA,CACA,GAAAH,GAGA,GAAAA,EAAArsB,GAAA2c,EAAA,WAHA0P,IACAj6B,GAAAyiB,EAAAuX,GAAAD,EACAnsB,EAAA6U,EAEAqX,IACA95B,GAAAuqB,EAAAyP,GAAAD,EACAnsB,EAAA2c,OAEA,CACA,GAAA0P,GAGA,GAAAA,EAAArsB,EAAA6U,EAAA,WAHAwX,IACAj6B,GAAAuqB,EAAAyP,GAAAD,EACAnsB,EAAA2c,EAEAuP,IACA95B,GAAAyiB,EAAAuX,GAAAD,EACAnsB,EAAA6U,OAIA,IAAA4X,EAAAF,EAAA,CACA,GAAAF,GAGA,GAAAA,EAAAj6B,GAAAsqB,EAAA,WAHA2P,IACAj6B,EAAA2iB,EACA/U,EAAAmsB,EAAApX,EAAAqX,EAEAF,IACA95B,EAAAsqB,EACA1c,EAAAmsB,EAAAzP,EAAA0P,OAEA,CACA,GAAAC,GAGA,GAAAA,EAAAj6B,EAAA2iB,EAAA,WAHAsX,IACAj6B,EAAAsqB,EACA1c,EAAAmsB,EAAAzP,EAAA0P,EAEAF,IACA95B,EAAA2iB,EACA/U,EAAAmsB,EAAApX,EAAAqX,GAOA,MAFAzE,GAAA31B,EAAAq6B,EACA1E,EAAA11B,EAAAi6B,GACA,EAEA,QAAAU,IAAAjD,EAAAC,GACA/1B,KAAAqC,EAAAyzB,EACA91B,KAAA8O,EAAAinB,EACA/1B,KAAA7B,EAAA6B,KAAA5B,EAAA,KAEA,QAAA+2B,IAAAW,EAAAC,EAAAyC,EAAAH,GACA,GAAAvE,GAAA,GAAAiF,IAAAjD,EAAAC,EAMA,OALAoC,IAAAv3B,KAAAkzB,GACA0E,GAAAtD,GAAApB,EAAAgC,EAAAC,EAAAyC,GACAH,GAAAnD,GAAApB,EAAAiC,EAAAD,EAAAuC,GACAjB,GAAAtB,EAAAl0B,GAAA+0B,MAAA/1B,KAAA,GAAA42B,IAAA1D,EAAAgC,EAAAC,IACAqB,GAAArB,EAAAn0B,GAAA+0B,MAAA/1B,KAAA,GAAA42B,IAAA1D,EAAAiC,EAAAD,IACAhC,EAEA,QAAA2D,IAAA3B,EAAA0C,EAAAH,GACA,GAAAvE,GAAA,GAAAiF,IAAAjD,EAAA,KAIA,OAHAhC,GAAA31B,EAAAq6B,EACA1E,EAAA11B,EAAAi6B,EACAF,GAAAv3B,KAAAkzB,GACAA,EAEA,QAAAoB,IAAApB,EAAAgC,EAAAC,EAAAvB,GACAV,EAAA31B,GAAA21B,EAAA11B,EAIA01B,EAAAzxB,IAAA0zB,EACAjC,EAAA11B,EAAAo2B,EAEAV,EAAA31B,EAAAq2B,GANAV,EAAA31B,EAAAq2B,EACAV,EAAAzxB,EAAAyzB,EACAhC,EAAAhlB,EAAAinB,GAOA,QAAAyB,IAAA1D,EAAAgC,EAAAC,GACA,GAAAyC,GAAA1E,EAAA31B,EAAAk6B,EAAAvE,EAAA11B,CACA4B,MAAA8zB,KAAAA,EACA9zB,KAAA+zB,KAAA+B,EACA91B,KAAA0wB,MAAAqF,EAAAp5B,KAAA8S,MAAAsmB,EAAA5pB,EAAA2pB,EAAA3pB,EAAA4pB,EAAAx3B,EAAAu3B,EAAAv3B,GAAAu1B,EAAAzxB,IAAAyzB,EAAAn5B,KAAA8S,MAAA4oB,EAAA95B,EAAAi6B,EAAAj6B,EAAAi6B,EAAArsB,EAAAksB,EAAAlsB,GAAAxP,KAAA8S,MAAA+oB,EAAAj6B,EAAA85B,EAAA95B,EAAA85B,EAAAlsB,EAAAqsB,EAAArsB,GAUA,QAAA6sB,MACAh5B,KAAAC,EAAA,KAEA,QAAA4zB,IAAAj2B,GACAA,EAAA+a,EAAA/a,EAAAotB,EAAAptB,EAAAwa,EAAAxa,EAAA+3B,EAAA/3B,EAAA82B,EAAA92B,EAAAg3B,EAAA,KAkKA,QAAAqE,IAAAC,EAAAt7B,GACA,GAAAsW,GAAAtW,EAAA2qB,EAAA3qB,EAAA+3B,EAAAjuB,EAAAwM,EAAAyE,CACAjR,GACAA,EAAA0Q,IAAAlE,EAAAxM,EAAA0Q,EAAAmQ,EAAA7gB,EAAAiuB,EAAApN,EAEA2Q,EAAAj5B,EAAAsoB,EAEAA,EAAA5P,EAAAjR,EACAwM,EAAAyE,EAAA4P,EACArU,EAAAyhB,EAAApN,EAAAnQ,EACAlE,EAAAyhB,IAAAzhB,EAAAyhB,EAAAhd,EAAAzE,GACAqU,EAAAnQ,EAAAlE,EAEA,QAAAilB,IAAAD,EAAAt7B,GACA,GAAAsW,GAAAtW,EAAA2qB,EAAA3qB,EAAAwa,EAAA1Q,EAAAwM,EAAAyE,CACAjR,GACAA,EAAA0Q,IAAAlE,EAAAxM,EAAA0Q,EAAAmQ,EAAA7gB,EAAAiuB,EAAApN,EAEA2Q,EAAAj5B,EAAAsoB,EAEAA,EAAA5P,EAAAjR,EACAwM,EAAAyE,EAAA4P,EACArU,EAAAkE,EAAAmQ,EAAAoN,EACAzhB,EAAAkE,IAAAlE,EAAAkE,EAAAO,EAAAzE,GACAqU,EAAAoN,EAAAzhB,EAEA,QAAAklB,IAAAx7B,GACA,KAAAA,EAAAwa,GAAAxa,EAAAA,EAAAwa,CACA,OAAAxa,GAEA,QAAAy7B,IAAAC,EAAAC,GACA,GAAArY,GAAAF,EAAAgT,EAAAD,EAAAuF,EAAAxW,KAAA0W,IAAAlV,KAKA,KAJA6T,MACAf,GAAA,GAAAt6B,OAAAw8B,EAAAn9B,QACAm4B,GAAA,GAAA0E,IACAhB,GAAA,GAAAgB,MAGA,GADAhF,EAAAiE,GACAlE,KAAAC,GAAAD,EAAA5nB,EAAA6nB,EAAA7nB,GAAA4nB,EAAA5nB,IAAA6nB,EAAA7nB,GAAA4nB,EAAAx1B,EAAAy1B,EAAAz1B,IACAw1B,EAAAx1B,IAAA2iB,GAAA6S,EAAA5nB,IAAA6U,KACAoW,GAAArD,EAAAnyB,GAAA,GAAA80B,IAAA3C,GACAsB,GAAAtB,GACA7S,EAAA6S,EAAAx1B,EAAAyiB,EAAA+S,EAAA5nB,GAEA4nB,EAAAuF,EAAAhV,UACA,CAAA,IAAA0P,EAGA,KAFAO,IAAAP,EAAAtN,KAKA6S,IAAArB,GAAAqB,GAAA3C,GAAA2C,GACA,IAAAE,IACAtC,MAAAC,GACAT,MAAAwB,GAGA,OADA7D,IAAA0D,GAAAG,GAAAf,GAAA,KACAqC,EAEA,QAAAD,IAAAr7B,EAAAC,GACA,MAAAA,GAAA+N,EAAAhO,EAAAgO,GAAA/N,EAAAG,EAAAJ,EAAAI,EAqEA,QAAAm7B,IAAAv7B,EAAAC,EAAA6H,GACA,OAAA9H,EAAAI,EAAA0H,EAAA1H,IAAAH,EAAA+N,EAAAhO,EAAAgO,IAAAhO,EAAAI,EAAAH,EAAAG,IAAA0H,EAAAkG,EAAAhO,EAAAgO,GAgHA,QAAAwtB,IAAAx6B,GACA,MAAAA,GAAAZ,EAEA,QAAAq7B,IAAAz6B,GACA,MAAAA,GAAAgN,EAEA,QAAA0tB,MACA,OACAC,MAAA,EACAC,SACA3uB,MAAA,KACA7M,EAAA,KACA4N,EAAA,MAGA,QAAA6tB,IAAA/tB,EAAArO,EAAAirB,EAAAC,EAAAoF,EAAAC,GACA,IAAAliB,EAAArO,EAAAirB,EAAAC,EAAAoF,EAAAC,GAAA,CACA,GAAA8L,GAAA,IAAApR,EAAAqF,GAAAgM,EAAA,IAAApR,EAAAqF,GAAAgM,EAAAv8B,EAAAm8B,KACAI,GAAA,IAAAH,GAAA/tB,EAAAkuB,EAAA,GAAAtR,EAAAC,EAAAmR,EAAAC,GACAC,EAAA,IAAAH,GAAA/tB,EAAAkuB,EAAA,GAAAF,EAAAnR,EAAAoF,EAAAgM,GACAC,EAAA,IAAAH,GAAA/tB,EAAAkuB,EAAA,GAAAtR,EAAAqR,EAAAD,EAAA9L,GACAgM,EAAA,IAAAH,GAAA/tB,EAAAkuB,EAAA,GAAAF,EAAAC,EAAAhM,EAAAC,IAGA,QAAAiM,IAAAC,EAAA97B,EAAA4N,EAAA+U,EAAAF,EAAAoS,EAAAG,GACA,GAAA+G,GAAAC,EAAAxmB,EAAAA,CAiCA,OAhCA,SAAAymB,GAAA58B,EAAAirB,EAAAC,EAAAoF,EAAAC,GACA,KAAAtF,EAAAuK,GAAAtK,EAAAyK,GAAArS,EAAAgN,GAAAlN,EAAAmN,GAAA,CACA,GAAA/iB,EAAAxN,EAAAwN,MAAA,CACA,GAAAA,GAAA+d,EAAA5qB,EAAAX,EAAAW,EAAA6qB,EAAAjd,EAAAvO,EAAAuO,EAAAsuB,EAAAtR,EAAAA,EAAAC,EAAAA,CACA,IAAAmR,EAAAE,EAAA,CACA,GAAAhJ,GAAA90B,KAAAgT,KAAA4qB,EAAAE,EACAvZ,GAAA3iB,EAAAkzB,EAAAzQ,EAAA7U,EAAAslB,EACA2B,EAAA70B,EAAAkzB,EAAA8B,EAAApnB,EAAAslB,EACA6I,EAAAlvB,GAIA,IAAA,GADA+uB,GAAAv8B,EAAAm8B,MAAAW,EAAA,IAAA7R,EAAAqF,GAAAyM,EAAA,IAAA7R,EAAAqF,GAAAlvB,EAAAV,GAAAm8B,EAAAE,EAAAzuB,GAAAwuB,EACA/4B,EAAAg5B,GAAA,EAAA37B,EAAAqJ,EAAA1G,EAAA,EAAA0G,EAAA1G,IAAAA,EACA,GAAAhE,EAAAu8B,EAAA,EAAAv4B,GAAA,OAAA,EAAAA,GACA,IAAA,GACA44B,EAAA58B,EAAAirB,EAAAC,EAAA4R,EAAAC,EACA,MAEA,KAAA,GACAH,EAAA58B,EAAA88B,EAAA5R,EAAAoF,EAAAyM,EACA,MAEA,KAAA,GACAH,EAAA58B,EAAAirB,EAAA8R,EAAAD,EAAAvM,EACA,MAEA,KAAA,GACAqM,EAAA58B,EAAA88B,EAAAC,EAAAzM,EAAAC,MAIAkM,EAAAnZ,EAAAF,EAAAoS,EAAAG,GACA+G,EAGA,QAAAO,IAAA18B,EAAAC,GACAD,EAAAb,GAAAuR,IAAA1Q,GACAC,EAAAd,GAAAuR,IAAAzQ,EACA,IAAA08B,GAAA38B,EAAA2Q,EAAAisB,EAAA58B,EAAA4Q,EAAAisB,EAAA78B,EAAAC,EAAA68B,EAAA78B,EAAA0Q,EAAAgsB,EAAAI,EAAA98B,EAAA2Q,EAAAgsB,EAAAI,EAAA/8B,EAAAA,EAAA48B,CACA,OAAA,UAAApnB,GACA,MAAA,IAAA5D,GAAArT,KAAA4R,MAAAusB,EAAAG,EAAArnB,IAAA5D,GAAArT,KAAA4R,MAAAwsB,EAAAG,EAAAtnB,IAAA5D,GAAArT,KAAA4R,MAAAysB,EAAAG,EAAAvnB,KAIA,QAAAwnB,IAAAj9B,EAAAC,GACA,GAAAiB,GAAAuC,KAAAqE,IACA,KAAA5G,IAAAlB,GACAkB,IAAAjB,GACAwD,EAAAvC,GAAAg8B,GAAAl9B,EAAAkB,GAAAjB,EAAAiB,IAEA4G,EAAA5G,GAAAlB,EAAAkB,EAGA,KAAAA,IAAAjB,GACAiB,IAAAlB,KACA8H,EAAA5G,GAAAjB,EAAAiB,GAGA,OAAA,UAAAuU,GACA,IAAAvU,IAAAuC,GAAAqE,EAAA5G,GAAAuC,EAAAvC,GAAAuU,EACA,OAAA3N,IAIA,QAAAq1B,IAAAn9B,EAAAC,GAEA,MADAD,IAAAA,EAAAC,GAAAA,EACA,SAAAwV,GACA,MAAAzV,IAAA,EAAAyV,GAAAxV,EAAAwV,GAIA,QAAA2nB,IAAAp9B,EAAAC,GACA,GAAAo9B,GAAAC,EAAAC,EAAAC,EAAAC,GAAAv1B,UAAAw1B,GAAAx1B,UAAA,EAAAzE,EAAA,GAAAsB,KAAAqlB,IAEA,KADApqB,GAAA,GAAAC,GAAA,IACAo9B,EAAAI,GAAAtrB,KAAAnS,MAAAs9B,EAAAI,GAAAvrB,KAAAlS,MACAs9B,EAAAD,EAAAK,OAAAH,IACAD,EAAAt9B,EAAAmC,MAAAo7B,EAAAD,GACAx4B,EAAAtB,GAAAsB,EAAAtB,IAAA85B,EAAAx4B,IAAAtB,GAAA85B,IAEAF,EAAAA,EAAA,OAAAC,EAAAA,EAAA,IACAv4B,EAAAtB,GAAAsB,EAAAtB,IAAA65B,EAAAv4B,IAAAtB,GAAA65B,GAEAv4B,IAAAtB,GAAA,KACA2mB,EAAA3nB,MACAgB,EAAAA,EACArD,EAAA+8B,GAAAE,EAAAC,MAGAE,EAAAE,GAAAx1B,SAMA,OAJAs1B,GAAAv9B,EAAAjC,SACAu/B,EAAAt9B,EAAAmC,MAAAo7B,GACAz4B,EAAAtB,GAAAsB,EAAAtB,IAAA85B,EAAAx4B,IAAAtB,GAAA85B,GAEAx4B,EAAA/G,OAAA,EAAAosB,EAAA,IAAAnqB,EAAAmqB,EAAA,GAAAhqB,EAAA,SAAAqV,GACA,MAAAxV,GAAAwV,GAAA,KACA,WACA,MAAAxV,KACAA,EAAAmqB,EAAApsB,OAAA,SAAAyX,GACA,IAAA,GAAA3J,GAAArI,EAAA,EAAAxD,EAAAwD,IAAAA,EAAAsB,GAAA+G,EAAAse,EAAA3mB,IAAAA,GAAAqI,EAAA1L,EAAAqV,EACA,OAAA1Q,GAAAlG,KAAA,MAKA,QAAAq+B,IAAAl9B,EAAAC,GAEA,IADA,GAAA6N,GAAArK,EAAAtE,GAAAy+B,cAAA5/B,SACAyF,GAAA,KAAAqK,EAAA3O,GAAAy+B,cAAAn6B,GAAAzD,EAAAC,MACA,MAAA6N,GAOA,QAAA+vB,IAAA79B,EAAAC,GACA,GAAAwD,GAAArD,KAAA0H,KAAAg2B,EAAA99B,EAAAhC,OAAA+/B,EAAA99B,EAAAjC,OAAAggC,EAAAx/B,KAAAwT,IAAAhS,EAAAhC,OAAAiC,EAAAjC,OACA,KAAAyF,EAAA,EAAAu6B,EAAAv6B,IAAAA,EAAArD,EAAAqC,KAAAy6B,GAAAl9B,EAAAyD,GAAAxD,EAAAwD,IACA,MAAAq6B,EAAAr6B,IAAAA,EAAAqE,EAAArE,GAAAzD,EAAAyD,EACA,MAAAs6B,EAAAt6B,IAAAA,EAAAqE,EAAArE,GAAAxD,EAAAwD,EACA,OAAA,UAAAgS,GACA,IAAAhS,EAAA,EAAAu6B,EAAAv6B,IAAAA,EAAAqE,EAAArE,GAAArD,EAAAqD,GAAAgS,EACA,OAAA3N,IA4CA,QAAAm2B,IAAAnwB,GACA,MAAA,UAAA2H,GACA,MAAA,IAAAA,EAAA,EAAAA,GAAA,EAAA,EAAA3H,EAAA2H,IAGA,QAAAyoB,IAAApwB,GACA,MAAA,UAAA2H,GACA,MAAA,GAAA3H,EAAA,EAAA2H,IAGA,QAAA0oB,IAAArwB,GACA,MAAA,UAAA2H,GACA,MAAA,IAAA,GAAAA,EAAA3H,EAAA,EAAA2H,GAAA,EAAA3H,EAAA,EAAA,EAAA2H,KAGA,QAAA2oB,IAAA3oB,GACA,MAAAA,GAAAA,EAEA,QAAA4oB,IAAA5oB,GACA,MAAAA,GAAAA,EAAAA,EAEA,QAAA6oB,IAAA7oB,GACA,GAAA,GAAAA,EAAA,MAAA,EACA,IAAAA,GAAA,EAAA,MAAA,EACA,IAAA0U,GAAA1U,EAAAA,EAAA8oB,EAAApU,EAAA1U,CACA,OAAA,IAAA,GAAAA,EAAA8oB,EAAA,GAAA9oB,EAAA0U,GAAAoU,EAAA,KAEA,QAAAC,IAAAx5B,GACA,MAAA,UAAAyQ,GACA,MAAAjX,MAAAkT,IAAA+D,EAAAzQ,IAGA,QAAAy5B,IAAAhpB,GACA,MAAA,GAAAjX,KAAAsS,IAAA2E,EAAAvG,IAEA,QAAAwvB,IAAAjpB,GACA,MAAAjX,MAAAkT,IAAA,EAAA,IAAA+D,EAAA,IAEA,QAAAkpB,IAAAlpB,GACA,MAAA,GAAAjX,KAAAgT,KAAA,EAAAiE,EAAAA,GAEA,QAAAmpB,IAAA5+B,EAAA+V,GACA,GAAAhR,EAGA,OAFAnE,WAAA5C,OAAA,IAAA+X,EAAA,KACAnV,UAAA5C,OAAA+G,EAAAgR,EAAAuS,GAAA9pB,KAAA2Q,KAAA,EAAAnP,IAAAA,EAAA,EAAA+E,EAAAgR,EAAA,GACA,SAAAN,GACA,MAAA,GAAAzV,EAAAxB,KAAAkT,IAAA,EAAA,IAAA+D,GAAAjX,KAAAiR,KAAAgG,EAAA1Q,GAAAujB,GAAAvS,IAGA,QAAA8oB,IAAA95B,GAEA,MADAA,KAAAA,EAAA,SACA,SAAA0Q,GACA,MAAAA,GAAAA,IAAA1Q,EAAA,GAAA0Q,EAAA1Q,IAGA,QAAA+5B,IAAArpB,GACA,MAAA,GAAA,KAAAA,EAAA,OAAAA,EAAAA,EAAA,EAAA,KAAAA,EAAA,QAAAA,GAAA,IAAA,MAAAA,EAAA,IAAA,IAAA,KAAAA,EAAA,QAAAA,GAAA,KAAA,MAAAA,EAAA,MAAA,QAAAA,GAAA,MAAA,MAAAA,EAAA,QAGA,QAAAspB,IAAA/+B,EAAAC,GACAD,EAAAb,GAAA6/B,IAAAh/B,GACAC,EAAAd,GAAA6/B,IAAA/+B,EACA,IAAAg/B,GAAAj/B,EAAA4P,EAAAsvB,EAAAl/B,EAAA8H,EAAAq3B,EAAAn/B,EAAAkE,EAAAk7B,EAAAn/B,EAAA2P,EAAAqvB,EAAAI,EAAAp/B,EAAA6H,EAAAo3B,EAAAI,EAAAr/B,EAAAiE,EAAAi7B,CAGA,OAFA7+B,OAAA++B,KAAAA,EAAA,EAAAH,EAAA5+B,MAAA4+B,GAAAj/B,EAAA6H,EAAAo3B,GACA5+B,MAAA8+B,IAAAA,EAAA,EAAAH,EAAA3+B,MAAA2+B,GAAAh/B,EAAA2P,EAAAqvB,GAAAG,EAAA,IAAAA,GAAA,IAAA,KAAAA,IAAAA,GAAA,KACA,SAAA3pB,GACA,MAAA5E,IAAAouB,EAAAG,EAAA3pB,EAAAypB,EAAAG,EAAA5pB,EAAA0pB,EAAAG,EAAA7pB,GAAA,IAIA,QAAA8pB,IAAAv/B,EAAAC,GACAD,EAAAb,GAAA8S,IAAAjS,GACAC,EAAAd,GAAA8S,IAAAhS,EACA,IAAAg/B,GAAAj/B,EAAA4P,EAAA4vB,EAAAx/B,EAAA+E,EAAAo6B,EAAAn/B,EAAAkE,EAAAk7B,EAAAn/B,EAAA2P,EAAAqvB,EAAA1B,EAAAt9B,EAAA8E,EAAAy6B,EAAAF,EAAAr/B,EAAAiE,EAAAi7B,CAGA,OAFA7+B,OAAAi9B,KAAAA,EAAA,EAAAiC,EAAAl/B,MAAAk/B,GAAAv/B,EAAA8E,EAAAy6B,GACAl/B,MAAA8+B,IAAAA,EAAA,EAAAH,EAAA3+B,MAAA2+B,GAAAh/B,EAAA2P,EAAAqvB,GAAAG,EAAA,IAAAA,GAAA,IAAA,KAAAA,IAAAA,GAAA,KACA,SAAA3pB,GACA,MAAA1F,IAAAkvB,EAAAG,EAAA3pB,EAAA+pB,EAAAjC,EAAA9nB,EAAA0pB,EAAAG,EAAA7pB,GAAA,IAIA,QAAAgqB,IAAAz/B,EAAAC,GACAD,EAAAb,GAAAugC,IAAA1/B,GACAC,EAAAd,GAAAugC,IAAAz/B,EACA,IAAAk/B,GAAAn/B,EAAAkE,EAAAy7B,EAAA3/B,EAAAA,EAAA68B,EAAA78B,EAAAC,EAAAq/B,EAAAr/B,EAAAiE,EAAAi7B,EAAAS,EAAA3/B,EAAAD,EAAA2/B,EAAA3C,EAAA/8B,EAAAA,EAAA48B,CACA,OAAA,UAAApnB,GACA,MAAAzE,IAAAmuB,EAAAG,EAAA7pB,EAAAkqB,EAAAC,EAAAnqB,EAAAonB,EAAAG,EAAAvnB,GAAA,IAIA,QAAAoqB,IAAA7/B,EAAAC,GAEA,MADAA,IAAAD,EACA,SAAAyV,GACA,MAAAjX,MAAA4R,MAAApQ,EAAAC,EAAAwV,IAaA,QAAAqqB,IAAA11B,GACA,GAAA21B,IAAA31B,EAAApK,EAAAoK,EAAAnK,GAAA+/B,GAAA51B,EAAAtC,EAAAsC,EAAApJ,GAAAi/B,EAAAC,GAAAH,GAAAI,EAAAC,GAAAL,EAAAC,GAAAK,EAAAH,GAAAI,GAAAN,EAAAD,GAAAI,KAAA,CACAJ,GAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KACAA,EAAA,IAAA,GACAA,EAAA,IAAA,GACAE,GAAA,GACAE,GAAA,IAEAt+B,KAAA2jB,QAAAya,EAAAzhC,KAAA8S,MAAAyuB,EAAA,GAAAA,EAAA,IAAAvhC,KAAA8S,OAAA0uB,EAAA,GAAAA,EAAA,KAAAzuB,GACA1P,KAAA6vB,WAAAtnB,EAAApF,EAAAoF,EAAA0D,GACAjM,KAAAuU,OAAA6pB,EAAAI,GACAx+B,KAAA0+B,KAAAF,EAAA7hC,KAAA8S,MAAA6uB,EAAAE,GAAA9uB,GAAA,EAKA,QAAA6uB,IAAApgC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAEA,QAAAigC,IAAAlgC,GACA,GAAAkB,GAAA1C,KAAAgT,KAAA4uB,GAAApgC,EAAAA,GAKA,OAJAkB,KACAlB,EAAA,IAAAkB,EACAlB,EAAA,IAAAkB,GAEAA,EAEA,QAAAo/B,IAAAtgC,EAAAC,EAAAiB,GAGA,MAFAlB,GAAA,IAAAkB,EAAAjB,EAAA,GACAD,EAAA,IAAAkB,EAAAjB,EAAA,GACAD,EAWA,QAAAwgC,IAAAxgC,EAAAC,GACA,GAAAyD,GAAAqB,KAAAqlB,KAAArN,EAAA5d,GAAAshC,UAAAzgC,GAAAid,EAAA9d,GAAAshC,UAAAxgC,GAAAygC,EAAA3jB,EAAA2U,UAAAiP,EAAA1jB,EAAAyU,UAAAkP,EAAA7jB,EAAAyI,OAAAqb,EAAA5jB,EAAAuI,OAAAsb,EAAA/jB,EAAAwjB,KAAAQ,EAAA9jB,EAAAsjB,KAAAS,EAAAjkB,EAAA3G,MAAA6qB,EAAAhkB,EAAA7G,KA6CA,OA5CAsqB,GAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IACA57B,EAAAtC,KAAA,aAAA,KAAA,IAAA,KAAA,KACA2nB,EAAA3nB,MACAgB,EAAA,EACArD,EAAA+8B,GAAAuD,EAAA,GAAAC,EAAA,MAEAl9B,EAAA,EACArD,EAAA+8B,GAAAuD,EAAA,GAAAC,EAAA,OAGA57B,EAAAtC,KADAk+B,EAAA,IAAAA,EAAA,GACA,aAAAA,EAAA,IAEA,IAEAC,GAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAAA,EAAAD,EAAA,MAAAA,GAAA,KACAxW,EAAA3nB,MACAgB,EAAAsB,EAAAtC,KAAAsC,EAAAohB,MAAA,UAAA,KAAA,KAAA,EACA/lB,EAAA+8B,GAAAyD,EAAAC,MAEAA,GACA97B,EAAAtC,KAAAsC,EAAAohB,MAAA,UAAA0a,EAAA,KAEAC,GAAAC,EACA3W,EAAA3nB,MACAgB,EAAAsB,EAAAtC,KAAAsC,EAAAohB,MAAA,SAAA,KAAA,KAAA,EACA/lB,EAAA+8B,GAAA2D,EAAAC,KAEAA,GACAh8B,EAAAtC,KAAAsC,EAAAohB,MAAA,SAAA4a,EAAA,KAEAC,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IACAv9B,EAAAqB,EAAAtC,KAAAsC,EAAAohB,MAAA,SAAA,KAAA,IAAA,KAAA,KACAiE,EAAA3nB,MACAgB,EAAAC,EAAA,EACAtD,EAAA+8B,GAAA6D,EAAA,GAAAC,EAAA,MAEAx9B,EAAAC,EAAA,EACAtD,EAAA+8B,GAAA6D,EAAA,GAAAC,EAAA,QAEA,GAAAA,EAAA,IAAA,GAAAA,EAAA,KACAl8B,EAAAtC,KAAAsC,EAAAohB,MAAA,SAAA8a,EAAA,KAEAv9B,EAAA0mB,EAAApsB,OACA,SAAAyX,GAEA,IADA,GAAA3J,GAAArI,EAAA,KACAA,EAAAC,GAAAqB,GAAA+G,EAAAse,EAAA3mB,IAAAA,GAAAqI,EAAA1L,EAAAqV,EACA,OAAA1Q,GAAAlG,KAAA,KAGA,QAAAqiC,IAAAlhC,EAAAC,GAEA,MADAA,IAAAA,GAAAD,GAAAA,IAAA,EAAAC,EACA,SAAAG,GACA,OAAAA,EAAAJ,GAAAC,GAGA,QAAAkhC,IAAAnhC,EAAAC,GAEA,MADAA,IAAAA,GAAAD,GAAAA,IAAA,EAAAC,EACA,SAAAG,GACA,MAAA5B,MAAAsT,IAAA,EAAAtT,KAAAwT,IAAA,GAAA5R,EAAAJ,GAAAC,KAWA,QAAAmhC,IAAAC,GAEA,IADA,GAAAtc,GAAAsc,EAAAp+B,OAAA81B,EAAAsI,EAAAr+B,OAAAs+B,EAAAC,GAAAxc,EAAAgU,GAAAjU,GAAAC,GACAA,IAAAuc,GACAvc,EAAAA,EAAAxb,OACAub,EAAAriB,KAAAsiB,EAGA,KADA,GAAA7jB,GAAA4jB,EAAA9mB,OACA+6B,IAAAuI,GACAxc,EAAAsU,OAAAl4B,EAAA,EAAA63B,GACAA,EAAAA,EAAAxvB,MAEA,OAAAub,GAEA,QAAA0c,IAAA/hC,GAEA,IADA,GAAAgiC,MAAAl4B,EAAA9J,EAAA8J,OACA,MAAAA,GACAk4B,EAAAh/B,KAAAhD,GACAA,EAAA8J,EACAA,EAAAA,EAAAA,MAGA,OADAk4B,GAAAh/B,KAAAhD,GACAgiC,EAEA,QAAAF,IAAAvhC,EAAAC,GACA,GAAAD,IAAAC,EAAA,MAAAD,EAEA,KADA,GAAA0hC,GAAAF,GAAAxhC,GAAA2hC,EAAAH,GAAAvhC,GAAA2hC,EAAAF,EAAAvb,MAAA0b,EAAAF,EAAAxb,MAAA2b,EAAA,KACAF,IAAAC,GACAC,EAAAF,EACAA,EAAAF,EAAAvb,MACA0b,EAAAF,EAAAxb,KAEA,OAAA2b,GAoUA,QAAAC,IAAA/gC,GACAA,EAAAghC,OAAA,EAEA,QAAAC,IAAAjhC,GACAA,EAAAghC,OAAA,GAEA,QAAAE,IAAAlhC,GACAA,EAAAghC,OAAA,EACAhhC,EAAAmhC,GAAAnhC,EAAAZ,EAAAY,EAAAohC,GAAAphC,EAAAgN,EAEA,QAAAq0B,IAAArhC,GACAA,EAAAghC,OAAA,GAEA,QAAAM,IAAAC,EAAAC,EAAAC,GACA,GAAAlf,GAAA,EAAAC,EAAA,CAEA,IADA+e,EAAAG,OAAA,GACAH,EAAA5G,KAEA,IADA,GAAA7zB,GAAA8zB,EAAA2G,EAAA3G,MAAAl4B,EAAAk4B,EAAA59B,OAAAyF,EAAA,KACAA,EAAAC,GACAoE,EAAA8zB,EAAAn4B,GACA,MAAAqE,IACAw6B,GAAAx6B,EAAA06B,EAAAC,GACAF,EAAAG,QAAA56B,EAAA46B,OACAnf,GAAAzb,EAAA46B,OAAA56B,EAAAyb,GACAC,GAAA1b,EAAA46B,OAAA56B,EAAA0b,GAGA,IAAA+e,EAAAt1B,MAAA,CACAs1B,EAAA5G,OACA4G,EAAAt1B,MAAA7M,GAAA5B,KAAAmkC,SAAA,GACAJ,EAAAt1B,MAAAe,GAAAxP,KAAAmkC,SAAA,GAEA,IAAAzhC,GAAAshC,EAAAC,EAAAF,EAAAt1B,MAAA0wB,MACA4E,GAAAG,QAAAH,EAAAK,YAAA1hC,EACAqiB,GAAAriB,EAAAqhC,EAAAt1B,MAAA7M,EACAojB,GAAAtiB,EAAAqhC,EAAAt1B,MAAAe,EAEAu0B,EAAAhf,GAAAA,EAAAgf,EAAAG,OACAH,EAAA/e,GAAAA,EAAA+e,EAAAG,OA6DA,QAAAG,IAAAx/B,EAAAy/B,GAIA,MAHA3jC,IAAAsV,OAAApR,EAAAy/B,EAAA,OAAA,WAAA,SACAz/B,EAAAu4B,MAAAv4B,EACAA,EAAA0/B,MAAAC,GACA3/B,EAEA,QAAA4/B,IAAAxjC,EAAAyK,GAEA,IADA,GAAA0xB,IAAAn8B,GACA,OAAAA,EAAAm8B,EAAAzV,QAEA,GADAjc,EAAAzK,IACAu8B,EAAAv8B,EAAAu8B,YAAAt4B,EAAAs4B,EAAAh+B,QAEA,IADA,GAAA0F,GAAAs4B,IACAt4B,GAAA,GAAAk4B,EAAAn5B,KAAAu5B,EAAAt4B,IAIA,QAAAw/B,IAAAzjC,EAAAyK,GAEA,IADA,GAAA0xB,IAAAn8B,GAAA0jC,KACA,OAAA1jC,EAAAm8B,EAAAzV,QAEA,GADAgd,EAAA1gC,KAAAhD,IACAu8B,EAAAv8B,EAAAu8B,YAAAt4B,EAAAs4B,EAAAh+B,QAEA,IADA,GAAA0F,GAAAs4B,EAAAv4B,EAAA,KACAA,EAAAC,GAAAk4B,EAAAn5B,KAAAu5B,EAAAv4B,GAGA,MAAA,OAAAhE,EAAA0jC,EAAAhd,QACAjc,EAAAzK,GAGA,QAAA2jC,IAAApiC,GACA,MAAAA,GAAAg7B,SAEA,QAAAqH,IAAAriC,GACA,MAAAA,GAAAU,MAEA,QAAA4hC,IAAAtjC,EAAAC,GACA,MAAAA,GAAAyB,MAAA1B,EAAA0B,MAEA,QAAAshC,IAAApH,GACA,MAAAz8B,IAAAsnB,MAAAmV,EAAAj0B,IAAA,SAAA4B,GACA,OAAAA,EAAAyyB,cAAAr0B,IAAA,SAAA47B,GACA,OACAtgC,OAAAsG,EACAvG,OAAAugC,QAqJA,QAAAC,IAAAxiC,GACA,MAAAA,GAAAZ,EAEA,QAAAqjC,IAAAziC,GACA,MAAAA,GAAAgN,EAEA,QAAA01B,IAAA1iC,EAAA6hB,EAAA7U,GACAhN,EAAA6hB,GAAAA,EACA7hB,EAAAgN,EAAAA,EAiEA,QAAA21B,IAAAh6B,GACA,MAAAxK,IAAA6Z,MAAArP,EAAA3L,QAEA,QAAA4lC,IAAAj6B,GAEA,IADA,GAAAQ,GAAA,GAAAC,EAAAT,EAAA,GAAA3L,OAAA6kB,OACA1Y,EAAAC,GAAAyY,EAAA1Y,GAAA,CACA,OAAA0Y,GAEA,QAAAghB,IAAA3e,GAEA,IADA,GAAAhkB,GAAAuC,EAAA,EAAA0G,EAAA,EAAA6F,EAAAkV,EAAA,GAAA,GAAAxhB,EAAAwhB,EAAAlnB,OACA0F,EAAAD,IAAAA,GACAvC,EAAAgkB,EAAAzhB,GAAA,IAAAuM,IACA7F,EAAA1G,EACAuM,EAAA9O,EAGA,OAAAiJ,GAEA,QAAA25B,IAAA9iC,GACA,MAAAA,GAAA+iC,OAAAC,GAAA,GAEA,QAAAA,IAAAjuB,EAAA/U,GACA,MAAA+U,GAAA/U,EAAA,GAgDA,QAAAijC,IAAAjrB,EAAAkrB,GACA,MAAAC,IAAAnrB,EAAAxa,KAAAwX,KAAAxX,KAAAyX,IAAAiuB,EAAAlmC,QAAAQ,KAAA4lC,IAAA,IAEA,QAAAD,IAAAnrB,EAAAtV,GAEA,IADA,GAAAtD,GAAA,GAAAH,GAAA+Y,EAAA,GAAA5O,GAAA4O,EAAA,GAAA/Y,GAAAyD,EAAAoK,OACA1N,GAAAsD,GAAAoK,EAAA1N,GAAAgK,EAAAhK,EAAAH,CACA,OAAA6N,GAEA,QAAAu2B,IAAAH,GACA,OAAA/kC,GAAA6S,IAAAkyB,GAAA/kC,GAAA2S,IAAAoyB,IA2CA,QAAAI,IAAAtkC,EAAAC,GACA,MAAAD,GAAA0B,MAAAzB,EAAAyB,MAEA,QAAA6iC,IAAAvkC,EAAAC,GACA,GAAA6H,GAAA9H,EAAAwkC,UACAxkC,GAAAwkC,WAAAvkC,EACAA,EAAAwkC,WAAAzkC,EACAC,EAAAukC,WAAA18B,EACAA,EAAA28B,WAAAxkC,EAEA,QAAAykC,IAAA1kC,EAAAC,GACAD,EAAAwkC,WAAAvkC,EACAA,EAAAwkC,WAAAzkC,EAEA,QAAA2kC,IAAA3kC,EAAAC,GACA,GAAA+qB,GAAA/qB,EAAAG,EAAAJ,EAAAI,EAAA6qB,EAAAhrB,EAAA+N,EAAAhO,EAAAgO,EAAA42B,EAAA5kC,EAAA2Q,EAAA1Q,EAAA0Q,CACA,OAAA,KAAAi0B,EAAAA,EAAA5Z,EAAAA,EAAAC,EAAAA,EAEA,QAAA4Z,IAAAplC,GAGA,QAAAqlC,GAAArlC,GACAslC,EAAAvmC,KAAAwT,IAAAvS,EAAAW,EAAAX,EAAAkR,EAAAo0B,GACAC,EAAAxmC,KAAAsT,IAAArS,EAAAW,EAAAX,EAAAkR,EAAAq0B,GACAC,EAAAzmC,KAAAwT,IAAAvS,EAAAuO,EAAAvO,EAAAkR,EAAAs0B,GACAC,EAAA1mC,KAAAsT,IAAArS,EAAAuO,EAAAvO,EAAAkR,EAAAu0B,GANA,IAAAtJ,EAAAn8B,EAAAu8B,YAAAt4B,EAAAk4B,EAAA59B,QAAA,CACA,GAAA49B,GAAA57B,EAAAC,EAAA6H,EAAArE,EAAA0G,EAAAjJ,EAAAwC,EAAAqhC,EAAAnvB,EAAAA,EAAAovB,IAAApvB,EAAAA,GAAAqvB,EAAArvB,EAAAA,EAAAsvB,IAAAtvB,EAAAA,EAYA,IALAgmB,EAAA1nB,QAAAixB,IACAnlC,EAAA47B,EAAA,GACA57B,EAAAI,GAAAJ,EAAA2Q,EACA3Q,EAAAgO,EAAA,EACA82B,EAAA9kC,GACA0D,EAAA,IACAzD,EAAA27B,EAAA,GACA37B,EAAAG,EAAAH,EAAA0Q,EACA1Q,EAAA+N,EAAA,EACA82B,EAAA7kC,GACAyD,EAAA,GAQA,IAPAoE,EAAA8zB,EAAA,GACAwJ,GAAAplC,EAAAC,EAAA6H,GACAg9B,EAAAh9B,GACAy8B,GAAAvkC,EAAA8H,GACA9H,EAAAykC,WAAA38B,EACAy8B,GAAAz8B,EAAA7H,GACAA,EAAAD,EAAAwkC,WACA/gC,EAAA,EAAAC,EAAAD,EAAAA,IAAA,CACA2hC,GAAAplC,EAAAC,EAAA6H,EAAA8zB,EAAAn4B,GACA,IAAA4hC,GAAA,EAAAC,EAAA,EAAAC,EAAA,CACA,KAAAp7B,EAAAlK,EAAAukC,WAAAr6B,IAAAlK,EAAAkK,EAAAA,EAAAq6B,WAAAc,IACA,GAAAX,GAAAx6B,EAAArC,GAAA,CACAu9B,EAAA,CACA,OAGA,GAAA,GAAAA,EACA,IAAAnkC,EAAAlB,EAAAykC,WAAAvjC,IAAAiJ,EAAAs6B,aACAE,GAAAzjC,EAAA4G,GADA5G,EAAAA,EAAAujC,WAAAc,KAMAF,GACAE,EAAAD,GAAAA,GAAAC,GAAAtlC,EAAA0Q,EAAA3Q,EAAA2Q,EAAA+zB,GAAA1kC,EAAAC,EAAAkK,GAAAu6B,GAAA1kC,EAAAkB,EAAAjB,GACAwD,MAEA8gC,GAAAvkC,EAAA8H,GACA7H,EAAA6H,EACAg9B,EAAAh9B,IAKA,GAAAyb,IAAAwhB,EAAAC,GAAA,EAAAxhB,GAAAyhB,EAAAC,GAAA,EAAArc,EAAA,CACA,KAAAplB,EAAA,EAAAC,EAAAD,EAAAA,IACAqE,EAAA8zB,EAAAn4B,GACAqE,EAAA1H,GAAAmjB,EACAzb,EAAAkG,GAAAwV,EACAqF,EAAArqB,KAAAsT,IAAA+W,EAAA/gB,EAAA6I,EAAAnS,KAAAgT,KAAA1J,EAAA1H,EAAA0H,EAAA1H,EAAA0H,EAAAkG,EAAAlG,EAAAkG,GAEAvO,GAAAkR,EAAAkY,EACA+S,EAAA1nB,QAAAsxB,KAEA,QAAAL,IAAA1lC,GACAA,EAAA+kC,WAAA/kC,EAAAglC,WAAAhlC,EAEA,QAAA+lC,IAAA/lC,SACAA,GAAA+kC,iBACA/kC,GAAAglC,WAEA,QAAAgB,IAAAhmC,EAAAW,EAAA4N,EAAA9M,GACA,GAAA86B,GAAAv8B,EAAAu8B,QAIA,IAHAv8B,EAAAW,EAAAA,GAAAc,EAAAzB,EAAAW,EACAX,EAAAuO,EAAAA,GAAA9M,EAAAzB,EAAAuO,EACAvO,EAAAkR,GAAAzP,EACA86B,EAEA,IADA,GAAAv4B,GAAA,GAAAC,EAAAs4B,EAAAh+B,SACAyF,EAAAC,GAAA+hC,GAAAzJ,EAAAv4B,GAAArD,EAAA4N,EAAA9M,GAGA,QAAAkkC,IAAAplC,EAAAC,EAAA6H,GACA,GAAA49B,GAAA1lC,EAAA2Q,EAAA7I,EAAA6I,EAAAqa,EAAA/qB,EAAAG,EAAAJ,EAAAI,EAAA6qB,EAAAhrB,EAAA+N,EAAAhO,EAAAgO,CACA,IAAA03B,IAAA1a,GAAAC,GAAA,CACA,GAAA0a,GAAA1lC,EAAA0Q,EAAA7I,EAAA6I,EAAAi1B,EAAA5a,EAAAA,EAAAC,EAAAA,CACA0a,IAAAA,EACAD,GAAAA,CACA,IAAAtlC,GAAA,IAAAslC,EAAAC,IAAA,EAAAC,GAAA53B,EAAAxP,KAAAgT,KAAAhT,KAAAsT,IAAA,EAAA,EAAA6zB,GAAAD,EAAAE,IAAAF,GAAAE,GAAAF,EAAAC,EAAAA,KAAA,EAAAC,EACA99B,GAAA1H,EAAAJ,EAAAI,EAAAA,EAAA4qB,EAAAhd,EAAAid,EACAnjB,EAAAkG,EAAAhO,EAAAgO,EAAA5N,EAAA6qB,EAAAjd,EAAAgd,MAEAljB,GAAA1H,EAAAJ,EAAAI,EAAAslC,EACA59B,EAAAkG,EAAAhO,EAAAgO,EAuHA,QAAA63B,IAAA7lC,EAAAC,GACA,MAAAD,GAAAuJ,QAAAtJ,EAAAsJ,OAAA,EAAA,EAEA,QAAAu8B,IAAA91B,GACA,GAAAgsB,GAAAhsB,EAAAgsB,QACA,OAAAA,GAAAh+B,OAAAg+B,EAAA,GAAAhsB,EAAAyF,EAEA,QAAAswB,IAAA/1B,GACA,GAAAtM,GAAAs4B,EAAAhsB,EAAAgsB,QACA,QAAAt4B,EAAAs4B,EAAAh+B,QAAAg+B,EAAAt4B,EAAA,GAAAsM,EAAAyF,EAEA,QAAAuwB,IAAAC,EAAAC,EAAA5f,GACA,GAAA6f,GAAA7f,GAAA4f,EAAAziC,EAAAwiC,EAAAxiC,EACAyiC,GAAAp+B,GAAAq+B,EACAD,EAAAnhC,GAAAuhB,EACA2f,EAAAn+B,GAAAq+B,EACAD,EAAA/hC,GAAAmiB,EACA4f,EAAA97B,GAAAkc,EAEA,QAAA8f,IAAAp2B,GAEA,IADA,GAAA3D,GAAAia,EAAA,EAAA6f,EAAA,EAAAnK,EAAAhsB,EAAAgsB,SAAAv4B,EAAAu4B,EAAAh+B,SACAyF,GAAA,GACA4I,EAAA2vB,EAAAv4B,GACA4I,EAAAlI,GAAAmiB,EACAja,EAAAjC,GAAAkc,EACAA,GAAAja,EAAAtH,GAAAohC,GAAA95B,EAAAvE,GAGA,QAAAu+B,IAAAC,EAAAt2B,EAAAu2B,GACA,MAAAD,GAAAtmC,EAAAuJ,SAAAyG,EAAAzG,OAAA+8B,EAAAtmC,EAAAumC,EA4CA,QAAAC,IAAAxK,GACA,MAAA,GAAA78B,GAAA2S,IAAAkqB,EAAA,SAAAuH,GACA,MAAAA,GAAAv1B,IAGA,QAAAy4B,IAAAzK,GACA,MAAAA,GAAA+H,OAAA,SAAA3jC,EAAAmjC,GACA,MAAAnjC,GAAAmjC,EAAAnjC,GACA,GAAA47B,EAAAh+B,OAEA,QAAA0oC,IAAAjnC,GACA,GAAAu8B,GAAAv8B,EAAAu8B,QACA,OAAAA,IAAAA,EAAAh+B,OAAA0oC,GAAA1K,EAAA,IAAAv8B,EAEA,QAAAknC,IAAAlnC,GACA,GAAAiE,GAAAs4B,EAAAv8B,EAAAu8B,QACA,OAAAA,KAAAt4B,EAAAs4B,EAAAh+B,QAAA2oC,GAAA3K,EAAAt4B,EAAA,IAAAjE,EAsJA,QAAAmnC,IAAAnnC,GACA,OACAW,EAAAX,EAAAW,EACA4N,EAAAvO,EAAAuO,EACAgd,GAAAvrB,EAAAurB,GACAC,GAAAxrB,EAAAwrB,IAGA,QAAA4b,IAAApnC,EAAAiO,GACA,GAAAtN,GAAAX,EAAAW,EAAAsN,EAAA,GAAAM,EAAAvO,EAAAuO,EAAAN,EAAA,GAAAsd,EAAAvrB,EAAAurB,GAAAtd,EAAA,GAAAA,EAAA,GAAAud,EAAAxrB,EAAAwrB,GAAAvd,EAAA,GAAAA,EAAA,EASA,OARA,GAAAsd,IACA5qB,GAAA4qB,EAAA,EACAA,EAAA,GAEA,EAAAC,IACAjd,GAAAid,EAAA,EACAA,EAAA,IAGA7qB,EAAAA,EACA4N,EAAAA,EACAgd,GAAAA,EACAC,GAAAA,GAsCA,QAAA6b,IAAAC,GACA,GAAAhiB,GAAAgiB,EAAA,GAAAC,EAAAD,EAAAA,EAAA/oC,OAAA,EACA,OAAAgpC,GAAAjiB,GAAAA,EAAAiiB,IAAAA,EAAAjiB,GAEA,QAAAkiB,IAAA7wB,GACA,MAAAA,GAAA8wB,YAAA9wB,EAAA8wB,cAAAJ,GAAA1wB,EAAA4C,SAEA,QAAAmuB,IAAAJ,EAAA/tB,EAAAouB,EAAAhjB,GACA,GAAAhD,GAAAgmB,EAAAL,EAAA,GAAAA,EAAA,IAAAtjC,EAAA2gB,EAAApL,EAAA,GAAAA,EAAA,GACA,OAAA,UAAA5Y,GACA,MAAAqD,GAAA2d,EAAAhhB,KAGA,QAAAinC,IAAAN,EAAAO,GACA,GAAAtc,GAAArgB,EAAA,EAAA48B,EAAAR,EAAA/oC,OAAA,EAAA+kB,EAAAgkB,EAAAp8B,GAAA+f,EAAAqc,EAAAQ,EAOA,OANAxkB,GAAA2H,IACAM,EAAArgB,EAAAA,EAAA48B,EAAAA,EAAAvc,EACAA,EAAAjI,EAAAA,EAAA2H,EAAAA,EAAAM,GAEA+b,EAAAp8B,GAAA28B,EAAAjuB,MAAA0J,GACAgkB,EAAAQ,GAAAD,EAAAtxB,KAAA0U,GACAqc,EAEA,QAAAS,IAAA7uB,GACA,MAAAA,IACAU,MAAA,SAAAjZ,GACA,MAAA5B,MAAA6a,MAAAjZ,EAAAuY,GAAAA,GAEA3C,KAAA,SAAA5V,GACA,MAAA5B,MAAAwX,KAAA5V,EAAAuY,GAAAA,IAEA8uB,GAMA,QAAAC,IAAAX,EAAA/tB,EAAAouB,EAAAhjB,GACA,GAAAhD,MAAA3d,KAAA0G,EAAA,EAAAjJ,EAAA1C,KAAAwT,IAAA+0B,EAAA/oC,OAAAgb,EAAAhb,QAAA,CAKA,KAJA+oC,EAAA7lC,GAAA6lC,EAAA,KACAA,EAAAA,EAAA3kC,QAAA+U,UACA6B,EAAAA,EAAA5W,QAAA+U,aAEAhN,GAAAjJ,GACAkgB,EAAA3e,KAAA2kC,EAAAL,EAAA58B,EAAA,GAAA48B,EAAA58B,KACA1G,EAAAhB,KAAA2hB,EAAApL,EAAA7O,EAAA,GAAA6O,EAAA7O,IAEA,OAAA,UAAA/J,GACA,GAAA+J,GAAAhL,GAAAwoC,OAAAZ,EAAA3mC,EAAA,EAAAc,GAAA,CACA,OAAAuC,GAAA0G,GAAAiX,EAAAjX,GAAA/J,KAMA,QAAAwnC,IAAAb,EAAA/tB,EAAAoL,EAAAyjB,GAEA,QAAAC,KACA,GAAAC,GAAAvpC,KAAAwT,IAAA+0B,EAAA/oC,OAAAgb,EAAAhb,QAAA,EAAA0pC,GAAAP,GAAAC,EAAAS,EAAA1G,GAAAD,EAGA,OAFAzP,GAAAsW,EAAAhB,EAAA/tB,EAAAouB,EAAAhjB,GACA4jB,EAAAD,EAAA/uB,EAAA+tB,EAAAK,EAAAlK,IACA9mB,EAEA,QAAAA,GAAAhW,GACA,MAAAqxB,GAAArxB,GARA,GAAAqxB,GAAAuW,CAiDA,OAvCA5xB,GAAA2N,OAAA,SAAA/V,GACA,MAAAg6B,GAAAh6B,IAEAoI,EAAA2wB,OAAA,SAAA3mC,GACA,MAAAQ,WAAA5C,QACA+oC,EAAA3mC,EAAAuH,IAAAsgC,QACAH,KAFAf,GAIA3wB,EAAA4C,MAAA,SAAA5Y,GACA,MAAAQ,WAAA5C,QACAgb,EAAA5Y,EACA0nC,KAFA9uB,GAIA5C,EAAA8xB,WAAA,SAAA9nC,GACA,MAAAgW,GAAA4C,MAAA5Y,GAAAgkB,YAAAyb,KAEAzpB,EAAAyxB,MAAA,SAAAznC,GACA,MAAAQ,WAAA5C,QACA6pC,EAAAznC,EACA0nC,KAFAD,GAIAzxB,EAAAgO,YAAA,SAAAhkB,GACA,MAAAQ,WAAA5C,QACAomB,EAAAhkB,EACA0nC,KAFA1jB,GAIAhO,EAAA+xB,MAAA,SAAA/9B,GACA,MAAAg+B,IAAArB,EAAA38B,IAEAgM,EAAAiyB,WAAA,SAAAj+B,EAAAlL,GACA,MAAAopC,IAAAvB,EAAA38B,EAAAlL,IAEAkX,EAAAkxB,KAAA,SAAAl9B,GAEA,MADAm+B,IAAAxB,EAAA38B,GACA09B,KAEA1xB,EAAAoyB,KAAA,WACA,MAAAZ,IAAAb,EAAA/tB,EAAAoL,EAAAyjB,IAEAC,IAEA,QAAAW,IAAAryB,EAAA2xB,GACA,MAAA5oC,IAAAsV,OAAA2B,EAAA2xB,EAAA,QAAA,aAAA,cAAA,SAEA,QAAAQ,IAAAxB,EAAA38B,GACA,MAAAi9B,IAAAN,EAAAS,GAAAkB,GAAA3B,EAAA38B,GAAA,KAEA,QAAAs+B,IAAA3B,EAAA38B,GACA,MAAAA,IAAAA,EAAA,GACA,IAAAsuB,GAAAoO,GAAAC,GAAA4B,EAAAjQ,EAAA,GAAAA,EAAA,GAAA/f,EAAAna,KAAAkT,IAAA,GAAAlT,KAAA6a,MAAA7a,KAAAyX,IAAA0yB,EAAAv+B,GAAA5L,KAAA0X,OAAA0yB,EAAAx+B,EAAAu+B,EAAAhwB,CAKA,OAJA,KAAAiwB,EAAAjwB,GAAA,GAAA,KAAAiwB,EAAAjwB,GAAA,EAAA,KAAAiwB,IAAAjwB,GAAA,GACA+f,EAAA,GAAAl6B,KAAAwX,KAAA0iB,EAAA,GAAA/f,GAAAA,EACA+f,EAAA,GAAAl6B,KAAA6a,MAAAqf,EAAA,GAAA/f,GAAAA,EAAA,GAAAA,EACA+f,EAAA,GAAA/f,EACA+f,EAEA,QAAA0P,IAAArB,EAAA38B,GACA,MAAAjL,IAAA6Z,MAAA7V,MAAAhE,GAAAupC,GAAA3B,EAAA38B,IAEA,QAAAk+B,IAAAvB,EAAA38B,EAAAlL,GACA,GAAA8Z,GAAA0vB,GAAA3B,EAAA38B,EACA,IAAAlL,EAAA,CACA,GAAAuM,GAAA4L,GAAAlF,KAAAjT,EAEA,IADAuM,EAAA6a,QACA,MAAA7a,EAAA,GAAA,CACA,GAAAkM,GAAAxY,GAAAiZ,aAAA5Z,KAAAsT,IAAArT,GAAAua,EAAA,IAAAva,GAAAua,EAAA,KAIA,OAHAvN,GAAA,KAAAA,EAAA,GAAA,IAAAo9B,GAAAlxB,EAAAvB,MAAA4C,EAAA,MACAvN,EAAA,GAAA,IACAvM,EAAAC,GAAAD,OAAAuM,EAAA5M,KAAA,KACA,SAAAmC,GACA,MAAA9B,GAAAyY,EAAAvB,MAAApV,IAAA2W,EAAAtB,QAGA5K,EAAA,KAAAA,EAAA,GAAA,IAAAq9B,GAAAr9B,EAAA,GAAAuN,IACA9Z,EAAAuM,EAAA5M,KAAA,QAEAK,GAAA,KAAA2pC,GAAA7vB,EAAA,IAAA,GAEA,OAAA7Z,IAAAD,OAAAA,GASA,QAAA2pC,IAAAnnC,GACA,OAAAlD,KAAA6a,MAAA7a,KAAAyX,IAAAvU,GAAAlD,KAAA0X,KAAA,KAEA,QAAA4yB,IAAAtjC,EAAAwT,GACA,GAAAjD,GAAA8yB,GAAA7vB,EAAA,GACA,OAAAxT,KAAAujC,IAAAvqC,KAAAC,IAAAsX,EAAA8yB,GAAArqC,KAAAsT,IAAArT,GAAAua,EAAA,IAAAva,GAAAua,EAAA,UAAA,MAAAxT,GAAAuQ,EAAA,GAAA,MAAAvQ,GAKA,QAAAwjC,IAAAjB,EAAAkB,EAAAC,EAAAnC,GACA,QAAA9wB,GAAA7V,GACA,OAAA8oC,EAAA1qC,KAAAyX,IAAA,EAAA7V,EAAA,EAAAA,IAAA5B,KAAAyX,IAAA7V,EAAA,EAAA,GAAAA,IAAA5B,KAAAyX,IAAAgzB,GAEA,QAAAv3B,GAAAtR,GACA,MAAA8oC,GAAA1qC,KAAAkT,IAAAu3B,EAAA7oC,IAAA5B,KAAAkT,IAAAu3B,GAAA7oC,GAEA,QAAAgW,GAAAhW,GACA,MAAA2nC,GAAA9xB,EAAA7V,IAmDA,MAjDAgW,GAAA2N,OAAA,SAAA3jB,GACA,MAAAsR,GAAAq2B,EAAAhkB,OAAA3jB,KAEAgW,EAAA2wB,OAAA,SAAA3mC,GACA,MAAAQ,WAAA5C,QACAkrC,EAAA9oC,EAAA,IAAA,EACA2nC,EAAAhB,QAAAA,EAAA3mC,EAAAuH,IAAAsgC,SAAAtgC,IAAAsO,IACAG,GAHA2wB,GAKA3wB,EAAA6yB,KAAA,SAAAnnC,GACA,MAAAlB,WAAA5C,QACAirC,GAAAnnC,EACAimC,EAAAhB,OAAAA,EAAAp/B,IAAAsO,IACAG,GAHA6yB,GAKA7yB,EAAAkxB,KAAA,WACA,GAAA6B,GAAA9B,GAAAN,EAAAp/B,IAAAsO,GAAAizB,EAAA1qC,KAAA4qC,GAGA,OAFArB,GAAAhB,OAAAoC,GACApC,EAAAoC,EAAAxhC,IAAA+J,GACA0E,GAEAA,EAAA+xB,MAAA,WACA,GAAAzP,GAAAoO,GAAAC,GAAAoB,KAAA/mB,EAAAsX,EAAA,GAAA1oB,EAAA0oB,EAAA,GAAAj1B,EAAAjF,KAAA6a,MAAApD,EAAAmL,IAAAjX,EAAA3L,KAAAwX,KAAAC,EAAAjG,IAAAtM,EAAAulC,EAAA,EAAA,EAAAA,CACA,IAAAh0B,SAAA9K,EAAA1G,GAAA,CACA,GAAAylC,EAAA,CACA,KAAA/+B,EAAA1G,EAAAA,IAAA,IAAA,GAAAvC,GAAA,EAAAwC,EAAAxC,EAAAA,IAAAinC,EAAA1lC,KAAAiP,EAAAjO,GAAAvC,EACAinC,GAAA1lC,KAAAiP,EAAAjO,QAGA,KADA0kC,EAAA1lC,KAAAiP,EAAAjO,IACAA,IAAA0G,GAAA,IAAA,GAAAjJ,GAAAwC,EAAA,EAAAxC,EAAA,EAAAA,IAAAinC,EAAA1lC,KAAAiP,EAAAjO,GAAAvC,EAEA,KAAAuC,EAAA,EAAA0kC,EAAA1kC,GAAA2d,EAAA3d,KACA,IAAA0G,EAAAg+B,EAAAnqC,OAAAmqC,EAAAh+B,EAAA,GAAA6F,EAAA7F,KACAg+B,EAAAA,EAAA/lC,MAAAqB,EAAA0G,GAEA,MAAAg+B,IAEA/xB,EAAAiyB,WAAA,SAAA3kC,EAAAxE,GACA,IAAA0B,UAAA5C,OAAA,MAAAqrC,GACAzoC,WAAA5C,OAAA,EAAAkB,EAAAmqC,GAAA,kBAAAnqC,KAAAA,EAAAC,GAAAD,OAAAA,GACA,IACA8F,GADA9D,EAAA1C,KAAAsT,IAAA,GAAApO,EAAA0S,EAAA+xB,QAAAnqC,QAAA8P,EAAAo7B,GAAAlkC,EAAA,MAAAxG,KAAAwX,OAAAhR,EAAA,OACAxG,KAAA6a,MACA,OAAA,UAAArY,GACA,MAAAA,GAAA0Q,EAAA5D,EAAAmI,EAAAjV,GAAAgE,KAAA9D,EAAAhC,EAAA8B,GAAA,KAGAoV,EAAAoyB,KAAA,WACA,MAAAQ,IAAAjB,EAAAS,OAAAS,EAAAC,EAAAnC,IAEA0B,GAAAryB,EAAA2xB,GAaA,QAAAuB,IAAAvB,EAAAlwB,EAAAkvB,GAEA,QAAA3wB,GAAAhW,GACA,MAAA2nC,GAAAwB,EAAAnpC,IAFA,GAAAmpC,GAAAC,GAAA3xB,GAAA4xB,EAAAD,GAAA,EAAA3xB,EA+BA,OA3BAzB,GAAA2N,OAAA,SAAA3jB,GACA,MAAAqpC,GAAA1B,EAAAhkB,OAAA3jB,KAEAgW,EAAA2wB,OAAA,SAAA3mC,GACA,MAAAQ,WAAA5C,QACA+pC,EAAAhB,QAAAA,EAAA3mC,EAAAuH,IAAAsgC,SAAAtgC,IAAA4hC,IACAnzB,GAFA2wB,GAIA3wB,EAAA+xB,MAAA,SAAA/9B,GACA,MAAAg+B,IAAArB,EAAA38B,IAEAgM,EAAAiyB,WAAA,SAAAj+B,EAAAlL,GACA,MAAAopC,IAAAvB,EAAA38B,EAAAlL,IAEAkX,EAAAkxB,KAAA,SAAAl9B,GACA,MAAAgM,GAAA2wB,OAAAwB,GAAAxB,EAAA38B,KAEAgM,EAAAyB,SAAA,SAAAzX,GACA,MAAAQ,WAAA5C,QACAurC,EAAAC,GAAA3xB,EAAAzX,GACAqpC,EAAAD,GAAA,EAAA3xB,GACAkwB,EAAAhB,OAAAA,EAAAp/B,IAAA4hC,IACAnzB,GAJAyB,GAMAzB,EAAAoyB,KAAA,WACA,MAAAc,IAAAvB,EAAAS,OAAA3wB,EAAAkvB,IAEA0B,GAAAryB,EAAA2xB,GAEA,QAAAyB,IAAAxkC,GACA,MAAA,UAAA5E,GACA,MAAA,GAAAA,GAAA5B,KAAAkT,KAAAtR,EAAA4E,GAAAxG,KAAAkT,IAAAtR,EAAA4E,IAYA,QAAA0kC,IAAA3C,EAAA4C,GAEA,QAAAvzB,GAAAhW,GACA,MAAA4Y,KAAA2kB,EAAAn5B,IAAApE,KAAA,UAAAupC,EAAAl0B,EAAAkoB,EAAAh5B,IAAAvE,EAAA2mC,EAAAtkC,KAAArC,IAAAF,EAAAA,IAAA,GAAA8Y,EAAAhb,QAEA,QAAA4rC,GAAA7kB,EAAApM,GACA,MAAAxZ,IAAA6Z,MAAA+tB,EAAA/oC,QAAA2J,IAAA,SAAAlE,GACA,MAAAshB,GAAApM,EAAAlV,IANA,GAAAk6B,GAAA3kB,EAAA6wB,CAsFA,OA7EAzzB,GAAA2wB,OAAA,SAAA3mC,GACA,IAAAQ,UAAA5C,OAAA,MAAA+oC,EACAA,MACApJ,EAAA,GAAA/7B,EAEA,KADA,GAAAkoC,GAAArmC,EAAA,GAAAC,EAAAtD,EAAApC,SACAyF,EAAAC,GAAAi6B,EAAAoM,IAAAD,EAAA1pC,EAAAqD,KAAAk6B,EAAAh5B,IAAAmlC,EAAA/C,EAAAtkC,KAAAqnC,GACA,OAAA1zB,GAAAuzB,EAAAl0B,GAAAtS,MAAAiT,EAAAuzB,EAAA3pC,IAEAoW,EAAA4C,MAAA,SAAA5Y,GACA,MAAAQ,WAAA5C,QACAgb,EAAA5Y,EACAypC,EAAA,EACAF,GACAl0B,EAAA,QACAzV,EAAAY,WAEAwV,GAPA4C,GASA5C,EAAA4zB,YAAA,SAAA5pC,EAAAsN,GACA9M,UAAA5C,OAAA,IAAA0P,EAAA,EACA,IAAAqX,GAAA3kB,EAAA,GAAA4mC,EAAA5mC,EAAA,GAAAuY,EAAAouB,EAAA/oC,OAAA,GAAA+mB,GAAAA,EAAAiiB,GAAA,EACA,IAAAA,EAAAjiB,IAAAgiB,EAAA/oC,OAAA,EAAA0P,EAOA,OANAsL,GAAA4wB,EAAA7kB,EAAApM,EAAAjL,EAAA,EAAAiL,GACAkxB,EAAA,EACAF,GACAl0B,EAAA,cACAzV,EAAAY,WAEAwV,GAEAA,EAAA6zB,iBAAA,SAAA7pC,EAAAsN,GACA9M,UAAA5C,OAAA,IAAA0P,EAAA,EACA,IAAAqX,GAAA3kB,EAAA,GAAA4mC,EAAA5mC,EAAA,GAAAuY,EAAAouB,EAAA/oC,OAAA,GAAA+mB,EAAAiiB,EAAAxoC,KAAA4R,OAAA2U,EAAAiiB,GAAA,GACA,IAAAA,EAAAjiB,IAAAgiB,EAAA/oC,OAAA,EAAA0P,GAAA,CAOA,OANAsL,GAAA4wB,EAAA7kB,EAAAvmB,KAAA4R,MAAAuI,EAAAjL,EAAA,GAAAs5B,EAAAjiB,GAAAgiB,EAAA/oC,OAAA,EAAA0P,GAAAiL,GAAA,GAAAA,GACAkxB,EAAA,EACAF,GACAl0B,EAAA,mBACAzV,EAAAY,WAEAwV,GAEAA,EAAA8zB,WAAA,SAAA9pC,EAAAsN,EAAAy8B,GACAvpC,UAAA5C,OAAA,IAAA0P,EAAA,GACA9M,UAAA5C,OAAA,IAAAmsC,EAAAz8B,EACA,IAAAyJ,GAAA/W,EAAA,GAAAA,EAAA,GAAA2kB,EAAA3kB,EAAA+W,EAAA,GAAA6vB,EAAA5mC,EAAA,EAAA+W,GAAAwB,GAAAquB,EAAAjiB,IAAAgiB,EAAA/oC,OAAA0P,EAAA,EAAAy8B,EAQA,OAPAnxB,GAAA4wB,EAAA7kB,EAAApM,EAAAwxB,EAAAxxB,GACAxB,GAAA6B,EAAA7B,UACA0yB,EAAAlxB,GAAA,EAAAjL,GACAi8B,GACAl0B,EAAA,aACAzV,EAAAY,WAEAwV,GAEAA,EAAAg0B,gBAAA,SAAAhqC,EAAAsN,EAAAy8B,GACAvpC,UAAA5C,OAAA,IAAA0P,EAAA,GACA9M,UAAA5C,OAAA,IAAAmsC,EAAAz8B,EACA,IAAAyJ,GAAA/W,EAAA,GAAAA,EAAA,GAAA2kB,EAAA3kB,EAAA+W,EAAA,GAAA6vB,EAAA5mC,EAAA,EAAA+W,GAAAwB,EAAAna,KAAA6a,OAAA2tB,EAAAjiB,IAAAgiB,EAAA/oC,OAAA0P,EAAA,EAAAy8B,GAQA,OAPAnxB,GAAA4wB,EAAA7kB,EAAAvmB,KAAA4R,OAAA42B,EAAAjiB,GAAAgiB,EAAA/oC,OAAA0P,GAAAiL,GAAA,GAAAA,GACAxB,GAAA6B,EAAA7B,UACA0yB,EAAArrC,KAAA4R,MAAAuI,GAAA,EAAAjL,IACAi8B,GACAl0B,EAAA,kBACAzV,EAAAY,WAEAwV,GAEAA,EAAAyzB,UAAA,WACA,MAAAA,IAEAzzB,EAAA8wB,YAAA,WACA,MAAAJ,IAAA6C,EAAA3pC,EAAA,KAEAoW,EAAAoyB,KAAA,WACA,MAAAkB,IAAA3C,EAAA4C,IAEAvzB,EAAA2wB,OAAAA,GAqBA,QAAAsD,IAAAtD,EAAA/tB,GAEA,QAAA8uB,KACA,GAAA5mC,GAAA,EAAAkpB,EAAApR,EAAAhb,MAEA,KADAssC,OACAppC,EAAAkpB,GAAAkgB,EAAAppC,EAAA,GAAA/B,GAAAorC,SAAAxD,EAAA7lC,EAAAkpB,EACA,OAAAhU,GAEA,QAAAA,GAAAhW,GACA,MAAAE,OAAAF,GAAAA,GAAA,OAAA4Y,EAAA7Z,GAAAwoC,OAAA2C,EAAAlqC,IARA,GAAAkqC,EA8BA,OApBAl0B,GAAA2wB,OAAA,SAAA3mC,GACA,MAAAQ,WAAA5C,QACA+oC,EAAA3mC,EAAAuH,IAAAxH,GAAAwL,OAAAtL,GAAAskB,KAAA5kB,GACA+nC,KAFAf,GAIA3wB,EAAA4C,MAAA,SAAA5Y,GACA,MAAAQ,WAAA5C,QACAgb,EAAA5Y,EACA0nC,KAFA9uB,GAIA5C,EAAAo0B,UAAA,WACA,MAAAF,IAEAl0B,EAAAq0B,aAAA,SAAAz8B,GAEA,MADAA,GAAAgL,EAAA1a,QAAA0P,GACA,EAAAA,GAAA9N,EAAAA,EAAAA,EAAAA,IAAA8N,EAAA,EAAAs8B,EAAAt8B,EAAA,GAAA+4B,EAAA,GAAA/4B,EAAAs8B,EAAAtsC,OAAAssC,EAAAt8B,GAAA+4B,EAAAA,EAAA/oC,OAAA,KAEAoY,EAAAoyB,KAAA,WACA,MAAA6B,IAAAtD,EAAA/tB,IAEA8uB,IAKA,QAAA4C,IAAA3nB,EAAA2H,EAAA1R,GAEA,QAAA5C,GAAAhW,GACA,MAAA4Y,GAAAxa,KAAAsT,IAAA,EAAAtT,KAAAwT,IAAAvO,EAAAjF,KAAA6a,MAAA4mB,GAAA7/B,EAAA2iB,OAEA,QAAA+kB,KAGA,MAFA7H,GAAAjnB,EAAAhb,QAAA0sB,EAAA3H,GACAtf,EAAAuV,EAAAhb,OAAA,EACAoY,EAPA,GAAA6pB,GAAAx8B,CA4BA,OAnBA2S,GAAA2wB,OAAA,SAAA3mC,GACA,MAAAQ,WAAA5C,QACA+kB,GAAA3iB,EAAA,GACAsqB,GAAAtqB,EAAAA,EAAApC,OAAA,GACA8pC,MAHA/kB,EAAA2H,IAKAtU,EAAA4C,MAAA,SAAA5Y,GACA,MAAAQ,WAAA5C,QACAgb,EAAA5Y,EACA0nC,KAFA9uB,GAIA5C,EAAAq0B,aAAA,SAAAz8B,GAGA,MAFAA,GAAAgL,EAAA1a,QAAA0P,GACAA,EAAA,EAAAA,EAAA9N,EAAAA,EAAA8N,EAAAiyB,EAAAld,GACA/U,EAAAA,EAAA,EAAAiyB,IAEA7pB,EAAAoyB,KAAA,WACA,MAAAkC,IAAA3nB,EAAA2H,EAAA1R,IAEA8uB,IAKA,QAAA6C,IAAA5D,EAAA/tB,GACA,QAAA5C,GAAAhW,GACA,MAAAA,IAAAA,EAAA4Y,EAAA7Z,GAAAwoC,OAAAZ,EAAA3mC,IAAA,OAmBA,MAjBAgW,GAAA2wB,OAAA,SAAAjlC,GACA,MAAAlB,WAAA5C,QACA+oC,EAAAjlC,EACAsU,GAFA2wB,GAIA3wB,EAAA4C,MAAA,SAAAlX,GACA,MAAAlB,WAAA5C,QACAgb,EAAAlX,EACAsU,GAFA4C,GAIA5C,EAAAq0B,aAAA,SAAAz8B,GAEA,MADAA,GAAAgL,EAAA1a,QAAA0P,IACA+4B,EAAA/4B,EAAA,GAAA+4B,EAAA/4B,KAEAoI,EAAAoyB,KAAA,WACA,MAAAmC,IAAA5D,EAAA/tB,IAEA5C,EAKA,QAAAw0B,IAAA7D,GACA,QAAA8D,GAAAzqC,GACA,OAAAA,EAiBA,MAfAyqC,GAAA9mB,OAAA8mB,EACAA,EAAA9D,OAAA8D,EAAA7xB,MAAA,SAAA5Y,GACA,MAAAQ,WAAA5C,QACA+oC,EAAA3mC,EAAAuH,IAAAkjC,GACAA,GAFA9D,GAIA8D,EAAA1C,MAAA,SAAA/9B,GACA,MAAAg+B,IAAArB,EAAA38B,IAEAygC,EAAAxC,WAAA,SAAAj+B,EAAAlL,GACA,MAAAopC,IAAAvB,EAAA38B,EAAAlL,IAEA2rC,EAAArC,KAAA,WACA,MAAAoC,IAAA7D,IAEA8D,EAGA,QAAAC,MACA,MAAA,GA0HA,QAAAC,IAAA/pC,GACA,MAAAA,GAAAgqC,YAEA,QAAAC,IAAAjqC,GACA,MAAAA,GAAAkqC,YAEA,QAAAC,IAAAnqC,GACA,MAAAA,GAAAoqC,WAEA,QAAAC,IAAArqC,GACA,MAAAA,GAAAsqC,SAEA,QAAAC,IAAAvqC,GACA,MAAAA,IAAAA,EAAAwqC,SAEA,QAAAC,IAAA1oB,EAAAF,EAAA6H,EAAAC,GACA,OAAA5H,EAAA2H,GAAA7H,GAAAA,EAAA8H,GAAA5H,EAAA,EAAA,EAAA,EAEA,QAAA2oB,IAAAlnB,EAAAC,EAAAub,EAAA2L,EAAAC,GACA,GAAAC,GAAArnB,EAAA,GAAAC,EAAA,GAAAqnB,EAAAtnB,EAAA,GAAAC,EAAA,GAAA/jB,GAAAkrC,EAAAD,GAAAA,GAAAntC,KAAAgT,KAAAq6B,EAAAA,EAAAC,EAAAA,GAAAC,EAAArrC,EAAAorC,EAAAE,GAAAtrC,EAAAmrC,EAAAnhB,EAAAlG,EAAA,GAAAunB,EAAAphB,EAAAnG,EAAA,GAAAwnB,EAAAjc,EAAAtL,EAAA,GAAAsnB,EAAA/b,EAAAvL,EAAA,GAAAunB,EAAA/W,GAAAvK,EAAAqF,GAAA,EAAAqF,GAAAzK,EAAAqF,GAAA,EAAAhF,EAAA+E,EAAArF,EAAAO,EAAA+E,EAAArF,EAAAgF,EAAA3E,EAAAA,EAAAC,EAAAA,EAAAta,EAAAqvB,EAAA2L,EAAAM,EAAAvhB,EAAAsF,EAAAD,EAAApF,EAAA3pB,GAAA,EAAAiqB,EAAA,GAAA,GAAAzsB,KAAAgT,KAAAb,EAAAA,EAAAgf,EAAAsc,EAAAA,GAAAC,GAAAD,EAAAhhB,EAAAD,EAAAhqB,GAAA2uB,EAAAmD,IAAAmZ,EAAAjhB,EAAAC,EAAAjqB,GAAA2uB,EAAAwc,GAAAF,EAAAhhB,EAAAD,EAAAhqB,GAAA2uB,EAAAqD,IAAAiZ,EAAAjhB,EAAAC,EAAAjqB,GAAA2uB,EAAAyc,EAAAF,EAAAjX,EAAAoX,EAAAvZ,EAAAsC,EAAAkX,EAAAH,EAAAlX,EAAAsX,EAAAvZ,EAAAoC,CAEA,OADAgX,GAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,IAAAL,EAAAC,EAAArZ,EAAAE,KACAkZ,EAAAH,EAAAjZ,EAAAkZ,IAAAE,EAAAlM,EAAArvB,EAAAmiB,EAAAkN,EAAArvB,IAEA,QAAA67B,IAAA/b,GAEA,QAAA/K,GAAA/b,GAEA,QAAA4a,KACAL,EAAAzhB,KAAA,IAAA2hB,EAAAqM,EAAA3L,GAAA2nB,IAEA,IAJA,GAAAzrC,GAAAkjB,KAAAY,KAAArhB,EAAA,GAAAC,EAAAiG,EAAA3L,OAAA08B,EAAAjoB,GAAArS,GAAAu6B,EAAAloB,GAAAzE,KAIAvK,EAAAC,GACAgpC,EAAAphC,KAAAzJ,KAAAb,EAAA2I,EAAAlG,GAAAA,GACAqhB,EAAAriB,OAAAi4B,EAAApvB,KAAAzJ,KAAAb,EAAAyC,IAAAk3B,EAAArvB,KAAAzJ,KAAAb,EAAAyC,KACAqhB,EAAA9mB,SACAumB,IACAO,KAIA,OADAA,GAAA9mB,QAAAumB,IACAL,EAAAlmB,OAAAkmB,EAAArlB,KAAA,IAAA,KAfA,GAAAuB,GAAAq0B,GAAAzmB,EAAA0mB,GAAAgY,EAAA1oB,GAAAI,EAAAuoB,GAAAC,EAAAxoB,EAAA9iB,IAAAmrC,EAAA,EA0CA,OAzBA/mB,GAAAtlB,EAAA,SAAA0B,GACA,MAAAlB,WAAA5C,QACAoC,EAAA0B,EACA4jB,GAFAtlB,GAIAslB,EAAA1X,EAAA,SAAAlM,GACA,MAAAlB,WAAA5C,QACAgQ,EAAAlM,EACA4jB,GAFA1X,GAIA0X,EAAAgnB,QAAA,SAAA5qC,GACA,MAAAlB,WAAA5C,QACA0uC,EAAA5qC,EACA4jB,GAFAgnB,GAIAhnB,EAAAtB,YAAA,SAAAtiB,GACA,MAAAlB,WAAA5C,QACA4uC,EAAA,kBAAA9qC,GAAAsiB,EAAAtiB,GAAAsiB,EAAAyoB,GAAAroC,IAAA1C,IAAA6qC,IAAArrC,IACAokB,GAFAknB,GAIAlnB,EAAA+mB,QAAA,SAAA3qC,GACA,MAAAlB,WAAA5C,QACAyuC,EAAA3qC,EACA4jB,GAFA+mB,GAIA/mB,EAwBA,QAAAinB,IAAA7nB,GACA,MAAAA,GAAAjmB,KAAA,KAEA,QAAAiuC,IAAAhoB,GACA,MAAA6nB,IAAA7nB,GAAA,IAEA,QAAAioB,IAAAjoB,GAEA,IADA,GAAArhB,GAAA,EAAAC,EAAAohB,EAAA9mB,OAAA+X,EAAA+O,EAAA,GAAAkoB,GAAAj3B,EAAA,GAAA,IAAAA,EAAA,MACAtS,EAAAC,GAAAspC,EAAAvqC,KAAA,KAAAsT,EAAA,IAAAA,EAAA+O,EAAArhB,IAAA,IAAA,EAAA,IAAAsS,EAAA,GAEA,OADArS,GAAA,GAAAspC,EAAAvqC,KAAA,IAAAsT,EAAA,IACAi3B,EAAAnuC,KAAA,IAEA,QAAAouC,IAAAnoB,GAEA,IADA,GAAArhB,GAAA,EAAAC,EAAAohB,EAAA9mB,OAAA+X,EAAA+O,EAAA,GAAAkoB,GAAAj3B,EAAA,GAAA,IAAAA,EAAA,MACAtS,EAAAC,GAAAspC,EAAAvqC,KAAA,KAAAsT,EAAA+O,EAAArhB,IAAA,GAAA,IAAAsS,EAAA,GACA,OAAAi3B,GAAAnuC,KAAA,IAEA,QAAAquC,IAAApoB,GAEA,IADA,GAAArhB,GAAA,EAAAC,EAAAohB,EAAA9mB,OAAA+X,EAAA+O,EAAA,GAAAkoB,GAAAj3B,EAAA,GAAA,IAAAA,EAAA,MACAtS,EAAAC,GAAAspC,EAAAvqC,KAAA,KAAAsT,EAAA+O,EAAArhB,IAAA,GAAA,IAAAsS,EAAA,GACA,OAAAi3B,GAAAnuC,KAAA,IAEA,QAAAsuC,IAAAroB,EAAA2nB,GACA,MAAA3nB,GAAA9mB,OAAA,EAAA2uC,GAAA7nB,GAAAA,EAAA,GAAAsoB,GAAAtoB,EAAA1iB,MAAA,EAAA,IAAAirC,GAAAvoB,EAAA2nB,IAEA,QAAAa,IAAAxoB,EAAA2nB,GACA,MAAA3nB,GAAA9mB,OAAA,EAAA2uC,GAAA7nB,GAAAA,EAAA,GAAAsoB,IAAAtoB,EAAAriB,KAAAqiB,EAAA,IACAA,GAAAuoB,IAAAvoB,EAAAA,EAAA9mB,OAAA,IAAAyG,OAAAqgB,GAAAA,EAAA,KAAA2nB,IAEA,QAAAc,IAAAzoB,EAAA2nB,GACA,MAAA3nB,GAAA9mB,OAAA,EAAA2uC,GAAA7nB,GAAAA,EAAA,GAAAsoB,GAAAtoB,EAAAuoB,GAAAvoB,EAAA2nB,IAEA,QAAAW,IAAAtoB,EAAA0oB,GACA,GAAAA,EAAAxvC,OAAA,GAAA8mB,EAAA9mB,QAAAwvC,EAAAxvC,QAAA8mB,EAAA9mB,QAAAwvC,EAAAxvC,OAAA,EACA,MAAA2uC,IAAA7nB,EAEA,IAAAyd,GAAAzd,EAAA9mB,QAAAwvC,EAAAxvC,OAAAgvC,EAAA,GAAAxoB,EAAAM,EAAA,GAAA/O,EAAA+O,EAAA,GAAApP,EAAA83B,EAAA,GAAA/3B,EAAAC,EAAA+3B,EAAA,CAMA,IALAlL,IACAyK,GAAA,KAAAj3B,EAAA,GAAA,EAAAL,EAAA,GAAA,GAAA,KAAAK,EAAA,GAAA,EAAAL,EAAA,GAAA,GAAA,IAAAK,EAAA,GAAA,IAAAA,EAAA,GACAyO,EAAAM,EAAA,GACA2oB,EAAA,GAEAD,EAAAxvC,OAAA,EAAA,CACAyX,EAAA+3B,EAAA,GACAz3B,EAAA+O,EAAA2oB,GACAA,IACAT,GAAA,KAAAxoB,EAAA,GAAA9O,EAAA,IAAA,KAAA8O,EAAA,GAAA9O,EAAA,IAAA,KAAAK,EAAA,GAAAN,EAAA,IAAA,KAAAM,EAAA,GAAAN,EAAA,IAAA,IAAAM,EAAA,GAAA,IAAAA,EAAA,EACA,KAAA,GAAAtS,GAAA,EAAAA,EAAA+pC,EAAAxvC,OAAAyF,IAAAgqC,IACA13B,EAAA+O,EAAA2oB,GACAh4B,EAAA+3B,EAAA/pC,GACAupC,GAAA,KAAAj3B,EAAA,GAAAN,EAAA,IAAA,KAAAM,EAAA,GAAAN,EAAA,IAAA,IAAAM,EAAA,GAAA,IAAAA,EAAA,GAGA,GAAAwsB,EAAA,CACA,GAAAmL,GAAA5oB,EAAA2oB,EACAT,IAAA,KAAAj3B,EAAA,GAAA,EAAAN,EAAA,GAAA,GAAA,KAAAM,EAAA,GAAA,EAAAN,EAAA,GAAA,GAAA,IAAAi4B,EAAA,GAAA,IAAAA,EAAA,GAEA,MAAAV,GAEA,QAAAK,IAAAvoB,EAAA2nB,GAEA,IADA,GAAAjoB,GAAAgpB,KAAAxtC,GAAA,EAAAysC,GAAA,EAAAhoB,EAAAK,EAAA,GAAA6oB,EAAA7oB,EAAA,GAAArhB,EAAA,EAAAC,EAAAohB,EAAA9mB,SACAyF,EAAAC,GACA8gB,EAAAC,EACAA,EAAAkpB,EACAA,EAAA7oB,EAAArhB,GACA+pC,EAAA/qC,MAAAzC,GAAA2tC,EAAA,GAAAnpB,EAAA,IAAAxkB,GAAA2tC,EAAA,GAAAnpB,EAAA,KAEA,OAAAgpB,GAEA,QAAAI,IAAA9oB,GACA,GAAAA,EAAA9mB,OAAA,EAAA,MAAA2uC,IAAA7nB,EACA,IAAArhB,GAAA,EAAAC,EAAAohB,EAAA9mB,OAAAyvC,EAAA3oB,EAAA,GAAA/B,EAAA0qB,EAAA,GAAA5qB,EAAA4qB,EAAA,GAAAtL,GAAApf,EAAAA,EAAAA,GAAA0qB,EAAA3oB,EAAA,IAAA,IAAAsd,GAAAvf,EAAAA,EAAAA,EAAA4qB,EAAA,IAAAT,GAAAjqB,EAAA,IAAAF,EAAA,IAAAgrB,GAAAC,GAAA3L,GAAA,IAAA0L,GAAAC,GAAA1L,GAEA,KADAtd,EAAAriB,KAAAqiB,EAAAphB,EAAA,MACAD,GAAAC,GACA+pC,EAAA3oB,EAAArhB,GACA0+B,EAAA7b,QACA6b,EAAA1/B,KAAAgrC,EAAA,IACArL,EAAA9b,QACA8b,EAAA3/B,KAAAgrC,EAAA,IACAM,GAAAf,EAAA7K,EAAAC,EAIA,OAFAtd,GAAAqB,MACA6mB,EAAAvqC,KAAA,IAAAgrC,GACAT,EAAAnuC,KAAA,IAEA,QAAAmvC,IAAAlpB,GACA,GAAAA,EAAA9mB,OAAA,EAAA,MAAA2uC,IAAA7nB,EAEA,KADA,GAAA2oB,GAAAT,KAAAvpC,EAAA,GAAAC,EAAAohB,EAAA9mB,OAAAmkC,GAAA,GAAAC,GAAA,KACA3+B,EAAA,GACAgqC,EAAA3oB,EAAArhB,GACA0+B,EAAA1/B,KAAAgrC,EAAA,IACArL,EAAA3/B,KAAAgrC,EAAA,GAIA,KAFAT,EAAAvqC,KAAAorC,GAAAC,GAAA3L,GAAA,IAAA0L,GAAAC,GAAA1L,MACA3+B,IACAA,EAAAC,GACA+pC,EAAA3oB,EAAArhB,GACA0+B,EAAA7b,QACA6b,EAAA1/B,KAAAgrC,EAAA,IACArL,EAAA9b,QACA8b,EAAA3/B,KAAAgrC,EAAA,IACAM,GAAAf,EAAA7K,EAAAC,EAEA,OAAA4K,GAAAnuC,KAAA,IAEA,QAAAovC,IAAAnpB,GAEA,IADA,GAAAkoB,GAAAS,EAAAhqC,EAAA,GAAAC,EAAAohB,EAAA9mB,OAAAoM,EAAA1G,EAAA,EAAAy+B,KAAAC,OACA3+B,EAAA,GACAgqC,EAAA3oB,EAAArhB,EAAAC,GACAy+B,EAAA1/B,KAAAgrC,EAAA,IACArL,EAAA3/B,KAAAgrC,EAAA,GAIA,KAFAT,GAAAa,GAAAC,GAAA3L,GAAA,IAAA0L,GAAAC,GAAA1L,MACA3+B,IACAA,EAAA2G,GACAqjC,EAAA3oB,EAAArhB,EAAAC,GACAy+B,EAAA7b,QACA6b,EAAA1/B,KAAAgrC,EAAA,IACArL,EAAA9b,QACA8b,EAAA3/B,KAAAgrC,EAAA,IACAM,GAAAf,EAAA7K,EAAAC,EAEA,OAAA4K,GAAAnuC,KAAA,IAEA,QAAAqvC,IAAAppB,EAAA2nB,GACA,GAAA/oC,GAAAohB,EAAA9mB,OAAA,CACA,IAAA0F,EAEA,IADA,GAAAqS,GAAAN,EAAAsN,EAAA+B,EAAA,GAAA,GAAAjC,EAAAiC,EAAA,GAAA,GAAAkG,EAAAlG,EAAAphB,GAAA,GAAAqf,EAAAkI,EAAAnG,EAAAphB,GAAA,GAAAmf,EAAApf,EAAA,KACAA,GAAAC,GACAqS,EAAA+O,EAAArhB,GACAgS,EAAAhS,EAAAC,EACAqS,EAAA,GAAA02B,EAAA12B,EAAA,IAAA,EAAA02B,IAAA1pB,EAAAtN,EAAAuV,GACAjV,EAAA,GAAA02B,EAAA12B,EAAA,IAAA,EAAA02B,IAAA5pB,EAAApN,EAAAwV,EAGA,OAAA2iB,IAAA9oB,GAEA,QAAA+oB,IAAA7tC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,QAAA8tC,IAAAf,EAAA5sC,EAAA4N,GACAg/B,EAAAvqC,KAAA,IAAAorC,GAAAM,GAAA/tC,GAAA,IAAAytC,GAAAM,GAAAngC,GAAA,IAAA6/B,GAAAO,GAAAhuC,GAAA,IAAAytC,GAAAO,GAAApgC,GAAA,IAAA6/B,GAAAC,GAAA1tC,GAAA,IAAAytC,GAAAC,GAAA9/B,IAEA,QAAAqgC,IAAA7pB,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IAEA,QAAA8pB,IAAAxpB,GAEA,IADA,GAAArhB,GAAA,EAAA0G,EAAA2a,EAAA9mB,OAAA,EAAAoM,KAAAoa,EAAAM,EAAA,GAAAL,EAAAK,EAAA,GAAA9jB,EAAAoJ,EAAA,GAAAikC,GAAA7pB,EAAAC,KACAhhB,EAAA0G,GACAC,EAAA3G,IAAAzC,GAAAA,EAAAqtC,GAAA7pB,EAAAC,EAAAA,EAAAK,EAAArhB,EAAA,MAAA,CAGA,OADA2G,GAAA3G,GAAAzC,EACAoJ,EAEA,QAAAmkC,IAAAzpB,GAEA,IADA,GAAA9jB,GAAAhB,EAAAC,EAAA8E,EAAAyoC,KAAApjC,EAAAkkC,GAAAxpB,GAAArhB,EAAA,GAAA0G,EAAA2a,EAAA9mB,OAAA,IACAyF,EAAA0G,GACAnJ,EAAAqtC,GAAAvpB,EAAArhB,GAAAqhB,EAAArhB,EAAA,IACAhF,GAAAuC,GAAAqhB,GACAjY,EAAA3G,GAAA2G,EAAA3G,EAAA,GAAA,GAEAzD,EAAAoK,EAAA3G,GAAAzC,EACAf,EAAAmK,EAAA3G,EAAA,GAAAzC,EACA+D,EAAA/E,EAAAA,EAAAC,EAAAA,EACA8E,EAAA,IACAA,EAAA,EAAA/D,EAAAxC,KAAAgT,KAAAzM,GACAqF,EAAA3G,GAAAsB,EAAA/E,EACAoK,EAAA3G,EAAA,GAAAsB,EAAA9E,GAKA,KADAwD,EAAA,KACAA,GAAA0G,GACApF,GAAA+f,EAAAtmB,KAAAwT,IAAA7H,EAAA1G,EAAA,IAAA,GAAAqhB,EAAAtmB,KAAAsT,IAAA,EAAArO,EAAA,IAAA,KAAA,GAAA,EAAA2G,EAAA3G,GAAA2G,EAAA3G,KACA+pC,EAAA/qC,MAAAsC,GAAA,EAAAqF,EAAA3G,GAAAsB,GAAA,GAEA,OAAAyoC,GAEA,QAAAgB,IAAA1pB,GACA,MAAAA,GAAA9mB,OAAA,EAAA2uC,GAAA7nB,GAAAA,EAAA,GAAAsoB,GAAAtoB,EAAAypB,GAAAzpB,IAQA,QAAA2pB,IAAA3pB,GAEA,IADA,GAAA7X,GAAA0D,EAAA3Q,EAAAyD,EAAA,GAAAC,EAAAohB,EAAA9mB,SACAyF,EAAAC,GACAuJ,EAAA6X,EAAArhB;AACAkN,EAAA1D,EAAA,GACAjN,EAAAiN,EAAA,GAAAiC,GACAjC,EAAA,GAAA0D,EAAAnS,KAAAsS,IAAA9Q,GACAiN,EAAA,GAAA0D,EAAAnS,KAAAiR,IAAAzP,EAEA,OAAA8kB,GAEA,QAAA4pB,IAAAje,GAEA,QAAAke,GAAAhlC,GAMA,QAAA4a,KACAL,EAAAzhB,KAAA,IAAA2hB,EAAAqM,EAAAme,GAAAnC,GAAAxyB,EAAA40B,EAAApe,EAAAqe,EAAA33B,WAAAs1B,GAAA,KAEA,IARA,GAAAzrC,GAIAZ,EAAA4N,EAJAkW,KAAA4qB,KAAAF,KAAAnrC,EAAA,GAAAC,EAAAiG,EAAA3L,OAAA+wC,EAAAt8B,GAAAsQ,GAAAisB,EAAAv8B,GAAAoQ,GAAAosB,EAAAlsB,IAAA2H,EAAA,WACA,MAAAtqB,IACAqS,GAAAiY,GAAAwkB,EAAArsB,IAAA8H,EAAA,WACA,MAAA3c,IACAyE,GAAAkY,KAIAlnB,EAAAC,GACAgpC,EAAAphC,KAAAzJ,KAAAb,EAAA2I,EAAAlG,GAAAA,IACAqrC,EAAArsC,MAAArC,GAAA2uC,EAAAzjC,KAAAzJ,KAAAb,EAAAyC,GAAAuK,GAAAghC,EAAA1jC,KAAAzJ,KAAAb,EAAAyC,KACAmrC,EAAAnsC,OAAAwsC,EAAA3jC,KAAAzJ,KAAAb,EAAAyC,IAAAyrC,EAAA5jC,KAAAzJ,KAAAb,EAAAyC,MACAqrC,EAAA9wC,SACAumB,IACAuqB,KACAF,KAIA,OADAE,GAAA9wC,QAAAumB,IACAL,EAAAlmB,OAAAkmB,EAAArlB,KAAA,IAAA,KArBA,GAAAkkB,GAAA0R,GAAA/J,EAAA+J,GAAA5R,EAAA,EAAA8H,EAAA+J,GAAAgY,EAAA1oB,GAAAI,EAAAuoB,GAAAC,EAAAxoB,EAAA9iB,IAAAutC,EAAAzqB,EAAAnK,EAAA,IAAAwyB,EAAA,EAsEA,OA/CAkC,GAAAvuC,EAAA,SAAA0B,GACA,MAAAlB,WAAA5C,QACA+kB,EAAA2H,EAAA5oB,EACA6sC,GAFAjkB,GAIAikB,EAAA5rB,GAAA,SAAAjhB,GACA,MAAAlB,WAAA5C,QACA+kB,EAAAjhB,EACA6sC,GAFA5rB,GAIA4rB,EAAAjkB,GAAA,SAAA5oB,GACA,MAAAlB,WAAA5C,QACA0sB,EAAA5oB,EACA6sC,GAFAjkB,GAIAikB,EAAA3gC,EAAA,SAAAlM,GACA,MAAAlB,WAAA5C,QACA6kB,EAAA8H,EAAA7oB,EACA6sC,GAFAhkB,GAIAgkB,EAAA9rB,GAAA,SAAA/gB,GACA,MAAAlB,WAAA5C,QACA6kB,EAAA/gB,EACA6sC,GAFA9rB,GAIA8rB,EAAAhkB,GAAA,SAAA7oB,GACA,MAAAlB,WAAA5C,QACA2sB,EAAA7oB,EACA6sC,GAFAhkB,GAIAgkB,EAAAjC,QAAA,SAAA5qC,GACA,MAAAlB,WAAA5C,QACA0uC,EAAA5qC,EACA6sC,GAFAjC,GAIAiC,EAAAvqB,YAAA,SAAAtiB,GACA,MAAAlB,WAAA5C,QACA4uC,EAAA,kBAAA9qC,GAAAsiB,EAAAtiB,GAAAsiB,EAAAyoB,GAAAroC,IAAA1C,IAAA6qC,IAAArrC,IACAutC,EAAAzqB,EAAAjN,SAAAiN,EACAnK,EAAAmK,EAAAlE,OAAA,IAAA,IACAyuB,GAJA/B,GAMA+B,EAAAlC,QAAA,SAAA3qC,GACA,MAAAlB,WAAA5C,QACAyuC,EAAA3qC,EACA6sC,GAFAlC,GAIAkC,EAqEA,QAAAQ,IAAAnuC,GACA,MAAAA,GAAA2nB,OAgCA,QAAAymB,IAAApuC,GACA,OAAAA,EAAAZ,EAAAY,EAAAgN,GASA,QAAAqhC,IAAA5e,GACA,MAAA,YACA,GAAAzvB,GAAAyvB,EAAAttB,MAAAtB,KAAAjB,WAAA+P,EAAA3P,EAAA,GAAAhB,EAAAgB,EAAA,GAAAkO,EACA,QAAAyB,EAAAnS,KAAAsS,IAAA9Q,GAAA2Q,EAAAnS,KAAAiR,IAAAzP,KAoBA,QAAAsvC,MACA,MAAA,IAEA,QAAAC,MACA,MAAA,SAEA,QAAAC,IAAA7sC,GACA,GAAAgO,GAAAnS,KAAAgT,KAAA7O,EAAAoM,GACA,OAAA,MAAA4B,EAAA,IAAAA,EAAA,IAAAA,EAAA,aAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,YAAAA,EAAA,IA+CA,QAAA8+B,IAAA1oC,GACA,MAAA,YACA,GAAA2oC,GAAAC,GACAD,EAAA7tC,KAAAkF,MAAA4oC,EAAAD,EAAAA,EAAAC,aACAD,EAAAE,YAAAF,GAAAA,EAAAC,cAAA9tC,MAAAkF,GACA2oC,EAAAC,QAAA,GACAA,EAAA1rC,OAAA0rC,EAAA1rC,MAAA4rC,UAAAvkC,KAAAzJ,KAAAA,KAAA+H,SAAA+lC,EAAAhS,SAIA,QAAAmS,IAAApqC,EAAAqB,EAAAgpC,GAIA,MAHApqC,IAAAD,EAAAsqC,IACAtqC,EAAAuD,UAAAlC,EACArB,EAAAqqC,GAAAA,EACArqC,EAoEA,QAAAuqC,IAAAvqC,EAAApC,EAAA5B,EAAAwuC,GACA,GAAAH,GAAArqC,EAAAqqC,GAAAhpC,EAAArB,EAAAuD,SACA,OAAAgB,GAAAvE,EAAA,kBAAAhE,GAAA,SAAAjC,EAAAgE,EAAA0G,GACA1K,EAAAsH,GAAAgpC,GAAAG,MAAAvrC,IAAArB,EAAA4sC,EAAAxuC,EAAA4J,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,OACAzI,EAAAwuC,EAAAxuC,GAAA,SAAAjC,GACAA,EAAAsH,GAAAgpC,GAAAG,MAAAvrC,IAAArB,EAAA5B,MAqFA,QAAAyuC,IAAAlwC,GAEA,MADA,OAAAA,IAAAA,EAAA,IACA,WACA4B,KAAAuuC,YAAAnwC,GA6EA,QAAAowC,IAAA/sC,GACA,MAAA,OAAAA,EAAA,iBAAA,gBAAAA,EAAA,KAEA,QAAAgtC,IAAA7wC,EAAAgE,EAAAsD,EAAAgpC,EAAAQ,GACA,GAAAb,GAAAjwC,EAAAsH,KAAAtH,EAAAsH,IACA4oC,OAAA,EACAC,MAAA,IACAY,EAAAd,EAAAK,EACA,KAAAS,EAAA,CACA,GAAApxC,GAAAmxC,EAAAnxC,IACAoxC,GAAAd,EAAAK,IACAG,MAAA,GAAAtuC,GACAxC,KAAAA,EACA2V,MAAAw7B,EAAAx7B,MACA07B,SAAAF,EAAAE,SACAC,KAAAH,EAAAG,KACA/S,MAAAl6B,GAEA8sC,EAAA,OACAb,EAAAE,MACAzwC,GAAAwxC,MAAA,SAAAC,GAKA,QAAA7rB,GAAA6rB,GACA,GAAAlB,EAAAC,OAAAI,EAAA,MAAA/I,IACA,IAAA2I,GAAAD,EAAAA,EAAAC,OACAA,OACAD,EAAAE,YACAF,GAAAA,EAAAC,QACAA,EAAA1rC,OAAA0rC,EAAA1rC,MAAA4rC,UAAAvkC,KAAA7L,EAAAA,EAAAmK,SAAA+lC,EAAAhS,QAEA+R,EAAAC,OAAAI,EACAS,EAAAvsC,OAAAusC,EAAAvsC,MAAA8gB,MAAAzZ,KAAA7L,EAAAA,EAAAmK,SAAAnG,GACA+sC,EAAAN,MAAAh8B,QAAA,SAAA5S,EAAAI,IACAA,EAAAA,EAAA4J,KAAA7L,EAAAA,EAAAmK,SAAAnG,KACAotC,EAAApuC,KAAAf,KAGAgvC,EAAAF,EAAAE,KACAD,EAAAD,EAAAC,SACAtxC,GAAAwxC,MAAA,WAEA,MADAA,GAAA7oC,EAAAgpC,EAAAF,GAAA,GAAA5sB,GAAA8sB,EACA,GACA,EAAA1xC,GAEA,QAAA0xC,GAAAF,GACA,GAAAlB,EAAAC,SAAAI,EAAA,MAAA,EAEA,KADA,GAAAt6B,GAAAm7B,EAAAH,EAAAzrC,EAAA0rC,EAAAj7B,GAAA/R,EAAAmtC,EAAA7yC,OACA0F,EAAA,GACAmtC,IAAAntC,GAAA4H,KAAA7L,EAAAuF,EAEA,OAAAyQ,IAAA,GACA+6B,EAAAvsC,OAAAusC,EAAAvsC,MAAA80B,IAAAztB,KAAA7L,EAAAA,EAAAmK,SAAAnG,GACAujC,KAFA,OAKA,QAAAA,KAEA,QADA0I,EAAAE,YAAAF,GAAAK,SAAAtwC,GAAAsH,GACA,EAvCA,GAAA0pC,GAAAC,EAAA37B,EAAAy7B,EAAAz7B,MAAA47B,EAAAp7B,GAAAs7B,IAEA,OADAF,GAAAl7B,EAAAV,EAAA3V,EACAwxC,GAAA77B,EAAAgQ,EAAA6rB,EAAA77B,QACA47B,EAAA7oC,EAAAid,IAsCA,EAAA3lB,IAoGA,QAAA2xC,IAAAxmC,EAAAwY,EAAA2H,GACAngB,EAAAymC,KAAA,YAAA,SAAAhwC,GACA,GAAA+nB,GAAAhG,EAAA/hB,EACA,OAAA,cAAAiU,SAAA8T,GAAAA,EAAA2B,EAAA1pB,IAAA,QAGA,QAAAiwC,IAAA1mC,EAAAsY,EAAA8H,GACApgB,EAAAymC,KAAA,YAAA,SAAAhwC,GACA,GAAA+nB,GAAAlG,EAAA7hB,EACA,OAAA,gBAAAiU,SAAA8T,GAAAA,EAAA4B,EAAA3pB,IAAA,MAySA,QAAAkwC,IAAA3xC,GACA,MAAAA,GAAA4xC,cA8CA,QAAAC,IAAArJ,EAAAsJ,EAAAnyC,GACA,QAAAkX,GAAAhW,GACA,MAAA2nC,GAAA3nC,GAUA,QAAAkxC,GAAA5Y,EAAAkX,GACA,GAAAjH,GAAAjQ,EAAA,GAAAA,EAAA,GAAA11B,EAAA2lC,EAAAiH,EAAAnsC,EAAAtE,GAAAwoC,OAAA4J,GAAAvuC,EACA,OAAAS,IAAA8tC,GAAAvzC,QAAAqzC,EAAAG,KAAA9I,GAAAhQ,EAAA/wB,IAAA,SAAA3G,GACA,MAAAA,GAAA,UACA4uC,GAAA,IAAAnsC,EAAA4tC,EAAAruC,EAAAuuC,GAAA9tC,EAAA,GAAA8tC,GAAA9tC,GAAAT,EAAAS,EAAA,EAAAA,IAAAguC,GAAA/I,GAAAhQ,EAAAkX,GAAA,IAgCA,MA5CAx5B,GAAA2N,OAAA,SAAA3jB,GACA,MAAAsxC,IAAA3J,EAAAhkB,OAAA3jB,KAEAgW,EAAA2wB,OAAA,SAAA3mC,GACA,MAAAQ,WAAA5C,QACA+pC,EAAAhB,OAAA3mC,GACAgW,GAFA2xB,EAAAhB,SAAAp/B,IAAA+pC,KAUAt7B,EAAAkxB,KAAA,SAAAqK,EAAAC,GAGA,QAAAC,GAAAtyC,GACA,OAAAe,MAAAf,KAAAoyC,EAAA34B,MAAAzZ,EAAAmyC,IAAAnyC,EAAA,GAAAqyC,GAAA5zC,OAHA,GAAA+oC,GAAA3wB,EAAA2wB,SAAArO,EAAAoO,GAAAC,GAAA7jC,EAAA,MAAAyuC,EAAAL,EAAA5Y,EAAA,IAAA,gBAAAiZ,IAAAL,EAAA5Y,EAAAiZ,EAKA,OAJAzuC,KAAAyuC,EAAAzuC,EAAA,GAAA0uC,EAAA1uC,EAAA,IAIAkT,EAAA2wB,OAAAM,GAAAN,EAAA6K,EAAA,GACAv4B,MAAA,SAAA9Z,GACA,KAAAsyC,EAAAtyC,EAAAoyC,EAAAt4B,MAAA9Z,KAAAA,EAAAmyC,GAAAnyC,EAAA,EACA,OAAAA,IAEAyW,KAAA,SAAAzW,GACA,KAAAsyC,EAAAtyC,EAAAoyC,EAAA37B,KAAAzW,KAAAA,EAAAmyC,IAAAnyC,EAAA,EACA,OAAAA,KAEAoyC,KAEAv7B,EAAA+xB,MAAA,SAAAwJ,EAAAC,GACA,GAAAlZ,GAAAoO,GAAA1wB,EAAA2wB,UAAA7jC,EAAA,MAAAyuC,EAAAL,EAAA5Y,EAAA,IAAA,gBAAAiZ,GAAAL,EAAA5Y,EAAAiZ,IAAAA,EAAA34B,SACAA,MAAA24B,GACAC,EAEA,OADA1uC,KAAAyuC,EAAAzuC,EAAA,GAAA0uC,EAAA1uC,EAAA,IACAyuC,EAAA34B,MAAA0f,EAAA,GAAAgZ,IAAAhZ,EAAA,GAAA,GAAA,EAAAkZ,EAAA,EAAAA,IAEAx7B,EAAAiyB,WAAA,WACA,MAAAnpC,IAEAkX,EAAAoyB,KAAA,WACA,MAAA4I,IAAArJ,EAAAS,OAAA6I,EAAAnyC,IAEAupC,GAAAryB,EAAA2xB,GAEA,QAAA2J,IAAAj8B,GACA,MAAA,IAAAH,MAAAG,GA0DA,QAAAq8B,IAAA5+B,GACA,MAAA6+B,MAAA1yC,MAAA6T,EAAAyB,cAKA,QAAAq9B,IAAA9+B,GACA,GAAA8F,GAAAi5B,GAAAC,aAEA,OADAl5B,GAAAm5B,WAAAF,GAAAG,MACAp5B,EAAAq5B,yBAAAn/B,EAAAyB,cAtxSA,GAAAxV,KACAmzC,QAAA,SAEAC,MAAAnwC,MAAAiJ,GAAA,SAAAmnC,GACA,MAAAD,IAAAjnC,KAAAknC,IAEAP,GAAApwC,KAAAlC,QAOA,IAAAsyC,GACA,IACA5mC,GAAA4mC,GAAAryC,gBAAA6yC,YAAA,GAAAC,SACA,MAAA1tC,IACAqG,GAAA,SAAAmnC,GAEA,IADA,GAAA/uC,GAAA+uC,EAAAx0C,OAAAknB,EAAA,GAAAvmB,OAAA8E,GACAA,KAAAyhB,EAAAzhB,GAAA+uC,EAAA/uC,EACA,OAAAyhB,IAOA,GAHA5P,KAAAT,MAAAS,KAAAT,IAAA,WACA,OAAA,GAAAS,QAEA28B,GACA,IACAA,GAAA7oC,cAAA,OAAAb,MAAAG,YAAA,UAAA,EAAA,IACA,MAAA2K,IACA,GAAAs/B,IAAA9wC,KAAA+wC,QAAAnxC,UAAAoxC,GAAAF,GAAAjsC,aAAAosC,GAAAH,GAAA/rC,eAAAmsC,GAAAlxC,KAAAmxC,oBAAAvxC,UAAAwxC,GAAAF,GAAArqC,WACAiqC,IAAAjsC,aAAA,SAAApD,EAAA5B,GACAmxC,GAAAvnC,KAAAzJ,KAAAyB,EAAA5B,EAAA,KAEAixC,GAAA/rC,eAAA,SAAAL,EAAAC,EAAA9E,GACAoxC,GAAAxnC,KAAAzJ,KAAA0E,EAAAC,EAAA9E,EAAA,KAEAqxC,GAAArqC,YAAA,SAAApF,EAAA5B,EAAA2G,GACA4qC,GAAA3nC,KAAAzJ,KAAAyB,EAAA5B,EAAA,GAAA2G,IAIAlJ,GAAA+zC,UAAAnzC,EAIAZ,GAAAg0C,WAAA,SAAAnzC,EAAAC,GACA,MAAAD,GAAAC,EAAA,GAAAA,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAE,EAAAA,GAEAf,GAAA6S,IAAA,SAAAkT,EAAApX,GACA,GAAA9N,GAAAC,EAAAwD,EAAA,GAAAC,EAAAwhB,EAAAlnB,MACA,IAAA,IAAA4C,UAAA5C,OAAA,CACA,OAAAyF,EAAAC,GAAA,GAAA,OAAAzD,EAAAilB,EAAAzhB,KAAAxD,GAAAA,EAAA,CACAD,EAAAC,CACA,OAEA,OAAAwD,EAAAC,GAAA,OAAAzD,EAAAilB,EAAAzhB,KAAAzD,EAAAC,IAAAD,EAAAC,OACA,CACA,OAAAwD,EAAAC,GAAA,GAAA,OAAAzD,EAAA6N,EAAAxC,KAAA4Z,EAAAA,EAAAzhB,GAAAA,KAAAxD,GAAAA,EAAA,CACAD,EAAAC,CACA,OAEA,OAAAwD,EAAAC,GAAA,OAAAzD,EAAA6N,EAAAxC,KAAA4Z,EAAAA,EAAAzhB,GAAAA,KAAAzD,EAAAC,IAAAD,EAAAC,GAEA,MAAAD,IAEAb,GAAA2S,IAAA,SAAAoT,EAAApX,GACA,GAAA9N,GAAAC,EAAAwD,EAAA,GAAAC,EAAAwhB,EAAAlnB,MACA,IAAA,IAAA4C,UAAA5C,OAAA,CACA,OAAAyF,EAAAC,GAAA,GAAA,OAAAzD,EAAAilB,EAAAzhB,KAAAxD,GAAAA,EAAA,CACAD,EAAAC,CACA,OAEA,OAAAwD,EAAAC,GAAA,OAAAzD,EAAAilB,EAAAzhB,KAAAxD,EAAAD,IAAAA,EAAAC,OACA,CACA,OAAAwD,EAAAC,GAAA,GAAA,OAAAzD,EAAA6N,EAAAxC,KAAA4Z,EAAAA,EAAAzhB,GAAAA,KAAAxD,GAAAA,EAAA,CACAD,EAAAC,CACA,OAEA,OAAAwD,EAAAC,GAAA,OAAAzD,EAAA6N,EAAAxC,KAAA4Z,EAAAA,EAAAzhB,GAAAA,KAAAxD,EAAAD,IAAAA,EAAAC,GAEA,MAAAD,IAEAb,GAAAu5B,OAAA,SAAAxT,EAAApX,GACA,GAAA9N,GAAAC,EAAA6H,EAAArE,EAAA,GAAAC,EAAAwhB,EAAAlnB,MACA,IAAA,IAAA4C,UAAA5C,OAAA,CACA,OAAAyF,EAAAC,GAAA,GAAA,OAAAzD,EAAAilB,EAAAzhB,KAAAxD,GAAAA,EAAA,CACAD,EAAA8H,EAAA7H,CACA,OAEA,OAAAwD,EAAAC,GAAA,OAAAzD,EAAAilB,EAAAzhB,MACAzD,EAAAC,IAAAD,EAAAC,GACAA,EAAA6H,IAAAA,EAAA7H,QAEA,CACA,OAAAwD,EAAAC,GAAA,GAAA,OAAAzD,EAAA6N,EAAAxC,KAAA4Z,EAAAA,EAAAzhB,GAAAA,KAAAxD,GAAAA,EAAA,CACAD,EAAA8H,EAAA7H,CACA,OAEA,OAAAwD,EAAAC,GAAA,OAAAzD,EAAA6N,EAAAxC,KAAA4Z,EAAAA,EAAAzhB,GAAAA,MACAzD,EAAAC,IAAAD,EAAAC,GACAA,EAAA6H,IAAAA,EAAA7H,IAGA,OAAAD,EAAA8H,IAQA3I,GAAAi0C,IAAA,SAAAluB,EAAApX,GACA,GAAA9N,GAAA+E,EAAA,EAAArB,EAAAwhB,EAAAlnB,OAAAyF,EAAA,EACA,IAAA,IAAA7C,UAAA5C,OACA,OAAAyF,EAAAC,GAAArD,EAAAL,GAAAklB,EAAAzhB,MAAAsB,GAAA/E,OAEA,QAAAyD,EAAAC,GAAArD,EAAAL,GAAA8N,EAAAxC,KAAA4Z,EAAAA,EAAAzhB,GAAAA,MAAAsB,GAAA/E,EAEA,OAAA+E,IAEA5F,GAAAk0C,KAAA,SAAAnuB,EAAApX,GACA,GAAA9N,GAAA+E,EAAA,EAAArB,EAAAwhB,EAAAlnB,OAAAyF,EAAA,GAAA0G,EAAAzG,CACA,IAAA,IAAA9C,UAAA5C,OACA,OAAAyF,EAAAC,GAAArD,EAAAL,EAAAG,EAAA+kB,EAAAzhB,KAAAsB,GAAA/E,IAAAmK,MAEA,QAAA1G,EAAAC,GAAArD,EAAAL,EAAAG,EAAA2N,EAAAxC,KAAA4Z,EAAAA,EAAAzhB,GAAAA,KAAAsB,GAAA/E,IAAAmK,CAEA,OAAAA,GAAApF,EAAAoF,EAAA,QAEAhL,GAAAorC,SAAA,SAAArG,EAAAnuB,GACA,GAAA+D,IAAAoqB,EAAAlmC,OAAA,GAAA+X,EAAA,EAAAnG,EAAApR,KAAA6a,MAAAS,GAAA9J,GAAAk0B,EAAAt0B,EAAA,GAAA5K,EAAA8U,EAAAlK,CACA,OAAA5K,GAAAgL,EAAAhL,GAAAk/B,EAAAt0B,GAAAI,GAAAA,GAEA7Q,GAAAm0C,OAAA,SAAApuB,EAAApX,GACA,GAAA9N,GAAAuzC,KAAA7vC,EAAAwhB,EAAAlnB,OAAAyF,EAAA,EACA,IAAA,IAAA7C,UAAA5C,OACA,OAAAyF,EAAAC,GAAArD,EAAAL,EAAAG,EAAA+kB,EAAAzhB,MAAA8vC,EAAA9wC,KAAAzC,OAEA,QAAAyD,EAAAC,GAAArD,EAAAL,EAAAG,EAAA2N,EAAAxC,KAAA4Z,EAAAA,EAAAzhB,GAAAA,MAAA8vC,EAAA9wC,KAAAzC,EAEA,OAAAuzC,GAAAv1C,OAAAmB,GAAAorC,SAAAgJ,EAAA5uB,KAAA5kB,GAAA,IAAA,QAEAZ,GAAAq0C,SAAA,SAAAtuB,EAAApX,GACA,GAAA9N,GAAAgB,EAAA0C,EAAAwhB,EAAAlnB,OAAAoM,EAAA,EAAArF,EAAA,EAAAtB,EAAA,GAAA0G,EAAA,CACA,IAAA,IAAAvJ,UAAA5C,OACA,OAAAyF,EAAAC,GACArD,EAAAL,EAAAG,EAAA+kB,EAAAzhB,OACAzC,EAAAhB,EAAAoK,EACAA,GAAApJ,IAAAmJ,EACApF,GAAA/D,GAAAhB,EAAAoK,QAIA,QAAA3G,EAAAC,GACArD,EAAAL,EAAAG,EAAA2N,EAAAxC,KAAA4Z,EAAAA,EAAAzhB,GAAAA,OACAzC,EAAAhB,EAAAoK,EACAA,GAAApJ,IAAAmJ,EACApF,GAAA/D,GAAAhB,EAAAoK,GAIA,OAAAD,GAAA,EAAApF,GAAAoF,EAAA,GAAA,QAEAhL,GAAAs0C,UAAA,WACA,GAAAzjC,GAAA7Q,GAAAq0C,SAAArwC,MAAAtB,KAAAjB,UACA,OAAAoP,GAAAxR,KAAAgT,KAAAxB,GAAAA,EAwBA,IAAA0jC,IAAAnzC,EAAAR,EACAZ,IAAAw0C,WAAAD,GAAAjzC,KACAtB,GAAAwoC,OAAAxoC,GAAAy0C,YAAAF,GAAA5yC,MACA3B,GAAA00C,SAAA,SAAA/lC,GACA,MAAAvN,GAAA,IAAAuN,EAAA9P,OAAA,SAAAgD,EAAAZ,GACA,MAAAL,GAAA+N,EAAA9M,GAAAZ,IACA0N,IAEA3O,GAAA20C,QAAA,SAAA5uB,EAAAva,EAAA48B,IACAn9B,EAAAxJ,UAAA5C,QAAA,IACAupC,EAAAriB,EAAAlnB,OACA,EAAAoM,IAAAO,EAAA,GAGA,KADA,GAAA8K,GAAAhS,EAAA2G,EAAAm9B,EAAA58B,EACAP,GACA3G,EAAAjF,KAAAmkC,SAAAv4B,IAAA,EACAqL,EAAAyP,EAAA9a,EAAAO,GAAAua,EAAA9a,EAAAO,GAAAua,EAAAzhB,EAAAkH,GAAAua,EAAAzhB,EAAAkH,GAAA8K,CAEA,OAAAyP,IAEA/lB,GAAA40C,QAAA,SAAA7uB,EAAA8uB,GAEA,IADA,GAAAvwC,GAAAuwC,EAAAh2C,OAAAi2C,EAAA,GAAAt1C,OAAA8E,GACAA,KAAAwwC,EAAAxwC,GAAAyhB,EAAA8uB,EAAAvwC,GACA,OAAAwwC,IAEA90C,GAAA+0C,MAAA,SAAAhvB,GAEA,IADA,GAAAV,GAAA/gB,EAAA,EAAAC,EAAAwhB,EAAAlnB,OAAA,EAAAymB,EAAAS,EAAA,GAAAgvB,EAAA,GAAAv1C,OAAA,EAAA+E,EAAA,EAAAA,GACAA,EAAAD,GAAAywC,EAAAzwC,IAAA+gB,EAAAC,EAAAA,EAAAS,IAAAzhB,GACA,OAAAywC,IAEA/0C,GAAAg1C,IAAA,WACA,KAAAzwC,EAAA9C,UAAA5C,QAAA,QACA,KAAA,GAAAyF,GAAA,GAAA2G,EAAAjL,GAAA6S,IAAApR,UAAAG,GAAAqzC,EAAA,GAAAz1C,OAAAyL,KAAA3G,EAAA2G,GACA,IAAA,GAAA1G,GAAAyG,EAAA,GAAAgqC,EAAAC,EAAA3wC,GAAA,GAAA9E,OAAA+E,KAAAyG,EAAAzG,GACAywC,EAAAhqC,GAAAvJ,UAAAuJ,GAAA1G,EAGA,OAAA2wC,IAKAj1C,GAAAk1C,UAAA,SAAAC,GACA,MAAAn1C,IAAAg1C,IAAAhxC,MAAAhE,GAAAm1C,IAEAn1C,GAAAqD,KAAA,SAAAmF,GACA,GAAAnF,KACA,KAAA,GAAAlB,KAAAqG,GAAAnF,EAAAC,KAAAnB,EACA,OAAAkB,IAEArD,GAAA+kC,OAAA,SAAAv8B,GACA,GAAAu8B,KACA,KAAA,GAAA5iC,KAAAqG,GAAAu8B,EAAAzhC,KAAAkF,EAAArG,GACA,OAAA4iC,IAEA/kC,GAAAo1C,QAAA,SAAA5sC,GACA,GAAA4sC,KACA,KAAA,GAAAjzC,KAAAqG,GAAA4sC,EAAA9xC,MACAnB,IAAAA,EACAI,MAAAiG,EAAArG,IAEA,OAAAizC,IAEAp1C,GAAAsnB,MAAA,SAAA+tB,GAEA,IADA,GAAApqC,GAAAqqC,EAAAvvB,EAAAxhB,EAAA8wC,EAAAx2C,OAAAyF,EAAA,GAAA0G,EAAA,IACA1G,EAAAC,GAAAyG,GAAAqqC,EAAA/wC,GAAAzF,MAEA,KADAy2C,EAAA,GAAA91C,OAAAwL,KACAzG,GAAA,GAGA,IAFAwhB,EAAAsvB,EAAA9wC,GACA0G,EAAA8a,EAAAlnB,SACAoM,GAAA,GACAqqC,IAAAtqC,GAAA+a,EAAA9a,EAGA,OAAAqqC,GAEA,IAAAh2C,IAAAD,KAAAC,GACAU,IAAA6Z,MAAA,SAAA+L,EAAAiiB,EAAAruB,GAQA,GAPA/X,UAAA5C,OAAA,IACA2a,EAAA,EACA/X,UAAA5C,OAAA,IACAgpC,EAAAjiB,EACAA,EAAA,KAGAiiB,EAAAjiB,GAAApM,IAAA/C,EAAAA,EAAA,KAAA,IAAA8+B,OAAA,iBACA,IAAAvqC,GAAA6O,KAAA9X,EAAAD,EAAAxC,GAAAka,IAAAlV,EAAA,EAEA,IADAshB,GAAA7jB,EAAA8lC,GAAA9lC,EAAAyX,GAAAzX,EACA,EAAAyX,EAAA,MAAAxO,EAAA4a,EAAApM,IAAAlV,GAAAujC,GAAAhuB,EAAAvW,KAAA0H,EAAAjJ,OAAA,OAAAiJ,EAAA4a,EAAApM,IAAAlV,GAAAujC,GAAAhuB,EAAAvW,KAAA0H,EAAAjJ,EACA,OAAA8X,IAeA7Z,GAAAwI,IAAA,SAAAtE,EAAAyK,GACA,GAAAnG,GAAA,GAAA/F,EACA,IAAAyB,YAAAzB,GACAyB,EAAA6Q,QAAA,SAAA5S,EAAAI,GACAiG,EAAAhD,IAAArD,EAAAI,SAEA,IAAA/C,MAAAg2C,QAAAtxC,GAAA,CACA,GAAAyI,GAAArI,EAAA,GAAAC,EAAAL,EAAArF,MACA,IAAA,IAAA4C,UAAA5C,OAAA,OAAAyF,EAAAC,GAAAiE,EAAAhD,IAAAlB,EAAAJ,EAAAI,QAAA,QAAAA,EAAAC,GAAAiE,EAAAhD,IAAAmJ,EAAAxC,KAAAjI,EAAAyI,EAAAzI,EAAAI,GAAAA,GAAAqI,OAEA,KAAA,GAAAxK,KAAA+B,GAAAsE,EAAAhD,IAAArD,EAAA+B,EAAA/B,GAEA,OAAAqG,GAKA,IAAA1F,IAAA,YAAAC,GAAA,MACAf,GAAAS,GACAmoC,IAAA1nC,EACAmC,IAAA,SAAAlD,GACA,MAAAO,MAAAC,EAAAE,EAAAV,KAEAqD,IAAA,SAAArD,EAAAI,GACA,MAAAG,MAAAC,EAAAE,EAAAV,IAAAI,GAEAgD,OAAApC,EACAE,KAAAD,EACA2hC,OAAA,WACA,GAAAA,KACA,KAAA,GAAA5iC,KAAAO,MAAAC,EAAAoiC,EAAAzhC,KAAAZ,KAAAC,EAAAR,GACA,OAAA4iC,IAEAqQ,QAAA,WACA,GAAAA,KACA,KAAA,GAAAjzC,KAAAO,MAAAC,EAAAyyC,EAAA9xC,MACAnB,IAAAa,EAAAb,GACAI,MAAAG,KAAAC,EAAAR,IAEA,OAAAizC,IAEA5xC,KAAAD,EACAkyC,MAAAhyC,EACAsR,QAAA,SAAApG,GACA,IAAA,GAAAxM,KAAAO,MAAAC,EAAAgM,EAAAxC,KAAAzJ,KAAAM,EAAAb,GAAAO,KAAAC,EAAAR,OA6BAnC,GAAA01C,KAAA,WAEA,QAAAltC,GAAAmtC,EAAA5vB,EAAAwK,GACA,GAAAA,GAAAltB,EAAAxE,OAAA,MAAA+2C,GAAAA,EAAAzpC,KAAAupC,EAAA3vB,GAAA8vB,EAAA9vB,EAAAP,KAAAqwB,GAAA9vB,CAEA,KADA,GAAA+vB,GAAA5xC,EAAA6xC,EAAAhR,EAAAzgC,EAAA,GAAAC,EAAAwhB,EAAAlnB,OAAAsD,EAAAkB,EAAAktB,KAAAylB,EAAA,GAAAvzC,KACA6B,EAAAC,IACAwgC,EAAAiR,EAAA3wC,IAAAywC,EAAA3zC,EAAA+B,EAAA6hB,EAAAzhB,MACAygC,EAAAzhC,KAAAY,GAEA8xC,EAAAxwC,IAAAswC,GAAA5xC,GAeA,OAZAyxC,IACAzxC,EAAAyxC,IACAI,EAAA,SAAAD,EAAA/Q,GACA7gC,EAAAsB,IAAAswC,EAAAttC,EAAAmtC,EAAA5Q,EAAAxU,OAGArsB,KACA6xC,EAAA,SAAAD,EAAA/Q,GACA7gC,EAAA4xC,GAAAttC,EAAAmtC,EAAA5Q,EAAAxU,KAGAylB,EAAAjhC,QAAAghC,GACA7xC,EAEA,QAAAkxC,GAAA5sC,EAAA+nB,GACA,GAAAA,GAAAltB,EAAAxE,OAAA,MAAA2J,EACA,IAAAud,MAAAkwB,EAAAC,EAAA3lB,IAOA,OANA/nB,GAAAuM,QAAA,SAAA5S,EAAAg0C,GACApwB,EAAAziB,MACAnB,IAAAA,EACA4iC,OAAAqQ,EAAAe,EAAA5lB,OAGA0lB,EAAAlwB,EAAAP,KAAA,SAAA3kB,EAAAC,GACA,MAAAm1C,GAAAp1C,EAAAsB,IAAArB,EAAAqB,OACA4jB,EApCA,GAAA8vB,GAAAD,EAAAF,KAAAryC,KAAA6yC,IA4DA,OAtBAR,GAAAltC,IAAA,SAAAud,EAAA4vB,GACA,MAAAntC,GAAAmtC,EAAA5vB,EAAA,IAEA2vB,EAAAN,QAAA,SAAArvB,GACA,MAAAqvB,GAAA5sC,EAAAxI,GAAAwI,IAAAud,EAAA,GAAA,IAEA2vB,EAAAvzC,IAAA,SAAAN,GAEA,MADAwB,GAAAC,KAAAzB,GACA6zC,GAEAA,EAAAQ,SAAA,SAAAE,GAEA,MADAF,GAAA7yC,EAAAxE,OAAA,GAAAu3C,EACAV,GAEAA,EAAAG,WAAA,SAAAO,GAEA,MADAP,GAAAO,EACAV,GAEAA,EAAAE,OAAA,SAAAjnC,GAEA,MADAinC,GAAAjnC,EACA+mC,GAEAA,GAEA11C,GAAAwF,IAAA,SAAAugB,GACA,GAAAvgB,GAAA,GAAA9B,EACA,IAAAqiB,EAAA,IAAA,GAAAzhB,GAAA,EAAAC,EAAAwhB,EAAAlnB,OAAA0F,EAAAD,IAAAA,EAAAkB,EAAAqD,IAAAkd,EAAAzhB,GACA,OAAAkB,IAKAxD,EAAA0B,GACAknC,IAAA1nC,EACA2F,IAAA,SAAA1G,GAEA,MADAO,MAAAC,EAAAE,EAAAV,GAAA,MAAA,EACAA,GAEAoD,OAAApC,EACA4hC,OAAA3hC,EACAI,KAAAD,EACAkyC,MAAAhyC,EACAsR,QAAA,SAAApG,GACA,IAAA,GAAAxM,KAAAO,MAAAC,EAAAgM,EAAAxC,KAAAzJ,KAAAM,EAAAb,OAGAnC,GAAAq2C,YAIAr2C,GAAAsV,OAAA,SAAAzR,EAAAC,GAEA,IADA,GAAAC,GAAAO,EAAA,EAAAC,EAAA9C,UAAA5C,SACAyF,EAAAC,GAAAV,EAAAE,EAAAtC,UAAA6C,IAAAV,EAAAC,EAAAC,EAAAA,EAAAC,GACA,OAAAF,GAgBA,IAAAW,KAAA,SAAA,KAAA,MAAA,MAAA,IAAA,IAEAxE,IAAA6E,SAAA,WAEA,IADA,GAAAA,GAAA,GAAAF,GAAAL,EAAA,GAAAC,EAAA9C,UAAA5C,SACAyF,EAAAC,GAAAM,EAAApD,UAAA6C,IAAAM,EAAAC,EACA,OAAAA,IAGAF,EAAArC,UAAA4C,GAAA,SAAAmB,EAAAjB,GACA,GAAAd,GAAA+B,EAAAlH,QAAA,KAAAgF,EAAA,EAKA,IAJAG,GAAA,IACAH,EAAAkC,EAAApD,MAAAqB,EAAA,GACA+B,EAAAA,EAAApD,MAAA,EAAAqB,IAEA+B,EAAA,MAAA5E,WAAA5C,OAAA,EAAA6D,KAAA2D,GAAAnB,GAAAf,GAAAzB,KAAA2D,GAAAnB,GAAAf,EAAAiB,EACA,IAAA,IAAA3D,UAAA5C,OAAA,CACA,GAAA,MAAAuG,EAAA,IAAAiB,IAAA3D,MACAA,KAAAke,eAAAva,IAAA3D,KAAA2D,GAAAnB,GAAAf,EAAA,KAEA,OAAAzB,QAyBA1C,GAAA8E,MAAA,KA0BA9E,GAAAkI,QAAA,SAAAtC,GACA,MAAAA,GAAA9G,QAAAw3C,GAAA,QAEA,IAAAA,IAAA,kCACA9vC,MAAA+vC,UAAA,SAAAryC,EAAA5B,GACA4B,EAAAqyC,UAAAj0C,GACA,SAAA4B,EAAA5B,GACA,IAAA,GAAAk0C,KAAAl0C,GAAA4B,EAAAsyC,GAAAl0C,EAAAk0C,IAMA5vC,GAAA,SAAAhB,EAAArB,GACA,MAAAA,GAAAkyC,cAAA7wC,IACAkB,GAAA,SAAAlB,EAAArB,GACA,MAAAA,GAAAmyC,iBAAA9wC,IACA+E,GAAA,SAAApG,EAAAqB,GACA,GAAA+wC,GAAApyC,EAAAqyC,SAAAryC,EAAAN,EAAAM,EAAA,mBAIA,QAHAoG,GAAA,SAAApG,EAAAqB,GACA,MAAA+wC,GAAAxqC,KAAA5H,EAAAqB,KAEArB,EAAAqB,GAEA,mBAAAixC,UACAjwC,GAAA,SAAAhB,EAAArB,GACA,MAAAsyC,QAAAjxC,EAAArB,GAAA,IAAA,MAEAuC,GAAA+vC,OACAlsC,GAAAksC,OAAAC,iBAEA92C,GAAAoL,UAAA,WACA,MAAApL,IAAAmN,OAAA2lC,GAAAryC,iBAEA,IAAAgG,IAAAzG,GAAAoL,UAAA9I,YACAmE,IAAA0G,OAAA,SAAAxG,GACA,GAAAowC,GAAAC,EAAA9rC,EAAA5K,EAAA22C,IACAtwC,GAAAD,EAAAC,EACA,KAAA,GAAAqE,GAAA,GAAAC,EAAAvI,KAAA7D,SAAAmM,EAAAC,GAAA,CACAgsC,EAAA3zC,KAAAyzC,MACAA,EAAA1sC,YAAAa,EAAAxI,KAAAsI,IAAAX,UACA,KAAA,GAAA/F,GAAA,GAAAC,EAAA2G,EAAArM,SAAAyF,EAAAC,IACAjE,EAAA4K,EAAA5G,KACAyyC,EAAAzzC,KAAA0zC,EAAArwC,EAAAwF,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,IACAgsC,GAAA,YAAA12C,KAAA02C,EAAAvsC,SAAAnK,EAAAmK,WAEAssC,EAAAzzC,KAAA,MAIA,MAAAgD,GAAA2wC,IAOAxwC,GAAAywC,UAAA,SAAAvwC,GACA,GAAAowC,GAAAz2C,EAAA22C,IACAtwC,GAAAE,EAAAF,EACA,KAAA,GAAAqE,GAAA,GAAAC,EAAAvI,KAAA7D,SAAAmM,EAAAC,GACA,IAAA,GAAAC,GAAAxI,KAAAsI,GAAA1G,EAAA,GAAAC,EAAA2G,EAAArM,SAAAyF,EAAAC,IACAjE,EAAA4K,EAAA5G,MACA2yC,EAAA3zC,KAAAyzC,EAAA7qC,GAAAvF,EAAAwF,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,KACA+rC,EAAA1sC,WAAA/J,EAIA,OAAAgG,GAAA2wC,GAOA,IAAAE,KACAxpC,IAAA,6BACAypC,MAAA,+BACAC,MAAA,+BACAC,IAAA,uCACAC,MAAA,gCAEAv3C,IAAA4H,IACA4Q,OAAA2+B,GACAtvC,QAAA,SAAA1D,GACA,GAAAG,GAAAH,EAAAhF,QAAA,KAAAqZ,EAAArU,CAKA,OAJAG,IAAA,IACAkU,EAAArU,EAAAlB,MAAA,EAAAqB,GACAH,EAAAA,EAAAlB,MAAAqB,EAAA,IAEA6yC,GAAAv2B,eAAApI,IACApR,MAAA+vC,GAAA3+B,GACAnR,MAAAlD,GACAA,IAGAsC,GAAAorC,KAAA,SAAA1tC,EAAA5B,GACA,GAAAd,UAAA5C,OAAA,EAAA,CACA,GAAA,gBAAAsF,GAAA,CACA,GAAA7D,GAAAoC,KAAApC,MAEA,OADA6D,GAAAnE,GAAA4H,GAAAC,QAAA1D,GACAA,EAAAkD,MAAA/G,EAAAk3C,eAAArzC,EAAAiD,MAAAjD,EAAAkD,OAAA/G,EAAAwI,aAAA3E,GAEA,IAAA5B,IAAA4B,GAAAzB,KAAA+0C,KAAA1wC,EAAAxE,EAAA4B,EAAA5B,IACA,OAAAG,MAEA,MAAAA,MAAA+0C,KAAA1wC,EAAA5C,EAAA5B,KA6BAkE,GAAAixC,QAAA,SAAAvzC,EAAA5B,GACA,GAAAd,UAAA5C,OAAA,EAAA,CACA,GAAA,gBAAAsF,GAAA,CACA,GAAA7D,GAAAoC,KAAApC,OAAAiE,GAAAJ,EAAAgE,EAAAhE,IAAAtF,OAAAyF,EAAA,EACA,IAAA/B,EAAAjC,EAAAsI,WACA,OAAAtE,EAAAC,GAAA,IAAAhC,EAAAo1C,SAAAxzC,EAAAG,IAAA,OAAA,MAGA,KADA/B,EAAAjC,EAAAwI,aAAA,WACAxE,EAAAC,GAAA,IAAAyD,EAAA7D,EAAAG,IAAA0E,KAAAzG,GAAA,OAAA,CAEA,QAAA,EAEA,IAAAA,IAAA4B,GAAAzB,KAAA+0C,KAAApvC,EAAA9F,EAAA4B,EAAA5B,IACA,OAAAG,MAEA,MAAAA,MAAA+0C,KAAApvC,EAAAlE,EAAA5B,KAkCAkE,GAAA2C,MAAA,SAAAjF,EAAA5B,EAAA2G,GACA,GAAA3E,GAAA9C,UAAA5C,MACA,IAAA,EAAA0F,EAAA,CACA,GAAA,gBAAAJ,GAAA,CACA,EAAAI,IAAAhC,EAAA,GACA,KAAA2G,IAAA/E,GAAAzB,KAAA+0C,KAAAxuC,EAAAC,EAAA/E,EAAA+E,GAAA3G,GACA,OAAAG,MAEA,GAAA,EAAA6B,EAAA,CACA,GAAAjE,GAAAoC,KAAApC,MACA,OAAAI,GAAAJ,GAAAs3C,iBAAAt3C,EAAA,MAAAu3C,iBAAA1zC,GAEA+E,EAAA,GAEA,MAAAxG,MAAA+0C,KAAAxuC,EAAA9E,EAAA5B,EAAA2G,KAeAzC,GAAA+vC,SAAA,SAAAryC,EAAA5B,GACA,GAAAd,UAAA5C,OAAA,EAAA,CACA,GAAA,gBAAAsF,GAAA,MAAAzB,MAAApC,OAAA6D,EACA,KAAA5B,IAAA4B,GAAAzB,KAAA+0C,KAAAhuC,EAAAlH,EAAA4B,EAAA5B,IACA,OAAAG,MAEA,MAAAA,MAAA+0C,KAAAhuC,EAAAtF,EAAA5B,KAeAkE,GAAAqxC,KAAA,SAAAv1C,GACA,MAAAd,WAAA5C,OAAA6D,KAAA+0C,KAAA,kBAAAl1C,GAAA,WACA,GAAAsO,GAAAtO,EAAAyB,MAAAtB,KAAAjB,UACAiB,MAAAuuC,YAAA,MAAApgC,EAAA,GAAAA,GACA,MAAAtO,EAAA,WACAG,KAAAuuC,YAAA,IACA,WACAvuC,KAAAuuC,YAAA1uC,IACAG,KAAApC,OAAA2wC,aAEAxqC,GAAAsxC,KAAA,SAAAx1C,GACA,MAAAd,WAAA5C,OAAA6D,KAAA+0C,KAAA,kBAAAl1C,GAAA,WACA,GAAAsO,GAAAtO,EAAAyB,MAAAtB,KAAAjB,UACAiB,MAAAs1C,UAAA,MAAAnnC,EAAA,GAAAA,GACA,MAAAtO,EAAA,WACAG,KAAAs1C,UAAA,IACA,WACAt1C,KAAAs1C,UAAAz1C,IACAG,KAAApC,OAAA03C,WAEAvxC,GAAA0H,OAAA,SAAAhK,GAEA,MADAA,GAAA0F,EAAA1F,GACAzB,KAAAyK,OAAA,WACA,MAAAzK,MAAAu1C,YAAA9zC,EAAAH,MAAAtB,KAAAjB,eAaAgF,GAAA8xB,OAAA,SAAAp0B,EAAA+U,GAGA,MAFA/U,GAAA0F,EAAA1F,GACA+U,EAAAxS,EAAAwS,GACAxW,KAAAyK,OAAA,WACA,MAAAzK,MAAAw1C,aAAA/zC,EAAAH,MAAAtB,KAAAjB,WAAAyX,EAAAlV,MAAAtB,KAAAjB,YAAA,SAGAgF,GAAAlB,OAAA,WACA,MAAA7C,MAAA+0C,KAAAttC,IAMA1D,GAAA+D,KAAA,SAAAjI,EAAAJ,GAWA,QAAAg2C,GAAAjtC,EAAAktC,GACA,GAAA9zC,GAAAhE,EAAA+3C,EAAA9zC,EAAA2G,EAAArM,OAAAoM,EAAAmtC,EAAAv5C,OAAAggC,EAAAx/B,KAAAwT,IAAAtO,EAAA0G,GAAAqtC,EAAA,GAAA94C,OAAAyL,GAAAstC,EAAA,GAAA/4C,OAAAyL,GAAAutC,EAAA,GAAAh5C,OAAA+E,EACA,IAAApC,EAAA,CACA,GAAA2zC,GAAA2C,EAAA,GAAAh2C,GAAAi2C,EAAA,GAAAl5C,OAAA+E,EACA,KAAAD,EAAA,KAAAA,EAAAC,GACAk0C,EAAA7N,IAAAkL,EAAA3zC,EAAAgK,KAAA7L,EAAA4K,EAAA5G,GAAAhE,EAAAmK,SAAAnG,IACAk0C,EAAAl0C,GAAAhE,EAEAm4C,EAAAjzC,IAAAswC,EAAAx1C,GAEAo4C,EAAAp0C,GAAAwxC,CAEA,KAAAxxC,EAAA,KAAAA,EAAA2G,IACA3K,EAAAm4C,EAAApzC,IAAAywC,EAAA3zC,EAAAgK,KAAAisC,EAAAC,EAAAD,EAAA9zC,GAAAA,KAEAhE,KAAA,IACAg4C,EAAAh0C,GAAAhE,EACAA,EAAAmK,SAAA4tC,GAHAE,EAAAj0C,GAAAiG,EAAA8tC,GAKAI,EAAAjzC,IAAAswC,GAAA,EAEA,KAAAxxC,EAAA,KAAAA,EAAAC,GACAk0C,EAAApzC,IAAAqzC,EAAAp0C,OAAA,IACAk0C,EAAAl0C,GAAA4G,EAAA5G,QAGA,CACA,IAAAA,EAAA,KAAAA,EAAAu6B,GACAv+B,EAAA4K,EAAA5G,GACA+zC,EAAAD,EAAA9zC,GACAhE,GACAA,EAAAmK,SAAA4tC,EACAC,EAAAh0C,GAAAhE,GAEAi4C,EAAAj0C,GAAAiG,EAAA8tC,EAGA,MAAAptC,EAAA3G,IAAAA,EACAi0C,EAAAj0C,GAAAiG,EAAA6tC,EAAA9zC,GAEA,MAAAC,EAAAD,IAAAA,EACAk0C,EAAAl0C,GAAA4G,EAAA5G,GAGAi0C,EAAA7sC,OAAA4sC,EACAC,EAAAluC,WAAAiuC,EAAAjuC,WAAAmuC,EAAAnuC,WAAAa,EAAAb,WACAkB,EAAAjI,KAAAi1C,GACA7sC,EAAApI,KAAAg1C,GACAK,EAAAr1C,KAAAk1C,GA1DA,GAAAttC,GAAA5K,EAAAgE,EAAA,GAAAC,EAAA7B,KAAA7D,MACA,KAAA4C,UAAA5C,OAAA,CAEA,IADA0D,EAAA,GAAA/C,OAAA+E,GAAA2G,EAAAxI,KAAA,IAAA7D,UACAyF,EAAAC,IACAjE,EAAA4K,EAAA5G,MACA/B,EAAA+B,GAAAhE,EAAAmK,SAGA,OAAAlI,GAoDA,GAAAgJ,GAAAJ,MAAAO,EAAApF,MAAAqyC,EAAAryC,KACA,IAAA,kBAAA/D,GACA,OAAA+B,EAAAC,GACA4zC,EAAAjtC,EAAAxI,KAAA4B,GAAA/B,EAAA4J,KAAAjB,EAAAA,EAAAb,WAAAI,SAAAnG,QAGA,QAAAA,EAAAC,GACA4zC,EAAAjtC,EAAAxI,KAAA4B,GAAA/B,EASA,OANAmJ,GAAAH,MAAA,WACA,MAAAA,IAEAG,EAAAitC,KAAA,WACA,MAAAA,IAEAjtC,GAOAjF,GAAAmyC,MAAA,SAAAr2C,GACA,MAAAd,WAAA5C,OAAA6D,KAAA8zC,SAAA,WAAAj0C,GAAAG,KAAA8zC,SAAA,aAEA/vC,GAAA+F,OAAA,SAAAA,GACA,GAAAuqC,GAAA7rC,EAAA5K,EAAA22C,IACA,mBAAAzqC,KAAAA,EAAA9B,EAAA8B,GACA,KAAA,GAAAxB,GAAA,EAAAC,EAAAvI,KAAA7D,OAAAoM,EAAAD,EAAAA,IAAA,CACAisC,EAAA3zC,KAAAyzC,MACAA,EAAA1sC,YAAAa,EAAAxI,KAAAsI,IAAAX,UACA,KAAA,GAAA/F,GAAA,EAAAC,EAAA2G,EAAArM,OAAA0F,EAAAD,EAAAA,KACAhE,EAAA4K,EAAA5G,KAAAkI,EAAAL,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,IACA+rC,EAAAzzC,KAAAhD,GAIA,MAAAgG,GAAA2wC,IAOAxwC,GAAA2vC,MAAA,WACA,IAAA,GAAAprC,GAAA,GAAAC,EAAAvI,KAAA7D,SAAAmM,EAAAC,GACA,IAAA,GAAA3K,GAAA4K,EAAAxI,KAAAsI,GAAA1G,EAAA4G,EAAArM,OAAA,EAAAw4B,EAAAnsB,EAAA5G,KAAAA,GAAA,IACAhE,EAAA4K,EAAA5G,MACA+yB,GAAAA,IAAA/2B,EAAAu4C,aAAAxhB,EAAAhtB,WAAA6tC,aAAA53C,EAAA+2B,GACAA,EAAA/2B,EAIA,OAAAoC,OAEA+D,GAAA+e,KAAA,SAAA3a,GACAA,EAAAD,EAAA5G,MAAAtB,KAAAjB,UACA,KAAA,GAAAuJ,GAAA,GAAAC,EAAAvI,KAAA7D,SAAAmM,EAAAC,GAAAvI,KAAAsI,GAAAwa,KAAA3a,EACA,OAAAnI,MAAA0zC,SAQA3vC,GAAAgxC,KAAA,SAAA1sC,GACA,MAAAD,GAAApI,KAAA,SAAApC,EAAAgE,EAAA0G,GACAD,EAAAoB,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,MAWAvE,GAAA0F,KAAA,SAAApB,GACA,GAAA+tC,GAAA5sC,GAAAzK,UAEA,OADAsJ,GAAA/G,MAAA80C,EAAA,GAAAp2C,KAAAo2C,GACAp2C,MAEA+D,GAAAgvC,MAAA,WACA,OAAA/yC,KAAApC,QAEAmG,GAAAnG,KAAA,WACA,IAAA,GAAA0K,GAAA,EAAAC,EAAAvI,KAAA7D,OAAAoM,EAAAD,EAAAA,IACA,IAAA,GAAAE,GAAAxI,KAAAsI,GAAA1G,EAAA,EAAAC,EAAA2G,EAAArM,OAAA0F,EAAAD,EAAAA,IAAA,CACA,GAAAhE,GAAA4K,EAAA5G,EACA,IAAAhE,EAAA,MAAAA,GAGA,MAAA,OAEAmG,GAAAjD,KAAA,WACA,GAAAe,GAAA,CAIA,OAHAuG,GAAApI,KAAA,aACA6B,IAEAA,EAMA,IAAA8G,MACArL,IAAAoL,UAAAG,MAAAJ,EACAnL,GAAAoL,UAAAG,MAAAjJ,UAAA+I,GACAA,GAAA8C,OAAA1H,GAAA0H,OACA9C,GAAAoqC,MAAAhvC,GAAAgvC,MACApqC,GAAA/K,KAAAmG,GAAAnG,KACA+K,GAAAc,KAAA1F,GAAA0F,KACAd,GAAA7H,KAAAiD,GAAAjD,KACA6H,GAAA8B,OAAA,SAAAxG,GAEA,IAAA,GADAowC,GAAAC,EAAA+B,EAAA7tC,EAAA5K,EAAA22C,KACAjsC,EAAA,GAAAC,EAAAvI,KAAA7D,SAAAmM,EAAAC,GAAA,CACA8tC,GAAA7tC,EAAAxI,KAAAsI,IAAAU,OACAurC,EAAA3zC,KAAAyzC,MACAA,EAAA1sC,WAAAa,EAAAb,UACA,KAAA,GAAA/F,GAAA,GAAAC,EAAA2G,EAAArM,SAAAyF,EAAAC,IACAjE,EAAA4K,EAAA5G,KACAyyC,EAAAzzC,KAAAy1C,EAAAz0C,GAAA0yC,EAAArwC,EAAAwF,KAAAjB,EAAAb,WAAA/J,EAAAmK,SAAAnG,EAAA0G,IACAgsC,EAAAvsC,SAAAnK,EAAAmK,UAEAssC,EAAAzzC,KAAA,MAIA,MAAAgD,GAAA2wC,IAEA5rC,GAAAktB,OAAA,SAAAp0B,EAAA+U,GAEA,MADAzX,WAAA5C,OAAA,IAAAqa,EAAA5N,EAAA5I,OACA+D,GAAA8xB,OAAApsB,KAAAzJ,KAAAyB,EAAA+U,IAYAlZ,GAAAmN,OAAA,SAAA7M,GACA,GAAA4K,EAQA,OAPA,gBAAA5K,IACA4K,GAAAtE,GAAAtG,EAAAwyC,KACA5nC,EAAAb,WAAAyoC,GAAAryC,kBAEAyK,GAAA5K,GACA4K,EAAAb,WAAAhK,EAAAC,IAEAgG,GAAA4E,KAEAlL,GAAAk3C,UAAA,SAAAza,GACA,GAAAvxB,EAQA,OAPA,gBAAAuxB,IACAvxB,EAAAgB,GAAApF,GAAA21B,EAAAqW,KACA5nC,EAAAb,WAAAyoC,GAAAryC,kBAEAyK,EAAAuxB,EACAvxB,EAAAb,WAAA,MAEA/D,GAAA4E,KAEAzE,GAAAvB,GAAA,SAAAmB,EAAAjB,EAAAwG,GACA,GAAArH,GAAA9C,UAAA5C,MACA,IAAA,EAAA0F,EAAA,CACA,GAAA,gBAAA8B,GAAA,CACA,EAAA9B,IAAAa,GAAA,EACA,KAAAwG,IAAAvF,GAAA3D,KAAA+0C,KAAA9rC,EAAAC,EAAAvF,EAAAuF,GAAAxG,GACA,OAAA1C,MAEA,GAAA,EAAA6B,EAAA,OAAAA,EAAA7B,KAAApC,OAAA,OAAA+F,KAAA9B,EAAA5B,CACAiJ,IAAA,EAEA,MAAAlJ,MAAA+0C,KAAA9rC,EAAAtF,EAAAjB,EAAAwG,IAgCA,IAAAa,IAAAzM,GAAAwI,KACAwwC,WAAA,YACAC,WAAA,YAEAnG,KACArmC,GAAAsI,QAAA,SAAAhT,GACA,KAAAA,IAAA+wC,KAAArmC,GAAAlH,OAAAxD,IAwBA,IAAAqL,IAAAJ,GAAA,CAyBAhN,IAAAk5C,MAAA,SAAAzrC,GACA,MAAAD,GAAAC,EAAA9H,KAEA,IAAAoI,IAAArL,KAAAy2C,WAAA,SAAAnwC,KAAAtG,KAAAy2C,UAAAC,WAAA,GAAA,CA8BAp5C,IAAAq5C,MAAA,SAAA5rC,EAAA6rC,EAAA9pC,GAEA,GADA/N,UAAA5C,OAAA,IAAA2Q,EAAA8pC,EAAAA,EAAA3zC,IAAA+H,gBACA4rC,EAAA,IAAA,GAAAD,GAAA/0C,EAAA,EAAAC,EAAA+0C,EAAAz6C,OAAA0F,EAAAD,IAAAA,EACA,IAAA+0C,EAAAC,EAAAh1C,IAAAkL,aAAAA,EACA,MAAAhC,GAAAC,EAAA4rC,IAIAr5C,GAAAq2C,SAAAkD,KAAA,WAEA,QAAAA,KACA72C,KAAAwC,GAAA,iBAAAs0C,GAAAt0C,GAAA,kBAAAu0C,GAEA,QAAAC,GAAA9I,EAAAxiC,EAAA8W,EAAAy0B,EAAA/f,GACA,MAAA,YAWA,QAAAggB,KACA,GAAA/tB,GAAAC,EAAA+tB,EAAAzrC,EAAAhE,EAAA0vC,EACAD,KACAhuB,EAAAguB,EAAA,GAAAE,EAAA,GACAjuB,EAAA+tB,EAAA,GAAAE,EAAA,GACAC,GAAAnuB,EAAAC,EACAiuB,EAAAF,EACAh1C,GACAwB,KAAA,OACApF,EAAA44C,EAAA,GAAAI,EAAA,GACAprC,EAAAgrC,EAAA,GAAAI,EAAA,GACApuB,GAAAA,EACAC,GAAAA,KAGA,QAAAouB,KACA9rC,EAAAhE,EAAA0vC,KACAK,EAAAj1C,GAAAy0C,EAAAS,EAAA,MAAAl1C,GAAA00B,EAAAwgB,EAAA,MACAC,EAAAL,GAAAh6C,GAAA8E,MAAAjB,SAAAA,GACAgB,GACAwB,KAAA,aA9BA,GAAA4zC,GAAAK,EAAA53C,KAAAmB,EAAA7D,GAAA8E,MAAAjB,OAAAuG,EAAAkwC,EAAAjwC,WAAAxF,EAAAC,EAAAkB,GAAAs0C,EAAA74C,WAAAu4C,EAAA,EAAAF,EAAAlJ,IAAAwJ,EAAA,SAAA,MAAAN,EAAA,GAAA,IAAAA,GAAAK,EAAAn6C,GAAAmN,OAAA+X,EAAArhB,IAAAqB,GAAAy0C,EAAAS,EAAAR,GAAA10C,GAAA00B,EAAAwgB,EAAAF,GAAAG,EAAAttC,EAAAlJ,GAAAk2C,EAAA3rC,EAAAhE,EAAA0vC,EACAS,IACAN,EAAAM,EAAAv2C,MAAAs2C,EAAA74C,WACAw4C,GAAAA,EAAAh5C,EAAA84C,EAAA,GAAAE,EAAAprC,EAAAkrC,EAAA,KAEAE,GAAA,EAAA,GAEAp1C,GACAwB,KAAA,eAdA,GAAAvB,GAAAiB,EAAAwzC,EAAA,OAAA,YAAA,WAAAgB,EAAA,KAAAf,EAAAE,EAAAh1C,EAAA1E,GAAAk5C,MAAAx4C,EAAA,YAAA,WAAA+4C,EAAAC,EAAAnqC,EAAAvP,GAAAq5C,MAAA11C,EAAA,YAAA,WA8CA,OALA41C,GAAAgB,OAAA,SAAAt5C,GACA,MAAAQ,WAAA5C,QACA07C,EAAAt5C,EACAs4C,GAFAgB,GAIAv6C,GAAAsV,OAAAikC,EAAAz0C,EAAA,OAKA9E,GAAAs5C,QAAA,SAAA7rC,EAAA6rC,GAEA,MADA73C,WAAA5C,OAAA,IAAAy6C,EAAA3zC,IAAA2zC,SACAA,EAAAptC,GAAAotC,GAAA9wC,IAAA,SAAA6wC,GACA,GAAAvrC,GAAAN,EAAAC,EAAA4rC,EAEA,OADAvrC,GAAA0B,WAAA6pC,EAAA7pC,WACA1B,OAGA,IAAAoV,IAAA,KAAAqX,GAAArX,GAAAA,GAAAtT,GAAAvQ,KAAAg0B,GAAAlK,GAAA,EAAAvZ,GAAA4qC,GAAArxB,GAAAjG,GAAAnT,GAAAH,GAAA,EAAAgC,GAAAhC,GAAA,IAAAwC,GAAA,IAAAxC,GAyBA6d,GAAApuB,KAAAo7C,MAAAC,GAAA,EAAAC,GAAA,CACA36C,IAAA46C,gBAAA,SAAAv1B,EAAAC,GAGA,QAAAL,GAAA3O,GACA,GAAA1Q,GAAA0Q,EAAAuE,CACA,IAAA4qB,EAAA,CACA,GAAAoV,GAAA1qC,GAAAywB,GAAA3e,EAAA64B,GAAAJ,GAAAhhC,IAAAmhC,EAAAzqC,GAAAqd,GAAA7nB,EAAAg7B,GAAA3wB,GAAA2wB,GACA,QAAAma,EAAA94B,EAAA4J,EAAAmvB,EAAA/4B,EAAA6J,EAAAgvB,EAAAD,EAAA1qC,GAAAsd,GAAA7nB,EAAAg7B,IAEA,OAAAma,EAAAzkC,EAAAuV,EAAAmvB,EAAA1kC,EAAAwV,EAAAgvB,EAAAz7C,KAAA6Q,IAAAud,GAAA7nB,IARA,GAAAm1C,GAAA11B,EAAA,GAAA21B,EAAA31B,EAAA,GAAAy1B,EAAAz1B,EAAA,GAAA41B,EAAA31B,EAAA,GAAA41B,EAAA51B,EAAA,GAAA61B,EAAA71B,EAAA,GACAuG,EAAAovB,EAAAF,EAAAjvB,EAAAovB,EAAAF,EAAAxqB,EAAA3E,EAAAA,EAAAC,EAAAA,EAAApS,EAAAra,KAAAgT,KAAAme,GAAAP,GAAAkrB,EAAAA,EAAAL,EAAAA,EAAAH,GAAAnqB,IAAA,EAAAsqB,EAAAJ,GAAAhhC,GAAA4W,GAAA6qB,EAAAA,EAAAL,EAAAA,EAAAH,GAAAnqB,IAAA,EAAA2qB,EAAAT,GAAAhhC,GAAAknB,EAAAvhC,KAAAyX,IAAAzX,KAAAgT,KAAA4d,EAAAA,EAAA,GAAAA,GAAA4Q,EAAAxhC,KAAAyX,IAAAzX,KAAAgT,KAAAie,EAAAA,EAAA,GAAAA,GAAAmV,EAAA5E,EAAAD,EAAA/lB,GAAA4qB,GAAApmC,KAAAyX,IAAAqkC,EAAAL,IAAArtB,EAUA,OADAxI,GAAAqsB,SAAA,IAAAz2B,EACAoK,GAEAjlB,GAAAq2C,SAAA+E,KAAA,WAeA,QAAAA,GAAA3pC,GACAA,EAAAvM,GAAAs0C,EAAA6B,GAAAn2C,GAAAo2C,GAAA,QAAAC,GAAAr2C,GAAA,gBAAAs2C,GAAAt2C,GAAAu0C,EAAAgC,GAmGA,QAAAC,GAAA9kC,GACA,QAAAA,EAAA,GAAA+kC,EAAA16C,GAAA06C,EAAA55C,GAAA6U,EAAA,GAAA+kC,EAAA9sC,GAAA8sC,EAAA55C,GAEA,QAAA+L,GAAA/I,GACA,OAAAA,EAAA,GAAA42C,EAAA55C,EAAA45C,EAAA16C,EAAA8D,EAAA,GAAA42C,EAAA55C,EAAA45C,EAAA9sC,GAEA,QAAA+sC,GAAAh2C,GACA+1C,EAAA55C,EAAA1C,KAAAsT,IAAAkpC,EAAA,GAAAx8C,KAAAwT,IAAAgpC,EAAA,GAAAj2C,IAEA,QAAAk2C,GAAAllC,EAAA7R,GACAA,EAAA+I,EAAA/I,GACA42C,EAAA16C,GAAA2V,EAAA,GAAA7R,EAAA,GACA42C,EAAA9sC,GAAA+H,EAAA,GAAA7R,EAAA,GAEA,QAAAg3C,GAAAzB,EAAA1jC,EAAA7R,EAAAhD,GACAu4C,EAAA0B,WACA/6C,EAAA06C,EAAA16C,EACA4N,EAAA8sC,EAAA9sC,EACA9M,EAAA45C,EAAA55C,GAEA65C,EAAAv8C,KAAAkT,IAAA,EAAAxQ,IACA+5C,EAAAG,EAAArlC,EAAA7R,GACAu1C,EAAAt6C,GAAAmN,OAAAmtC,GACAhJ,EAAA,IAAAgJ,EAAAA,EAAAjJ,aAAAC,SAAAA,IACAgJ,EAAAnuC,KAAAivC,EAAAt2C,OAEA,QAAA6jC,KACApd,GAAAA,EAAAqc,OAAAhkB,EAAA/J,QAAArR,IAAA,SAAAvH,GACA,OAAAA,EAAA06C,EAAA16C,GAAA06C,EAAA55C,IACAyG,IAAAob,EAAAgB,SACA4G,GAAAA,EAAAoc,OAAAlkB,EAAA7J,QAAArR,IAAA,SAAAqG,GACA,OAAAA,EAAA8sC,EAAA9sC,GAAA8sC,EAAA55C,IACAyG,IAAAkb,EAAAkB,SAEA,QAAAs3B,GAAAr3C,GACAs3C,KAAAt3C,GACAwB,KAAA,cAGA,QAAA+1C,GAAAv3C,GACA8jC,IACA9jC,GACAwB,KAAA,OACA4Q,MAAA0kC,EAAA55C,EACAwwB,WAAAopB,EAAA16C,EAAA06C,EAAA9sC,KAGA,QAAAwtC,GAAAx3C,KACAs3C,IAAAt3C,GACAwB,KAAA,YACA41C,EAAA,MAEA,QAAAZ,KAIA,QAAAzB,KACAI,EAAA,EACA8B,EAAA97C,GAAAk5C,MAAAoB,GAAAgC,GACAF,EAAAv3C,GAEA,QAAAq1C,KACAh1B,EAAAhgB,GAAAq3C,EAAA,MAAAr3C,GAAAs3C,EAAA,MACAnC,EAAAL,GAAAh6C,GAAA8E,MAAAjB,SAAAA,GACAw4C,EAAAx3C,GAXA,GAAAy1C,GAAA53C,KAAAmB,EAAA7D,GAAA8E,MAAAjB,OAAAgB,EAAAC,EAAAkB,GAAAs0C,EAAA74C,WAAAu4C,EAAA,EAAA90B,EAAAllB,GAAAmN,OAAAzM,EAAA45C,IAAAp1C,GAAAq3C,EAAA3C,GAAA10C,GAAAs3C,EAAAtC,GAAAoC,EAAAZ,EAAA17C,GAAAk5C,MAAAoB,IAAAD,EAAAttC,EAAAutC,EACAmC,IAAAtwC,KAAAmuC,GACA4B,EAAAr3C,GAYA,QAAA42C,KAKA,QAAAiB,KACA,GAAApD,GAAAt5C,GAAAs5C,QAAAgB,EAKA,OAJAqC,GAAAhB,EAAA55C,EACAu3C,EAAAvkC,QAAA,SAAAuB,GACAA,EAAA9G,aAAAotC,KAAAA,EAAAtmC,EAAA9G,YAAAksC,EAAAplC,MAEAgjC,EAEA,QAAAuD,KACA,GAAAh5C,GAAA7D,GAAA8E,MAAAjB,MACA7D,IAAAmN,OAAAtJ,GAAAqB,GAAA43C,EAAAlD,GAAA10C,GAAA63C,EAAA7C,GACA8C,EAAA15C,KAAAO,EAEA,KAAA,GADAo5C,GAAAj9C,GAAA8E,MAAA4I,eACApJ,EAAA,EAAAC,EAAA04C,EAAAp+C,OAAA0F,EAAAD,IAAAA,EACAs4C,EAAAK,EAAA34C,GAAAkL,YAAA,IAEA,IAAA8pC,GAAAoD,IAAAhnC,EAAAS,KAAAT,KACA,IAAA,IAAA4jC,EAAAz6C,OAAA,CACA,GAAA,IAAA6W,EAAAwnC,EAAA,CACA,GAAAtmC,GAAA0iC,EAAA,EACAyC,GAAAzB,EAAA1jC,EAAAgmC,EAAAhmC,EAAApH,YAAAnQ,KAAA6a,MAAA7a,KAAAyX,IAAA6kC,EAAA55C,GAAA1C,KAAA4lC,KAAA,GACAx/B,IAEAy3C,EAAAxnC,MACA,IAAA4jC,EAAAz6C,OAAA,EAAA,CACA,GAAA+X,GAAA0iC,EAAA,GAAAruB,EAAAquB,EAAA,GAAAztB,EAAAjV,EAAA,GAAAqU,EAAA,GAAAa,EAAAlV,EAAA,GAAAqU,EAAA,EACAkyB,GAAAtxB,EAAAA,EAAAC,EAAAA,GAGA,QAAA8tB,KACA,GAAAv0B,GAAA+3B,EAAA93B,EAAA+3B,EAAA/D,EAAAt5C,GAAAs5C,QAAAgB,EACAmC,IAAAtwC,KAAAmuC,EACA,KAAA,GAAAh2C,GAAA,EAAAC,EAAA+0C,EAAAz6C,OAAA0F,EAAAD,IAAAA,EAAA+4C,EAAA,KAEA,GADA/3B,EAAAg0B,EAAAh1C,GACA+4C,EAAAT,EAAAt3B,EAAA9V,YAAA,CACA,GAAA4tC,EAAA,KACA/3B,GAAAC,EAAA83B,EAAAC,EAGA,GAAAA,EAAA,CACA,GAAAC,IAAAA,EAAAh4B,EAAA,GAAAD,EAAA,IAAAi4B,GAAAA,EAAAh4B,EAAA,GAAAD,EAAA,IAAAi4B,EAAAC,EAAAJ,GAAA99C,KAAAgT,KAAAirC,EAAAH,EACA93B,KAAAA,EAAA,GAAAC,EAAA,IAAA,GAAAD,EAAA,GAAAC,EAAA,IAAA,GACA83B,IAAAA,EAAA,GAAAC,EAAA,IAAA,GAAAD,EAAA,GAAAC,EAAA,IAAA,GACAzB,EAAA2B,EAAAZ,GAEAO,EAAA,KACApB,EAAAz2B,EAAA+3B,GACAhB,EAAAv3C,GAEA,QAAAq1C,KACA,GAAAl6C,GAAA8E,MAAAw0C,QAAAz6C,OAAA,CAEA,IAAA,GADAo+C,GAAAj9C,GAAA8E,MAAA4I,eACApJ,EAAA,EAAAC,EAAA04C,EAAAp+C,OAAA0F,EAAAD,IAAAA,QACAs4C,GAAAK,EAAA34C,GAAAkL,WAEA,KAAA,GAAAA,KAAAotC,GACA,WAAAF,KAGA18C,GAAAk3C,UAAA8F,GAAA93C,GAAAs4C,EAAA,MACAt4B,EAAAhgB,GAAAs0C,EAAA6B,GAAAn2C,GAAAu0C,EAAAgC,GACApB,IACAgC,EAAAx3C,GAlEA,GAAA83C,GAAArC,EAAA53C,KAAAmC,EAAAC,EAAAkB,GAAAs0C,EAAA74C,WAAAm7C,KAAAO,EAAA,EAAAK,EAAA,SAAAx9C,GAAA8E,MAAA4I,eAAA,GAAA8B,WAAAstC,EAAA,YAAAU,EAAAT,EAAA,WAAAS,EAAAR,KAAA93B,EAAAllB,GAAAmN,OAAAmtC,GAAAD,EAAAttC,EAAAutC,EACAuC,KACAX,EAAAr3C,GACAqgB,EAAAhgB,GAAAs0C,EAAA,MAAAt0C,GAAAu0C,EAAAoD,GAkEA,QAAAtB,KACA,GAAA12C,GAAAC,EAAAkB,GAAAtD,KAAAjB,UACAg8C,GAAA1nC,aAAA0nC,IAAAhB,GAAAtwC,KAAAzJ,MACAg7C,EAAAhC,EAAAO,EAAApqB,GAAA7xB,GAAAk5C,MAAAx2C,OAAAw5C,EAAAr3C,IACA44C,EAAAlwC,WAAA,WACAkwC,EAAA,KACApB,EAAAx3C,IACA,IACAY,IACAm2C,EAAAv8C,KAAAkT,IAAA,EAAA,KAAAorC,MAAAhC,EAAA55C,GACA+5C,EAAAG,EAAAyB,GACAtB,EAAAv3C,GAEA,QAAA22C,KACA,GAAA5kC,GAAA5W,GAAAk5C,MAAAx2C,MAAAX,EAAA1C,KAAAyX,IAAA6kC,EAAA55C,GAAA1C,KAAA4lC,GACA8W,GAAAr5C,KAAAkU,EAAA8kC,EAAA9kC,GAAA5W,GAAA8E,MAAA84C,SAAAv+C,KAAAwX,KAAA9U,GAAA,EAAA1C,KAAA6a,MAAAnY,GAAA,GA1QA,GAIA27C,GAAAzB,EAAApqB,EAAA4rB,EAAAP,EAAAt5B,EAAA2H,EAAA7H,EAAA8H,EAJAmwB,GACA16C,EAAA,EACA4N,EAAA,EACA9M,EAAA,GACAyB,GAAA,IAAA,KAAAq4C,EAAAgC,GAAAvM,EAAA,IAAA6K,EAAA,EAAA3C,EAAA,iBAAA+C,EAAA,iBAAAC,EAAA,eAAA/C,EAAA,kBAAA30C,EAAAiB,EAAAq1C,EAAA,YAAA,OAAA,UAwQA,OAvQAE,MACAA,GAAA,WAAAxI,KAAA6K,GAAA,WACA,OAAA39C,GAAA8E,MAAAg5C,QAAA99C,GAAA8E,MAAAi5C,UAAA,IAAA,IACA,SAAA,gBAAAjL,KAAA6K,GAAA,WACA,MAAA39C,IAAA8E,MAAAk5C,YACA,eAAAL,GAAA,WACA,OAAA39C,GAAA8E,MAAAm5C,QACA,wBAKA7C,EAAAt2C,MAAA,SAAA2M,GACAA,EAAAgmC,KAAA,WACA,GAAA5yC,GAAAC,EAAAkB,GAAAtD,KAAAjB,WAAAy8C,EAAAvC,CACAwC,IACAn+C,GAAAmN,OAAAzK,MAAA2uC,aAAAoG,KAAA,aAAA,WACAkE,EAAAj5C,KAAAs5C,YACA/6C,EAAA,EACA4N,EAAA,EACA9M,EAAA,GAEAm6C,EAAAr3C,KACAksC,MAAA,YAAA,WACA,GAAAllB,GAAAroB,EAAA,GAAAsoB,EAAAtoB,EAAA,GAAA4gB,EAAA63B,EAAAA,EAAA,GAAApwB,EAAA,EAAAxH,EAAA43B,EAAAA,EAAA,GAAAnwB,EAAA,EAAAxnB,EAAAtE,GAAA46C,kBAAAx2B,EAAAu3B,EAAA16C,GAAA06C,EAAA55C,GAAAsiB,EAAAs3B,EAAA9sC,GAAA8sC,EAAA55C,EAAA8pB,EAAA8vB,EAAA55C,KAAAqiB,EAAA85B,EAAAj9C,GAAAi9C,EAAAn8C,GAAAsiB,EAAA65B,EAAArvC,GAAAqvC,EAAAn8C,EAAA8pB,EAAAqyB,EAAAn8C,GACA,OAAA,UAAAuU,GACA,GAAAvR,GAAAT,EAAAgS,GAAAvU,EAAA8pB,EAAA9mB,EAAA,EACArC,MAAAs5C,UAAAL,GACA16C,EAAAmjB,EAAArf,EAAA,GAAAhD,EACA8M,EAAAwV,EAAAtf,EAAA,GAAAhD,EACAA,EAAAA,GAEAq6C,EAAAv3C,MAEA4yC,KAAA,iBAAA,WACA4E,EAAAx3C,KACA4yC,KAAA,WAAA,WACA4E,EAAAx3C,MAGAnC,KAAAs5C,UAAAL,EACAO,EAAAr3C,GACAu3C,EAAAv3C,GACAw3C,EAAAx3C,OAIAu2C,EAAA7oB,UAAA,SAAA5vB,GACA,MAAAlB,WAAA5C,QACA88C,GACA16C,GAAA0B,EAAA,GACAkM,GAAAlM,EAAA,GACAZ,EAAA45C,EAAA55C,GAEA4mC,IACAyS,IAPAO,EAAA16C,EAAA06C,EAAA9sC,IASAusC,EAAAnkC,MAAA,SAAAtU,GACA,MAAAlB,WAAA5C,QACA88C,GACA16C,EAAA06C,EAAA16C,EACA4N,EAAA8sC,EAAA9sC,EACA9M,GAAAY,GAEAgmC,IACAyS,GAPAO,EAAA55C,GASAq5C,EAAAS,YAAA,SAAAl5C,GACA,MAAAlB,WAAA5C,QACAg9C,EAAA,MAAAl5C,EAAAk7C,KAAAl7C,EAAA,IAAAA,EAAA,IACAy4C,GAFAS,GAIAT,EAAAvpB,OAAA,SAAAlvB,GACA,MAAAlB,WAAA5C,QACAgzB,EAAAlvB,KAAAA,EAAA,IAAAA,EAAA,IACAy4C,GAFAvpB,GAIAupB,EAAA53C,KAAA,SAAAb,GACA,MAAAlB,WAAA5C,QACA2E,EAAAb,KAAAA,EAAA,IAAAA,EAAA,IACAy4C,GAFA53C,GAIA43C,EAAA9J,SAAA,SAAA3uC,GACA,MAAAlB,WAAA5C,QACAyyC,GAAA3uC,EACAy4C,GAFA9J,GAIA8J,EAAAn6C,EAAA,SAAA+D,GACA,MAAAvD,WAAA5C,QACA0sB,EAAAvmB,EACA4e,EAAA5e,EAAAqkC,OACAsS,GACA16C,EAAA,EACA4N,EAAA,EACA9M,EAAA,GAEAq5C,GARA7vB,GAUA6vB,EAAAvsC,EAAA,SAAA7J,GACA,MAAAvD,WAAA5C,QACA2sB,EAAAxmB,EACA0e,EAAA1e,EAAAqkC,OACAsS,GACA16C,EAAA,EACA4N,EAAA,EACA9M,EAAA,GAEAq5C,GARA5vB,GAoKAxrB,GAAAsV,OAAA8lC,EAAAt2C,EAAA,MAEA,IAAA64C,IAAArC,GAAAuC,IAAA,EAAApnC,EAAAA,EACAzW,IAAA+S,MAAAxC,GAEAA,GAAAjO,UAAAsQ,SAAA,WACA,MAAAlQ,MAAA6O,MAAA,IAEAvR,GAAA8S,IAAAtC,EAIA,IAAA4tC,IAAA5tC,GAAAlO,UAAA,GAAAiO,GACA6tC,IAAAC,SAAA,SAAAt8C,GAEA,MADAA,GAAA1C,KAAAkT,IAAA,GAAA9Q,UAAA5C,OAAAkD,EAAA,GACA,GAAAyO,IAAA9N,KAAA+N,EAAA/N,KAAAkD,EAAAlD,KAAAqC,EAAAhD,IAEAq8C,GAAAE,OAAA,SAAAv8C,GAEA,MADAA,GAAA1C,KAAAkT,IAAA,GAAA9Q,UAAA5C,OAAAkD,EAAA,GACA,GAAAyO,IAAA9N,KAAA+N,EAAA/N,KAAAkD,EAAA7D,EAAAW,KAAAqC,IAEAq5C,GAAA7sC,IAAA,WACA,MAAAX,IAAAlO,KAAA+N,EAAA/N,KAAAkD,EAAAlD,KAAAqC,IAqBA/E,GAAA6/B,IAAA1uB,EAIA,IAAAotC,IAAAptC,GAAA7O,UAAA,GAAAiO,GACAguC,IAAAF,SAAA,SAAAt8C,GACA,MAAA,IAAAoP,IAAAzO,KAAA+N,EAAA/N,KAAAiG,EAAAtJ,KAAAwT,IAAA,IAAAnQ,KAAAqC,EAAAy5C,IAAA/8C,UAAA5C,OAAAkD,EAAA,MAEAw8C,GAAAD,OAAA,SAAAv8C,GACA,MAAA,IAAAoP,IAAAzO,KAAA+N,EAAA/N,KAAAiG,EAAAtJ,KAAAsT,IAAA,EAAAjQ,KAAAqC,EAAAy5C,IAAA/8C,UAAA5C,OAAAkD,EAAA,MAEAw8C,GAAAhtC,IAAA,WACA,MAAAG,IAAAhP,KAAA+N,EAAA/N,KAAAiG,EAAAjG,KAAAqC,GAAAwM,OAOAvR,GAAAugC,IAAAnvB,EAIA,IAAAotC,IAAA,GACAzsC,GAAA,OAAAC,GAAA,EAAAC,GAAA,QACAwsC,GAAArtC,GAAA9O,UAAA,GAAAiO,GACAkuC,IAAAJ,SAAA,SAAAt8C,GACA,MAAA,IAAAqP,IAAA/R,KAAAwT,IAAA,IAAAnQ,KAAAqC,EAAAy5C,IAAA/8C,UAAA5C,OAAAkD,EAAA,IAAAW,KAAA7B,EAAA6B,KAAA5B,IAEA29C,GAAAH,OAAA,SAAAv8C,GACA,MAAA,IAAAqP,IAAA/R,KAAAsT,IAAA,EAAAjQ,KAAAqC,EAAAy5C,IAAA/8C,UAAA5C,OAAAkD,EAAA,IAAAW,KAAA7B,EAAA6B,KAAA5B,IAEA29C,GAAAltC,IAAA,WACA,MAAAM,IAAAnP,KAAAqC,EAAArC,KAAA7B,EAAA6B,KAAA5B,IAqBAd,GAAAuR,IAAAL,EAUA,IAAAwtC,IAAAxtC,GAAA5O,UAAA,GAAAiO,GACAmuC,IAAAL,SAAA,SAAAt8C,GACAA,EAAA1C,KAAAkT,IAAA,GAAA9Q,UAAA5C,OAAAkD,EAAA,EACA,IAAAyP,GAAA9O,KAAA8O,EAAAC,EAAA/O,KAAA+O,EAAA3Q,EAAA4B,KAAA5B,EAAAwD,EAAA,EACA,OAAAkN,IAAAC,GAAA3Q,GACA0Q,GAAAlN,EAAAkN,IAAAA,EAAAlN,GACAmN,GAAAnN,EAAAmN,IAAAA,EAAAnN,GACAxD,GAAAwD,EAAAxD,IAAAA,EAAAwD,GACA,GAAA4M,IAAA7R,KAAAwT,IAAA,IAAArB,EAAAzP,GAAA1C,KAAAwT,IAAA,IAAApB,EAAA1P,GAAA1C,KAAAwT,IAAA,IAAA/R,EAAAiB,KAJA,GAAAmP,IAAA5M,EAAAA,EAAAA,IAMAo6C,GAAAJ,OAAA,SAAAv8C,GAEA,MADAA,GAAA1C,KAAAkT,IAAA,GAAA9Q,UAAA5C,OAAAkD,EAAA,GACA,GAAAmP,IAAAnP,EAAAW,KAAA8O,EAAAzP,EAAAW,KAAA+O,EAAA1P,EAAAW,KAAA5B,IAEA49C,GAAA5rC,IAAA,WACA,MAAAnC,IAAAjO,KAAA8O,EAAA9O,KAAA+O,EAAA/O,KAAA5B,IAEA49C,GAAA9rC,SAAA,WACA,MAAA,IAAAF,GAAAhQ,KAAA8O,GAAAkB,GAAAhQ,KAAA+O,GAAAiB,GAAAhQ,KAAA5B,GAmEA,IAAAqS,IAAAnT,GAAAwI,KACAm2C,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACApyB,IAAA,SACAqyB,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAEA10C,IAAA4B,QAAA,SAAA5S,EAAAI,GACA4Q,GAAA3N,IAAArD,EAAAqQ,GAAAjQ,MAOAvC,GAAA8nD,QAAAx0C,GACAtT,GAAAiU,IAAAV,GAAA5P,GA4FA3D,GAAA+nD,IAAA,SAAAC,EAAAt0C,GAEA,QAAAq0C,GAAAt0C,EAAAw0C,EAAAl9C,GACAtJ,UAAA5C,OAAA,IAAAkM,EAAAk9C,EAAAA,EAAA,KACA,IAAAh0C,GAAAN,GAAAF,EAAAC,EAAA,MAAAu0C,EAAAz0C,EAAA00C,EAAAD,GAAAl9C,EAIA,OAHAkJ,GAAAg0C,IAAA,SAAAtlD,GACA,MAAAlB,WAAA5C,OAAAoV,EAAAT,SAAA,OAAAy0C,EAAAtlD,GAAA6Q,EAAA00C,EAAAvlD,IAAAslD,GAEAh0C,EAEA,QAAAT,GAAAO,GACA,MAAAg0C,GAAA7nD,MAAA6T,EAAAyB,cAEA,QAAA0yC,GAAAv5C,GACA,MAAA,UAAAoF,GACA,MAAAg0C,GAAA7nD,MAAA6T,EAAAyB,aAAA7G,IA+EA,QAAAw5C,GAAAF,GACA,MAAAA,GAAAz/C,IAAA4/C,GAAA1oD,KAAAsoD,GAEA,QAAAI,GAAAtQ,GACA,MAAAuQ,GAAAr/C,KAAA8uC,GAAA,IAAAA,EAAAh5C,QAAA,MAAA,MAAA,IAAAg5C,EAjGA,GAAAuQ,GAAA,GAAApgD,QAAA,KAAA+/C,EAAA,OAAAM,EAAAN,EAAAxtC,WAAA,EAmGA,OAlFAutC,GAAA7nD,MAAA,SAAA43C,EAAAnpC,GACA,GAAAhC,EACA,OAAAo7C,GAAAQ,UAAAzQ,EAAA,SAAAmQ,EAAA3jD,GACA,GAAAqI,EAAA,MAAAA,GAAAs7C,EAAA3jD,EAAA,EACA,IAAAzD,GAAA,GAAA2nD,UAAA,IAAA,WAAAP,EAAAz/C,IAAA,SAAArE,EAAAG,GACA,MAAAsuC,MAAA6V,UAAAtkD,GAAA,OAAAG,EAAA,MACA5E,KAAA,KAAA,IACAiN,GAAAgC,EAAA,SAAAs5C,EAAA3jD,GACA,MAAAqK,GAAA9N,EAAAonD,GAAA3jD,IACAzD,KAGAknD,EAAAQ,UAAA,SAAAzQ,EAAAnpC,GAEA,QAAA+5C,KACA,GAAAxqC,GAAAoZ,EAAA,MAAAqxB,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CACA,IAAA79C,GAAAkT,CACA,IAAA,KAAA45B,EAAAt9B,WAAAxP,GAAA,CAEA,IADA,GAAA1G,GAAA0G,EACA1G,IAAAgzB,GACA,GAAA,KAAAwgB,EAAAt9B,WAAAlW,GAAA,CACA,GAAA,KAAAwzC,EAAAt9B,WAAAlW,EAAA,GAAA,QACAA,EAGA4Z,EAAA5Z,EAAA,CACA,IAAAqE,GAAAmvC,EAAAt9B,WAAAlW,EAAA,EAOA,OANA,MAAAqE,GACAigD,GAAA,EACA,KAAA9Q,EAAAt9B,WAAAlW,EAAA,MAAA4Z,GACA,KAAAvV,IACAigD,GAAA,GAEA9Q,EAAA70C,MAAA+H,EAAA,EAAA1G,GAAAxF,QAAA,MAAA,KAEA,KAAAw4B,EAAApZ,GAAA,CACA,GAAAvV,GAAAmvC,EAAAt9B,WAAA0D,KAAAnc,EAAA,CACA,IAAA,KAAA4G,EAAAigD,GAAA,MAAA,IAAA,KAAAjgD,EACAigD,GAAA,EACA,KAAA9Q,EAAAt9B,WAAA0D,OAAAA,IAAAnc,OACA,IAAA4G,IAAA2/C,EAAA,QACA,OAAAxQ,GAAA70C,MAAA+H,EAAAkT,EAAAnc,GAEA,MAAA+1C,GAAA70C,MAAA+H,GAEA,IAjCA,GAAAsL,GAAAsyC,EAAAC,KAAAF,KAAAG,KAAAxxB,EAAAwgB,EAAAj5C,OAAAqf,EAAA,EAAA3Z,EAAA,GAiCA+R,EAAAoyC,OAAAC,GAAA,CAEA,IADA,GAAA9nD,MACAyV,IAAAuyC,GAAAvyC,IAAAqyC,GACA9nD,EAAAyC,KAAAgT,GACAA,EAAAoyC,GAEA/5C,IAAA,OAAA9N,EAAA8N,EAAA9N,EAAA0D,OACAukD,EAAAxlD,KAAAzC,GAEA,MAAAioD,IAEAf,EAAAhoD,OAAA,SAAA+oD,GACA,GAAAtpD,MAAAg2C,QAAAsT,EAAA,IAAA,MAAAf,GAAAgB,WAAAD,EACA,IAAAE,GAAA,GAAAtlD,GAAAulD,IAQA,OAPAH,GAAA/zC,QAAA,SAAAkzC,GACA,IAAA,GAAAiB,KAAAjB,GACAe,EAAApe,IAAAse,IACAD,EAAA3lD,KAAA0lD,EAAAngD,IAAAqgD,OAIAD,EAAAzgD,IAAA4/C,GAAA1oD,KAAAsoD,IAAA1iD,OAAAwjD,EAAAtgD,IAAA,SAAAy/C,GACA,MAAAgB,GAAAzgD,IAAA,SAAA0gD,GACA,MAAAd,GAAAH,EAAAiB,MACAxpD,KAAAsoD,MACAtoD,KAAA,OAEAqoD,EAAAgB,WAAA,SAAAD,GACA,MAAAA,GAAAtgD,IAAA2/C,GAAAzoD,KAAA,OAQAqoD,GAEA/nD,GAAAmpD,IAAAnpD,GAAA+nD,IAAA,IAAA,YACA/nD,GAAAopD,IAAAppD,GAAA+nD,IAAA,IAAA,4BACA,IAAA1xC,IAAAK,GAAAT,GAAAD,GAAAI,GAAAF,GAAAxT,KAAAuB,EAAAvB,KAAA,2BAAA,SAAAqI,GACAwC,WAAAxC,EAAA,IAEA/K,IAAAwxC,MAAA,SAAAzmC,EAAA6K,EAAAyzC,GACA,GAAA9kD,GAAA9C,UAAA5C,MACA,GAAA0F,IAAAqR,EAAA,GACA,EAAArR,IAAA8kD,EAAAlzC,KAAAT,MACA,IAAAzV,GAAAopD,EAAAzzC,EAAA47B,GACA7oC,EAAAoC,EACAuL,EAAArW,EACA0O,GAAA,EACApK,EAAA,KAEAmS,IAAAA,GAAAnS,EAAAitC,EAAAn7B,GAAAm7B,EACA96B,GAAA86B,EACAv7B,KACAD,GAAAD,aAAAC,IACAC,GAAA,EACAC,GAAAT,MAgBAzV,GAAAwxC,MAAA8X,MAAA,WACA3zC,KACAE,MA2BA7V,GAAAiR,MAAA,SAAAhQ,EAAAsD,GACA,MAAAA,GAAAlF,KAAA4R,MAAAhQ,GAAAsD,EAAAlF,KAAAkT,IAAA,GAAAhO,KAAAA,EAAAlF,KAAA4R,MAAAhQ,GAEA,IAAAsoD,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA/gD,IAAAwO,GACAhX,IAAAiZ,aAAA,SAAA1W,EAAAgW,GACA,GAAAjU,GAAA,CAOA,OANA/B,KACA,EAAAA,IAAAA,GAAA,IACAgW,IAAAhW,EAAAvC,GAAAiR,MAAA1O,EAAAoU,GAAApU,EAAAgW,KACAjU,EAAA,EAAAjF,KAAA6a,MAAA,MAAA7a,KAAAyX,IAAAvU,GAAAlD,KAAA0X,MACAzS,EAAAjF,KAAAsT,IAAA,IAAAtT,KAAAwT,IAAA,GAAA,EAAAxT,KAAA6a,OAAA5V,EAAA,GAAA,MAEAilD,GAAA,EAAAjlD,EAAA,GAwGA,IAAA4T,IAAA,yEACAS,GAAA3Y,GAAAwI,KACA1H,EAAA,SAAAG,GACA,MAAAA,GAAA2R,SAAA,IAEAjK,EAAA,SAAA1H,GACA,MAAAtC,QAAA6qD,aAAAvoD,IAEA0L,EAAA,SAAA1L,GACA,MAAAA,GAAA2R,SAAA,IAEA3R,EAAA,SAAAA,GACA,MAAAA,GAAA2R,SAAA,KAEA2J,EAAA,SAAAtb,GACA,MAAAA,GAAA2R,SAAA,IAAAvO,eAEAoN,EAAA,SAAAxQ,EAAA2V,GACA,MAAA3V,GAAAwoD,YAAA7yC,IAEA/Q,EAAA,SAAA5E,EAAA2V,GACA,MAAA3V,GAAAyoD,cAAA9yC,IAEAjI,EAAA,SAAA1N,EAAA2V,GACA,MAAA3V,GAAArC,QAAAgY,IAEApF,EAAA,SAAAvQ,EAAA2V,GACA,OAAA3V,EAAAjB,GAAAiR,MAAAhQ,EAAA0V,GAAA1V,EAAA2V,KAAAhY,QAAAS,KAAAsT,IAAA,EAAAtT,KAAAwT,IAAA,GAAA8D,GAAA1V,GAAA,EAAA,OAAA2V,SAMAuH,GAAAne,GAAAC,QAAA2Z,GAAAzD,IAIAkD,IAAA/W,WACA0b,QAAA,WACA,MAAAtb,MAAAC,EAAAgnD,cAEAvuC,OAAA,WACA,MAAA1Y,MAAAC,EAAAinD,aAEAlrC,YAAA,WACA,MAAAhc,MAAAC,EAAAknD,kBAEA5rC,SAAA,WACA,MAAAvb,MAAAC,EAAAmnD,eAEAzrC,gBAAA,WACA,MAAA3b,MAAAC,EAAAonD,sBAEAzrC,WAAA,WACA,MAAA5b,MAAAC,EAAAqnD,iBAEAnsC,SAAA,WACA,MAAAnb,MAAAC,EAAAsnD,eAEA1rC,WAAA,WACA,MAAA7b,MAAAC,EAAAunD,iBAEAC,QAAA,WACA,MAAAznD,MAAAC,EAAAwnD,WAEApqC,kBAAA,WACA,MAAA,IAEAqqC,QAAA,WACA,MAAA1nD,MAAAC,EAAAynD,WAEAC,QAAA,WACAC,GAAAC,WAAAvmD,MAAAtB,KAAAC,EAAAlB,YAEA+oD,OAAA,WACAF,GAAAG,UAAAzmD,MAAAtB,KAAAC,EAAAlB,YAEAyZ,YAAA,WACAovC,GAAAI,eAAA1mD,MAAAtB,KAAAC,EAAAlB,YAEA6Z,SAAA,WACAgvC,GAAAK,YAAA3mD,MAAAtB,KAAAC,EAAAlB,YAEAmpD,gBAAA,WACAN,GAAAO,mBAAA7mD,MAAAtB,KAAAC,EAAAlB,YAEAqpD,WAAA,WACAR,GAAAS,cAAA/mD,MAAAtB,KAAAC,EAAAlB,YAEAupD,SAAA,WACAV,GAAAW,YAAAjnD,MAAAtB,KAAAC,EAAAlB,YAEAypD,WAAA,WACAZ,GAAAa,cAAAnnD,MAAAtB,KAAAC,EAAAlB,YAEA2pD,QAAA,WACAd,GAAAc,QAAApnD,MAAAtB,KAAAC,EAAAlB,YAGA,IAAA6oD,IAAAn0C,KAAA7T,SA6DA6b,IAAAk0B,KAAA94B,GAAA,SAAAnZ,GAGA,MAFAA,GAAA+d,GAAAktC,IAAAjrD,GACAA,EAAA4qD,SAAA,EAAA,GACA5qD,GACA,SAAAA,EAAAuZ,GACAvZ,EAAA8a,YAAA9a,EAAAse,cAAA/E,IACA,SAAAvZ,GACA,MAAAA,GAAAse,gBAEAP,GAAAmtC,MAAAntC,GAAAk0B,KAAAx4B,MACAsE,GAAAmtC,MAAArxC,IAAAkE,GAAAk0B,KAAAp4B,IAAAJ,MACAsE,GAAAktC,IAAA9xC,GAAA,SAAAnZ,GACA,GAAAirD,GAAA,GAAAzxC,IAAA,IAAA,EAEA,OADAyxC,GAAAnwC,YAAA9a,EAAAse,cAAAte,EAAAyd,WAAAzd,EAAA4d,WACAqtC,GACA,SAAAjrD,EAAAuZ,GACAvZ,EAAAiqD,QAAAjqD,EAAA4d,UAAArE,IACA,SAAAvZ,GACA,MAAAA,GAAA4d,UAAA,IAEAG,GAAAlB,KAAAkB,GAAAktC,IAAAxxC,MACAsE,GAAAlB,KAAAhD,IAAAkE,GAAAktC,IAAApxC,IAAAJ,MACAsE,GAAAC,UAAA,SAAAhe,GACA,GAAAiyC,GAAAl0B,GAAAk0B,KAAAjyC,EACA,OAAAf,MAAA6a,OAAA9Z,EAAAiyC,EAAA,KAAAjyC,EAAA2f,oBAAAsyB,EAAAtyB,sBAAA,SAEA,SAAA,SAAA,UAAA,YAAA,WAAA,SAAA,YAAAhL,QAAA,SAAAs2C,EAAA/mD,GACAA,EAAA,EAAAA,CACA,IAAAkuC,GAAAr0B,GAAAktC,GAAA9xC,GAAA,SAAAnZ,GAEA,OADAA,EAAA+d,GAAAktC,IAAAjrD,IAAAiqD,QAAAjqD,EAAA4d,WAAA5d,EAAAgb,SAAA9W,GAAA,GACAlE,GACA,SAAAA,EAAAuZ,GACAvZ,EAAAiqD,QAAAjqD,EAAA4d,UAAA,EAAA3e,KAAA6a,MAAAP,KACA,SAAAvZ,GACA,GAAAirD,GAAAltC,GAAAk0B,KAAAjyC,GAAAgb,QACA,OAAA/b,MAAA6a,OAAAiE,GAAAC,UAAAhe,IAAAirD,EAAA/mD,GAAA,GAAA,IAAA+mD,IAAA/mD,IAEA6Z,IAAAktC,EAAA,KAAA7Y,EAAA34B,MACAsE,GAAAktC,EAAA,KAAApxC,IAAAu4B,EAAAv4B,IAAAJ,MACAsE,GAAAktC,EAAA,UAAA,SAAAjrD,GACA,GAAAirD,GAAAltC,GAAAk0B,KAAAjyC,GAAAgb,QACA,OAAA/b,MAAA6a,OAAAiE,GAAAC,UAAAhe,IAAAirD,EAAA/mD,GAAA,GAAA,MAGA6Z,GAAAotC,KAAAptC,GAAAqtC,OACArtC,GAAAstC,MAAAttC,GAAAqtC,OAAA3xC,MACAsE,GAAAstC,MAAAxxC,IAAAkE,GAAAqtC,OAAAvxC,IAAAJ,MACAsE,GAAAutC,WAAAvtC,GAAAK,YAwNA,IAAA/D,KACAkxC,IAAA,GACAhpD,EAAA,IACAipD,EAAA,KACA/rC,GAAA,UAAAM,GAAA;;AAkGAngB,GAAAoX,OAAA,SAAAA,GACA,OACAy0C,aAAA10C,GAAAC,GACA00C,WAAA1xC,GAAAhD,IAGA,IAAA20C,IAAA/rD,GAAAoX,QACAE,QAAA,IACAE,UAAA,IACAE,UAAA,GACAE,UAAA,IAAA,IACA+E,SAAA,iBACAvc,KAAA,WACAH,KAAA,WACA8c,SAAA,KAAA,MACAE,MAAA,SAAA,SAAA,UAAA,YAAA,WAAA,SAAA,YACAE,WAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAE,QAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YACAE,aAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,QAEAvd,IAAAD,OAAAgsD,GAAAF,aACA7rD,GAAAgsD,OAEA3rC,GAAA/d,WACAsD,EAAA,EACA0Q,EAAA,EACAzN,IAAA,SAAAgG,GACAyR,GAAAzR,EAAAnM,KAAA4T,EAAA21C,IACA3rC,GAAA2rC,GAAArmD,EAAAlD,KAAAkD,EAAAlD,MACAA,KAAAkD,EAAAlD,KAAA4T,GAAA21C,GAAA31C,EAAA5T,KAAAkD,EAAAqmD,GAAA31C,GAEA0S,MAAA,WACAtmB,KAAAkD,EAAAlD,KAAA4T,EAAA,GAEA8zC,QAAA,WACA,MAAA1nD,MAAAkD,GAGA,IAAAqmD,IAAA,GAAA5rC,GAKArgB,IAAAgsD,IAAAt9B,OAAA,SAAAxqB,EAAAkB,GACAlB,GAAAgoD,GAAAtrC,eAAA1c,EAAAmC,MACA6lD,GAAAhoD,EAAAmC,MAAAnC,EAAAkB,GAEAqb,GAAAvc,EAAAkB,GAQA,IAAA8mD,KACAC,QAAA,SAAAC,EAAAhnD,GACAqb,GAAA2rC,EAAA1rC,SAAAtb,IAEAinD,kBAAA,SAAAnoD,EAAAkB,GAEA,IADA,GAAAknD,GAAApoD,EAAAooD,SAAAhoD,EAAA,GAAAC,EAAA+nD,EAAAztD,SACAyF,EAAAC,GAAAkc,GAAA6rC,EAAAhoD,GAAAoc,SAAAtb,KAGAub,IACA4rC,OAAA,SAAAroD,EAAAkB,GACAA,EAAAqiB,UAEA+kC,MAAA,SAAAtoD,EAAAkB,GACAlB,EAAAA,EAAA4c,YACA1b,EAAA0I,MAAA5J,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAuoD,WAAA,SAAAvoD,EAAAkB,GAEA,IADA,GAAA0b,GAAA5c,EAAA4c,YAAAxc,EAAA,GAAAC,EAAAuc,EAAAjiB,SACAyF,EAAAC,GAAAL,EAAA4c,EAAAxc,GAAAc,EAAA0I,MAAA5J,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAwoD,WAAA,SAAAxoD,EAAAkB,GACAyb,GAAA3c,EAAA4c,YAAA1b,EAAA,IAEAunD,gBAAA,SAAAzoD,EAAAkB,GAEA,IADA,GAAA0b,GAAA5c,EAAA4c,YAAAxc,EAAA,GAAAC,EAAAuc,EAAAjiB,SACAyF,EAAAC,GAAAsc,GAAAC,EAAAxc,GAAAc,EAAA,IAEAwnD,QAAA,SAAA1oD,EAAAkB,GACA+b,GAAAjd,EAAA4c,YAAA1b,IAEAynD,aAAA,SAAA3oD,EAAAkB,GAEA,IADA,GAAA0b,GAAA5c,EAAA4c,YAAAxc,EAAA,GAAAC,EAAAuc,EAAAjiB,SACAyF,EAAAC,GAAA4c,GAAAL,EAAAxc,GAAAc,IAEA0nD,mBAAA,SAAA5oD,EAAAkB,GAEA,IADA,GAAA2nD,GAAA7oD,EAAA6oD,WAAAzoD,EAAA,GAAAC,EAAAwoD,EAAAluD,SACAyF,EAAAC,GAAAkc,GAAAssC,EAAAzoD,GAAAc,IAeApF,IAAAgsD,IAAAxc,KAAA,SAAAtrC,GAGA,MAFA8oD,IAAA,EACAhtD,GAAAgsD,IAAAt9B,OAAAxqB,EAAAoe,IACA0qC,GAEA,IAAAA,IAAA7qC,GAAA,GAAA9B,IACAiC,IACAmF,OAAA,WACAulC,IAAA,EAAAp9C,IAEA9B,MAAApJ,EACAuc,UAAAvc,EACAwc,QAAAxc,EACA0c,aAAA,WACAe,GAAA6G,QACA1G,GAAArB,UAAAK,IAEAD,WAAA,WACA,GAAAmuB,GAAA,EAAArtB,EACA6qC,KAAA,EAAAxd,EAAA,EAAA5/B,GAAA4/B,EAAAA,EACAltB,GAAArB,UAAAqB,GAAApB,QAAAoB,GAAAxU,MAAApJ,GAmDA1E,IAAAgsD,IAAAiB,OAAA,WAsBA,QAAAn/C,GAAA0T,EAAAC,GACAyrC,EAAA5pD,KAAAuW,GAAA8H,EAAAH,EAAAwG,EAAAxG,IACAsG,EAAArG,IAAAqG,EAAArG,GACAA,EAAAwG,IAAAA,EAAAxG,GAEA,QAAA8K,GAAA/K,EAAAC,GACA,GAAA7K,GAAA2L,IAAAf,EAAA5P,GAAA6P,EAAA7P,IACA,IAAAyT,EAAA,CACA,GAAA8nC,GAAAzqC,GAAA2C,EAAAzO,GAAAw2C,GAAAD,EAAA,IAAAA,EAAA,GAAA,GAAAE,EAAA3qC,GAAA0qC,EAAAD,EACArqC,IAAAuqC,GACAA,EAAAtqC,GAAAsqC,EACA,IAAA3rC,GAAAF,EAAA8rC,EAAA1nD,EAAA8b,EAAA,EAAA,EAAA,GAAA6rC,EAAAF,EAAA,GAAAj7C,GAAAxM,EAAAsjB,EAAA5pB,GAAAoiB,GAAA,GACA,IAAAwH,GAAAqkC,EAAA3nD,EAAA0nD,GAAA1nD,EAAA4b,EAAA+rC,GAAA,CACA,GAAAC,GAAAH,EAAA,GAAAj7C,EACAo7C,GAAAvlC,IAAAA,EAAAulC,OACA,IAAAD,GAAAA,EAAA,KAAA,IAAA,IAAArkC,GAAAqkC,EAAA3nD,EAAA0nD,GAAA1nD,EAAA4b,EAAA+rC,GAAA,CACA,GAAAC,IAAAH,EAAA,GAAAj7C,EACA0V,GAAA0lC,IAAA1lC,EAAA0lC,OAEA1lC,GAAArG,IAAAqG,EAAArG,GACAA,EAAAwG,IAAAA,EAAAxG,EAEAyH,GACAokC,EAAA9rC,EACA4R,EAAAzR,EAAAH,GAAA4R,EAAAzR,EAAAqG,KAAAA,EAAAxG,GAEA4R,EAAA5R,EAAAwG,GAAAoL,EAAAzR,EAAAqG,KAAArG,EAAAH,GAGAwG,GAAArG,GACAA,EAAAH,IAAAG,EAAAH,GACAA,EAAAwG,IAAAA,EAAAxG,IAEAA,EAAA8rC,EACAl6B,EAAAzR,EAAAH,GAAA4R,EAAAzR,EAAAqG,KAAAA,EAAAxG,GAEA4R,EAAA5R,EAAAwG,GAAAoL,EAAAzR,EAAAqG,KAAArG,EAAAH,OAKA1T,GAAA0T,EAAAC,EAEA4D,GAAAzO,EAAA02C,EAAA9rC,EAEA,QAAAP,KACA0kB,EAAA73B,MAAAye,EAEA,QAAArL,KACArH,EAAA,GAAA8H,EAAA9H,EAAA,GAAAmO,EACA2d,EAAA73B,MAAAA,EACAuX,EAAA,KAEA,QAAA6K,GAAA1O,EAAAC,GACA,GAAA4D,EAAA,CACA,GAAA3D,GAAAF,EAAA8rC,CACAG,IAAAnuD,GAAAoiB,GAAA,IAAAA,GAAAA,EAAA,EAAA,IAAA,MAAAA,MACAgsC,GAAAlsC,EAAAmsC,EAAAlsC,CACAa,IAAAxU,MAAA0T,EAAAC,GACA8K,EAAA/K,EAAAC,GAEA,QAAAkF,KACArE,GAAArB,YAEA,QAAA2F,KACAsJ,EAAAw9B,EAAAC,GACArrC,GAAApB,UACA5hB,GAAAmuD,GAAAvqC,KAAAvB,IAAAqG,EAAA,MACAnO,EAAA,GAAA8H,EAAA9H,EAAA,GAAAmO,EACA3C,EAAA,KAEA,QAAA+N,GAAAzR,EAAAqG,GACA,OAAAA,GAAArG,GAAA,EAAAqG,EAAA,IAAAA,EAEA,QAAA4lC,GAAA/sD,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAEA,QAAA+sD,GAAA5sD,EAAA4Y,GACA,MAAAA,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAA5Y,GAAAA,GAAA4Y,EAAA,GAAA5Y,EAAA4Y,EAAA,IAAAA,EAAA,GAAA5Y,EAnGA,GAAA0gB,GAAAmG,EAAAE,EAAAC,EAAAqlC,EAAAI,EAAAC,EAAAtoC,EAAAooC,EAAAP,EAAArzC,EACA8rB,GACA73B,MAAAA,EACAmT,UAAAA,EACAC,QAAAA,EACAE,aAAA,WACAukB,EAAA73B,MAAAoiB,EACAyV,EAAA1kB,UAAA0F,EACAgf,EAAAzkB,QAAA0F,EACA6mC,EAAA,EACAnrC,GAAAlB,gBAEAC,WAAA,WACAiB,GAAAjB,aACAskB,EAAA73B,MAAAA,EACA63B,EAAA1kB,UAAAA,EACA0kB,EAAAzkB,QAAAA,EACA,EAAAiB,IAAAR,IAAAqG,EAAA,KAAAF,IAAAG,EAAA,KAAAwlC,EAAAvqC,GAAA+E,EAAA,IAAA/E,GAAAuqC,IAAA3lC,EAAA,KACAjO,EAAA,GAAA8H,EAAA9H,EAAA,GAAAmO,GAmFA,OAAA,UAAAokC,GACAnkC,EAAAD,IAAArG,EAAAmG,EAAArR,EAAAA,GACAy2C,KACAltD,GAAAgsD,IAAAt9B,OAAA09B,EAAAzmB,EACA,IAAAphC,GAAA2oD,EAAAruD,MACA,IAAA0F,EAAA,CACA2oD,EAAA1nC,KAAAooC,EACA,KAAA,GAAA9sD,GAAAwD,EAAA,EAAAzD,EAAAqsD,EAAA,GAAA5X,GAAAz0C,GAAA0D,EAAAD,IAAAA,EACAxD,EAAAosD,EAAA5oD,GACAupD,EAAA/sD,EAAA,GAAAD,IAAAgtD,EAAA/sD,EAAA,GAAAD,IACAuyB,EAAAvyB,EAAA,GAAAC,EAAA,IAAAsyB,EAAAvyB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACAsyB,EAAAtyB,EAAA,GAAAD,EAAA,IAAAuyB,EAAAvyB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEAw0C,EAAAhyC,KAAAzC,EAAAC,EAIA,KAAA,GADA4gB,GACA5gB,EADAgtD,IAAAr3C,EAAAA,GACAlS,EAAA+wC,EAAAz2C,OAAA,EAAAyF,EAAA,EAAAzD,EAAAy0C,EAAA/wC,GAAAA,GAAAD,EAAAzD,EAAAC,IAAAwD,EACAxD,EAAAw0C,EAAAhxC,IACAod,EAAA0R,EAAAvyB,EAAA,GAAAC,EAAA,KAAAgtD,IAAAA,EAAApsC,EAAAC,EAAA7gB,EAAA,GAAAknB,EAAAnnB,EAAA,IAIA,MADAqsD,GAAArzC,EAAA,KACA8H,IAAAlL,EAAAA,GAAAqR,IAAArR,EAAAA,IAAA1V,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAAA,MAAA4gB,EAAAmG,IAAAE,EAAAC,QAGAjoB,GAAAgsD,IAAA+B,SAAA,SAAA7pD,GACAmf,GAAAQ,GAAAP,GAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GAAA,EACAzkB,GAAAgsD,IAAAt9B,OAAAxqB,EAAA+f,GACA,IAAAhjB,GAAAsjB,GAAA1V,EAAA2V,GAAAxf,EAAAyf,GAAAxZ,EAAAhK,EAAAA,EAAA4N,EAAAA,EAAA7J,EAAAA,CACA,OAAAu1B,IAAAtvB,IACAhK,EAAA6iB,GAAAjV,EAAAkV,GAAA/e,EAAAgf,GACAd,GAAAW,KAAA5iB,EAAAqiB,GAAAzU,EAAA0U,GAAAve,EAAAwe,IACAvY,EAAAhK,EAAAA,EAAA4N,EAAAA,EAAA7J,EAAAA,EACAu1B,GAAAtvB,IAAAlK,EAAAA,EAAAA,EAAAA,IAEA1B,KAAA8S,MAAAtD,EAAA5N,GAAAmR,GAAAtC,GAAA9K,EAAA3F,KAAAgT,KAAApH,IAAAmH,IAEA,IAAAiR,IAAAQ,GAAAP,GAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GACAR,IACAwD,OAAA/iB,EACAoJ,MAAAqV,GACAlC,UAAAwC,GACAvC,QAAAgD,GACA9C,aAAA,WACA6C,GAAAhD,UAAAkD,IAEA9C,WAAA,WACA4C,GAAAhD,UAAAwC,KAqRAyO,GAAAjM,GAAApB,GAAAgD,GAAAU,KAAA3Y,IAAAA,GAAA,IAsPAod,GAAA,GACAhtB,IAAAgsD,IAAA35B,WAAA,WACA,GAAAzO,GAAAF,EAAA6H,EAAAC,EAAAkD,EAAAvJ,EAAAkN,GACA3D,OAAA,SAAA4D,GAIA,MAHA5D,KAAAA,EAAAqD,OAAA,GACArD,EAAAvJ,EAAAmN,GACA5D,EAAAqD,OAAA,EACArD,GAEA6K,OAAA,SAAA52B,GACA,MAAAlB,WAAA5C,QACAsmB,EAAA4G,GAAAnI,GAAAjhB,EAAA,GAAA,GAAA+gB,GAAA/gB,EAAA,GAAA,GAAA4oB,GAAA5oB,EAAA,GAAA,GAAA6oB,GAAA7oB,EAAA,GAAA,IACA+rB,IAAAA,EAAAqD,OAAA,EAAArD,EAAA,MACA2D,KAHAzO,EAAAF,IAAA6H,EAAAC,KAMA,OAAA6G,GAAAkH,SAAA,EAAA,IAAA,IAAA,SA4JAv5B,GAAAgsD,IAAAgC,eAAA,WACA,MAAA7gC,IAAAI,MACA0gC,IAAA1gC,GACAvtB,GAAAgsD,IAAAkC,OAAA,WACA,MAAAluD,IAAAgsD,IAAAgC,iBAAA3nC,QAAA,GAAA,IAAAwL,SAAA,GAAA,OAAAvE,WAAA,KAAA,OAAArW,MAAA,OAEAjX,GAAAgsD,IAAAmC,UAAA,WASA,QAAAA,GAAArtC,GACA,GAAA7f,GAAA6f,EAAA,GAAAjS,EAAAiS,EAAA,EAGA,OAFAhT,GAAA,KACAsgD,EAAAntD,EAAA4N,GAAAf,IAAAugD,EAAAptD,EAAA4N,GAAAf,IAAAwgD,EAAArtD,EAAA4N,GACAf,EAZA,GAGAA,GAIAsgD,EAAAC,EAAAC,EAPAC,EAAAvuD,GAAAgsD,IAAAkC,SACAM,EAAAxuD,GAAAgsD,IAAAgC,iBAAA3nC,QAAA,IAAA,IAAAwL,QAAA,GAAA,OAAAvE,WAAA,GAAA,KACAmhC,EAAAzuD,GAAAgsD,IAAAgC,iBAAA3nC,QAAA,IAAA,IAAAwL,QAAA,GAAA,OAAAvE,WAAA,EAAA,KACAohC,GACA5gD,MAAA,SAAA7M,EAAA4N,GACAf,GAAA7M,EAAA4N,IAsEA,OA7DAs/C,GAAAvpC,OAAA,SAAA9D,GACA,GAAA/e,GAAAwsD,EAAAt3C,QAAAX,EAAAi4C,EAAAh8B,YAAAtxB,GAAA6f,EAAA,GAAAxK,EAAA,IAAAvU,EAAA8M,GAAAiS,EAAA,GAAAxK,EAAA,IAAAvU,CACA,QAAA8M,GAAA,KAAA,KAAAA,GAAA5N,IAAA,OAAA,KAAAA,EAAAutD,EAAA3/C,GAAA,MAAA,KAAAA,GAAA5N,IAAA,OAAA,KAAAA,EAAAwtD,EAAAF,GAAA3pC,OAAA9D,IAEAqtC,EAAAz/B,OAAA,SAAAA,GACA,GAAAigC,GAAAJ,EAAA7/B,OAAAA,GAAAkgC,EAAAJ,EAAA9/B,OAAAA,GAAAmgC,EAAAJ,EAAA//B,OAAAA,EACA,QACA5gB,MAAA,SAAA7M,EAAA4N,GACA8/C,EAAA7gD,MAAA7M,EAAA4N,GACA+/C,EAAA9gD,MAAA7M,EAAA4N,GACAggD,EAAA/gD,MAAA7M,EAAA4N,IAEA4Y,OAAA,WACAknC,EAAAlnC,SACAmnC,EAAAnnC,SACAonC,EAAApnC,UAEAxG,UAAA,WACA0tC,EAAA1tC,YACA2tC,EAAA3tC,YACA4tC,EAAA5tC,aAEAC,QAAA,WACAytC,EAAAztC,UACA0tC,EAAA1tC,UACA2tC,EAAA3tC,WAEAE,aAAA,WACAutC,EAAAvtC,eACAwtC,EAAAxtC,eACAytC,EAAAztC,gBAEAC,WAAA,WACAstC,EAAAttC,aACAutC,EAAAvtC,aACAwtC,EAAAxtC,gBAIA8sC,EAAA51C,UAAA,SAAA5V,GACA,MAAAlB,WAAA5C,QACA0vD,EAAAh2C,UAAA5V,GACA6rD,EAAAj2C,UAAA5V,GACA8rD,EAAAl2C,UAAA5V,GACAwrD,GAJAI,EAAAh2C,aAMA41C,EAAAl3C,MAAA,SAAAtU,GACA,MAAAlB,WAAA5C,QACA0vD,EAAAt3C,MAAAtU,GACA6rD,EAAAv3C,MAAA,IAAAtU,GACA8rD,EAAAx3C,MAAAtU,GACAwrD,EAAA57B,UAAAg8B,EAAAh8B,cAJAg8B,EAAAt3C,SAMAk3C,EAAA57B,UAAA,SAAA5vB,GACA,IAAAlB,UAAA5C,OAAA,MAAA0vD,GAAAh8B,WACA,IAAAxwB,GAAAwsD,EAAAt3C,QAAAhW,GAAA0B,EAAA,GAAAkM,GAAAlM,EAAA,EAIA,OAHAyrD,GAAAG,EAAAh8B,UAAA5vB,GAAA0vB,aAAApxB,EAAA,KAAAc,EAAA8M,EAAA,KAAA9M,IAAAd,EAAA,KAAAc,EAAA8M,EAAA,KAAA9M,KAAA2sB,OAAAggC,GAAA5gD,MACAugD,EAAAG,EAAAj8B,WAAAtxB,EAAA,KAAAc,EAAA8M,EAAA,KAAA9M,IAAAswB,aAAApxB,EAAA,KAAAc,EAAAmhB,GAAArU,EAAA,IAAA9M,EAAAmhB,KAAAjiB,EAAA,KAAAc,EAAAmhB,GAAArU,EAAA,KAAA9M,EAAAmhB,MAAAwL,OAAAggC,GAAA5gD,MACAwgD,EAAAG,EAAAl8B,WAAAtxB,EAAA,KAAAc,EAAA8M,EAAA,KAAA9M,IAAAswB,aAAApxB,EAAA,KAAAc,EAAAmhB,GAAArU,EAAA,KAAA9M,EAAAmhB,KAAAjiB,EAAA,KAAAc,EAAAmhB,GAAArU,EAAA,KAAA9M,EAAAmhB,MAAAwL,OAAAggC,GAAA5gD,MACAqgD,GAEAA,EAAAl3C,MAAA,MAEA,IAAA63C,IAAAhhC,GA2BAK,GAAAE,GAAAD,GAAAE,GA3BAL,IACAngB,MAAApJ,EACAuc,UAAAvc,EACAwc,QAAAxc,EACA0c,aAAA,WACA0M,GAAA,EACAG,GAAAhN,UAAA4M,IAEAxM,WAAA,WACA4M,GAAAhN,UAAAgN,GAAA/M,QAAA+M,GAAAngB,MAAApJ,EACAoqD,IAAAxvD,GAAAwuB,GAAA,KAkBAihC,IACAjhD,MAAAogB,GACAjN,UAAAvc,EACAwc,QAAAxc,EACA0c,aAAA1c,EACA2c,WAAA3c,GAwDAsqB,IACAlhB,MAAAghB,GACA7N,UAAA8N,GACA7N,QAAA+N,GACA7N,aAAA,WACA4N,GAAA/N,UAAAiO,IAEA7N,WAAA,WACA2N,GAAAlhB,MAAAghB,GACAE,GAAA/N,UAAA8N,GACAC,GAAA9N,QAAA+N,IAoKAjvB,IAAAgsD,IAAAne,KAAA,WAEA,QAAAA,GAAA3pC,GAMA,MALAA,KACA,kBAAA2qB,IAAAmgC,EAAAngC,aAAAA,EAAA7qB,MAAAtB,KAAAjB,YACAwtD,GAAAA,EAAAl9B,QAAAk9B,EAAAC,EAAAF,IACAhvD,GAAAgsD,IAAAt9B,OAAAxqB,EAAA+qD,IAEAD,EAAAn7C,SAiCA,QAAAmV,KAEA,MADAimC,GAAA,KACAphB,EA1CA,GAAAvc,GAAAlC,EAAA8/B,EAAAF,EAAAC,EAAApgC,EAAA,GA4CA,OAnCAgf,GAAA2B,KAAA,SAAAtrC,GAGA,MAFA4qD,IAAA,EACA9uD,GAAAgsD,IAAAt9B,OAAAxqB,EAAAgrD,EAAAjhC,KACA6gC,IAEAjhB,EAAAkgB,SAAA,SAAA7pD,GAGA,MAFAof,IAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GAAA,EACAzkB,GAAAgsD,IAAAt9B,OAAAxqB,EAAAgrD,EAAAlgC,KACAvK,IAAAF,GAAAE,GAAAD,GAAAC,IAAAT,IAAAF,GAAAE,GAAAD,GAAAC,IAAAR,IAAAF,GAAAE,GAAAD,GAAAC,KAAAziB,EAAAA,EAAAA,EAAAA,IAEA8sC,EAAAof,OAAA,SAAA/oD,GAGA,MAFAkqB,IAAAE,KAAAH,GAAAE,GAAA5X,EAAAA,GACAzW,GAAAgsD,IAAAt9B,OAAAxqB,EAAAgrD,EAAAH,OACA5gC,GAAAE,KAAAD,GAAAE,MAEAuf,EAAAvc,WAAA,SAAA3uB,GACA,MAAAlB,WAAA5C,QACAqwD,GAAA59B,EAAA3uB,GAAAA,EAAA+rB,QAAAwC,GAAAvuB,GAAAgB,EACAqlB,KAFAsI,GAIAuc,EAAAze,QAAA,SAAAzsB,GACA,MAAAlB,WAAA5C,QACAmwD,EAAA,OAAA5/B,EAAAzsB,GAAA,GAAA4rB,IAAA,GAAAY,IAAAxsB,GACA,kBAAAksB,IAAAmgC,EAAAngC,YAAAA,GACA7F,KAHAoG,GAKAye,EAAAhf,YAAA,SAAAlsB,GACA,MAAAlB,WAAA5C,QACAgwB,EAAA,kBAAAlsB,GAAAA,GAAAqsD,EAAAngC,aAAAlsB,IAAAA,GACAkrC,GAFAhf,GAQAgf,EAAAvc,WAAAtxB,GAAAgsD,IAAAmC,aAAA/+B,QAAA,OAUApvB,GAAAgsD,IAAA1qB,UAAA,SAAA4Q,GACA,OACAxjB,OAAA,SAAAA,GACA,GAAA4S,GAAA,GAAAlQ,IAAA1C,EACA,KAAA,GAAA3sB,KAAAmwC,GAAA5Q,EAAAv/B,GAAAmwC,EAAAnwC,EACA,OAAAu/B,MAOAlQ,GAAA9uB,WACAwL,MAAA,SAAA7M,EAAA4N,GACAnM,KAAAgsB,OAAA5gB,MAAA7M,EAAA4N,IAEA4Y,OAAA,WACA/kB,KAAAgsB,OAAAjH,UAEAxG,UAAA,WACAve,KAAAgsB,OAAAzN,aAEAC,QAAA,WACAxe,KAAAgsB,OAAAxN,WAEAE,aAAA,WACA1e,KAAAgsB,OAAAtN,gBAEAC,WAAA,WACA3e,KAAAgsB,OAAArN,eAuBArhB,GAAAgsD,IAAA16B,WAAAD,GACArxB,GAAAgsD,IAAAmD,kBAAA9hC,IAsFArtB,GAAAgsD,IAAAoD,gBAAA,WACA,MAAA/9B,IAAAmB,MACAy7B,IAAAz7B,GAAA5N,OAAA4N,GACAxyB,GAAAgsD,IAAAn5B,SAAA,SAAAxM,GAEA,QAAAmH,GAAA1M,GAEA,MADAA,GAAAuF,EAAAvF,EAAA,GAAAlP,GAAAkP,EAAA,GAAAlP,IACAkP,EAAA,IAAA1O,GAAA0O,EAAA,IAAA1O,GAAA0O,EAMA,MATAuF,GAAAqL,GAAArL,EAAA,GAAA,IAAAzU,GAAAyU,EAAA,GAAAzU,GAAAyU,EAAAxnB,OAAA,EAAAwnB,EAAA,GAAAzU,GAAA,GAKA4b,EAAA5I,OAAA,SAAA9D,GAEA,MADAA,GAAAuF,EAAAzB,OAAA9D,EAAA,GAAAlP,GAAAkP,EAAA,GAAAlP,IACAkP,EAAA,IAAA1O,GAAA0O,EAAA,IAAA1O,GAAA0O,GAEA0M,GAKAiF,GAAA7N,OAAA4N,GA0BAxyB,GAAAgsD,IAAAt1B,OAAA,WAEA,QAAAA,KACA,GAAA7E,GAAA,kBAAA0oB,GAAAA,EAAAv2C,MAAAtB,KAAAjB,WAAA84C,EAAAl0B,EAAAqL,IAAAG,EAAA,GAAAjgB,IAAAigB,EAAA,GAAAjgB,GAAA,GAAAgT,OAAA6B,IAOA,OANAxB,GAAA,KAAA,KAAA,GACAnX,MAAA,SAAA7M,EAAA4N,GACA4X,EAAAnjB,KAAArC,EAAAolB,EAAAplB,EAAA4N,IACA5N,EAAA,IAAAmR,GAAAnR,EAAA,IAAAmR,OAIA/L,KAAA,UACAya,aAAA2F,IAXA,GAAA2M,GAAAnO,EAAAs1B,GAAA,EAAA,GAAAhiC,EAAA,CA6BA,OAfAme,GAAA6jB,OAAA,SAAAt5C,GACA,MAAAQ,WAAA5C,QACA07C,EAAAt5C,EACAy1B,GAFA6jB,GAIA7jB,EAAAtD,MAAA,SAAAnyB,GACA,MAAAQ,WAAA5C,QACAomB,EAAAoG,IAAA+H,GAAAnyB,GAAA2Q,GAAA2G,EAAA3G,IACA8kB,GAFAtD,GAIAsD,EAAAne,UAAA,SAAA5V,GACA,MAAAlB,WAAA5C,QACAomB,EAAAoG,GAAA+H,EAAAxhB,IAAA2G,GAAA5V,GAAAiP,IACA8kB,GAFAne,GAIAme,EAAAtD,MAAA,KA0BApzB,GAAAgsD,IAAA73B,SAAA,SAAAtzB,EAAAC,GACA,GAAAwV,GAAA+4C,GAAAvuD,EAAA,GAAAD,EAAA,IAAA+Q,GAAAkW,EAAAjnB,EAAA,GAAA+Q,GAAAqW,EAAAnnB,EAAA,GAAA8Q,GAAA09C,EAAAjwD,KAAAiR,IAAA++C,GAAAh7B,EAAAh1B,KAAAsS,IAAA09C,GAAArtC,EAAA3iB,KAAAiR,IAAAwX,GAAA5F,EAAA7iB,KAAAsS,IAAAmW,GAAAynC,EAAAlwD,KAAAiR,IAAA2X,GAAAG,EAAA/oB,KAAAsS,IAAAsW,EACA,OAAA5oB,MAAA8S,MAAA9S,KAAAgT,MAAAiE,EAAA8R,EAAAknC,GAAAh5C,GAAAA,EAAA4L,EAAAqtC,EAAAvtC,EAAAoG,EAAAiM,GAAA/d,GAAA0L,EAAAutC,EAAArtC,EAAAkG,EAAAiM,IAEAr0B,GAAAgsD,IAAAwD,UAAA,WAEA,QAAAA,KACA,OACAnpD,KAAA,kBACAya,YAAA6G,KAGA,QAAAA,KACA,MAAA3nB,IAAA6Z,MAAAxa,KAAAwX,KAAA44C,EAAAC,GAAAA,EAAAC,EAAAD,GAAAlnD,IAAA+T,GAAAjX,OAAAtF,GAAA6Z,MAAAxa,KAAAwX,KAAA+4C,EAAAC,GAAAA,EAAAC,EAAAD,GAAArnD,IAAAmW,IAAArZ,OAAAtF,GAAA6Z,MAAAxa,KAAAwX,KAAA+M,EAAAiI,GAAAA,EAAAN,EAAAM,GAAArf,OAAA,SAAAvL,GACA,MAAA3B,IAAA2B,EAAAyuD,GAAAxsC,KACA1a,IAAAvH,IAAAqE,OAAAtF,GAAA6Z,MAAAxa,KAAAwX,KAAA6M,EAAAoI,GAAAA,EAAAN,EAAAM,GAAAtf,OAAA,SAAAqC,GACA,MAAAvP,IAAAuP,EAAAghD,GAAA3sC,KACA1a,IAAAqG,IAZA,GAAA0c,GAAA3H,EAAA+rC,EAAAF,EAAAjkC,EAAA9H,EAAAosC,EAAAF,EAAA3uD,EAAA4N,EAAA0N,EAAAoC,EAAAkN,EAAA,GAAAC,EAAAD,EAAA6jC,EAAA,GAAAG,EAAA,IAAAt3C,EAAA,GAuEA,OAzDAi3C,GAAA7nC,MAAA,WACA,MAAAA,KAAAnf,IAAA,SAAAsY,GACA,OACAza,KAAA,aACAya,YAAAA,MAIA0uC,EAAAO,QAAA,WACA,OACA1pD,KAAA,UACAya,aAAAvE,EAAAkzC,GAAAnqD,OAAAqZ,EAAAmxC,GAAA7sD,MAAA,GAAAsZ,EAAAozC,GAAA33C,UAAA/U,MAAA,GAAA0b,EAAAixC,GAAA53C,UAAA/U,MAAA,OAGAusD,EAAAj2B,OAAA,SAAA52B,GACA,MAAAlB,WAAA5C,OACA2wD,EAAAQ,YAAArtD,GAAAstD,YAAAttD,GADA6sD,EAAAS,eAGAT,EAAAQ,YAAA,SAAArtD,GACA,MAAAlB,WAAA5C,QACA4wD,GAAA9sD,EAAA,GAAA,GAAAgtD,GAAAhtD,EAAA,GAAA,GACAitD,GAAAjtD,EAAA,GAAA,GAAAmtD,GAAAntD,EAAA,GAAA,GACA8sD,EAAAE,IAAAhtD,EAAA8sD,EAAAA,EAAAE,EAAAA,EAAAhtD,GACAitD,EAAAE,IAAAntD,EAAAitD,EAAAA,EAAAE,EAAAA,EAAAntD,GACA6sD,EAAAj3C,UAAAA,MALAk3C,EAAAG,IAAAD,EAAAG,KAOAN,EAAAS,YAAA,SAAAttD,GACA,MAAAlB,WAAA5C,QACA+kB,GAAAjhB,EAAA,GAAA,GAAA4oB,GAAA5oB,EAAA,GAAA,GACA+gB,GAAA/gB,EAAA,GAAA,GAAA6oB,GAAA7oB,EAAA,GAAA,GACAihB,EAAA2H,IAAA5oB,EAAAihB,EAAAA,EAAA2H,EAAAA,EAAA5oB,GACA+gB,EAAA8H,IAAA7oB,EAAA+gB,EAAAA,EAAA8H,EAAAA,EAAA7oB,GACA6sD,EAAAj3C,UAAAA,MALAqL,EAAAF,IAAA6H,EAAAC,KAOAgkC,EAAAh2C,KAAA,SAAA7W,GACA,MAAAlB,WAAA5C,OACA2wD,EAAAU,UAAAvtD,GAAAwtD,UAAAxtD,GADA6sD,EAAAW,aAGAX,EAAAU,UAAA,SAAAvtD,GACA,MAAAlB,WAAA5C,QACA6wD,GAAA/sD,EAAA,GAAAktD,GAAAltD,EAAA,GACA6sD,IAFAE,EAAAG,IAIAL,EAAAW,UAAA,SAAAxtD,GACA,MAAAlB,WAAA5C,QACAgtB,GAAAlpB,EAAA,GAAAmpB,GAAAnpB,EAAA,GACA6sD,IAFA3jC,EAAAC,IAIA0jC,EAAAj3C,UAAA,SAAA5V,GACA,MAAAlB,WAAA5C,QACA0Z,GAAA5V,EACA1B,EAAAqyB,GAAA5P,EAAA8H,EAAA,IACA3c,EAAA0kB,GAAA3P,EAAA2H,EAAAhT,GACAgE,EAAA+W,GAAAs8B,EAAAE,EAAA,IACAnxC,EAAA4U,GAAAk8B,EAAAE,EAAAp3C,GACAi3C,GANAj3C,GAQAi3C,EAAAQ,cAAA,KAAA,IAAA9sC,KAAA,IAAA,GAAAA,MAAA+sC,cAAA,KAAA,IAAA/sC,KAAA,IAAA,GAAAA,OAwBAljB,GAAAgsD,IAAAoE,SAAA,WAEA,QAAAA,KACA,OACA/pD,KAAA,aACAya,aAAAuvC,GAAAvsD,EAAAE,MAAAtB,KAAAjB,WAAA6uD,GAAAzsD,EAAAG,MAAAtB,KAAAjB,aAJA,GAAA4uD,GAAAC,EAAAxsD,EAAA0vB,GAAA3vB,EAAA4vB,EAuBA,OAhBA28B,GAAAj8B,SAAA,WACA,MAAAn0B,IAAAgsD,IAAA73B,SAAAk8B,GAAAvsD,EAAAE,MAAAtB,KAAAjB,WAAA6uD,GAAAzsD,EAAAG,MAAAtB,KAAAjB,aAEA2uD,EAAAtsD,OAAA,SAAAnB,GACA,MAAAlB,WAAA5C,QACAiF,EAAAnB,EAAA0tD,EAAA,kBAAA1tD,GAAA,KAAAA,EACAytD,GAFAtsD,GAIAssD,EAAAvsD,OAAA,SAAAlB,GACA,MAAAlB,WAAA5C,QACAgF,EAAAlB,EAAA2tD,EAAA,kBAAA3tD,GAAA,KAAAA,EACAytD,GAFAvsD,GAIAusD,EAAA73C,UAAA,WACA,MAAA9W,WAAA5C,OAAAuxD,EAAA,GAEAA,GAEApwD,GAAAgsD,IAAA/mC,YAAA,SAAAnhB,EAAAD,GACA,MAAA6vB,IAAA5vB,EAAA,GAAA8N,GAAA9N,EAAA,GAAA8N,GAAA/N,EAAA,GAAA+N,GAAA/N,EAAA,GAAA+N,KAaA5R,GAAAgsD,IAAAntD,OAAA,SAAAqF,GAGA,MAFAowB,IAAA,EACAt0B,GAAAgsD,IAAAt9B,OAAAxqB,EAAAqwB,IACAD,GAEA,IAAAA,IACAC,IACA9M,OAAA/iB,EACAoJ,MAAApJ,EACAuc,UAAAmT,GACAlT,QAAAxc,EACA0c,aAAA1c,EACA2c,WAAA3c,GA4BA6rD,GAAA/7B,GAAA,SAAAg8B,GACA,MAAAnxD,MAAAgT,KAAA,GAAA,EAAAm+C,KACA,SAAA/iC,GACA,MAAA,GAAApuB,KAAA2Q,KAAAyd,EAAA,MAEAztB,GAAAgsD,IAAAyE,mBAAA,WACA,MAAAp/B,IAAAk/B,MACAtC,IAAAsC,EACA,IAAAG,IAAAl8B,GAAA,SAAAg8B,GACA,GAAA7nD,GAAAtJ,KAAAwQ,KAAA2gD,EACA,OAAA7nD,IAAAA,EAAAtJ,KAAAiR,IAAA3H,IACAhF,IACA3D,GAAAgsD,IAAA2E,qBAAA,WACA,MAAAt/B,IAAAq/B,MACAzC,IAAAyC,IAqBA1wD,GAAAgsD,IAAA4E,eAAA,WACA,MAAAzjC,IAAA0H,MACAo5B,IAAAp5B,IAcA70B,GAAAgsD,IAAA6E,iBAAA,WACA,MAAA1jC,IAAA8H,MACAg5B,IAAAh5B,EACA,IAAA67B,IAAAt8B,GAAA,SAAAg8B,GACA,MAAA,GAAAA,GACAnxD,KAAAipB,OACAtoB,GAAAgsD,IAAA+E,SAAA,WACA,MAAA1/B,IAAAy/B,MACA7C,IAAA6C,GAIA97B,GAAApQ,OAAA,SAAA3jB,EAAA4N,GACA,OAAA5N,EAAA,EAAA5B,KAAAipB,KAAAjpB,KAAA6Q,IAAArB,IAAAkB,MA0BA/P,GAAAgsD,IAAAgF,SAAA,WACA,MAAA77B,IAAAH,MACAi5B,IAAAj5B,EACA,IAAAi8B,IAAAz8B,GAAA,WACA,MAAA,IACAn1B,KAAA2Q,OACAhQ,GAAAgsD,IAAAkF,aAAA,WACA,MAAA7/B,IAAA4/B,MACAhD,IAAAgD,EACA,IAAAE,IAAA38B,GAAA,SAAAg8B,GACA,MAAA,IAAA,EAAAA,IACA,SAAA/iC,GACA,MAAA,GAAApuB,KAAAipB,KAAAmF,MAEAztB,GAAAgsD,IAAAoF,cAAA,WACA,MAAA//B,IAAA8/B,MACAlD,IAAAkD,GAIA97B,GAAAzQ,OAAA,SAAA3jB,EAAA4N,GACA,QAAAA,EAAA,EAAAxP,KAAAipB,KAAAjpB,KAAA6Q,IAAAjP,IAAA8O,MAEA/P,GAAAgsD,IAAAqF,mBAAA,WACA,GAAA//B,GAAA6D,GAAAE,IAAAxD,EAAAP,EAAAO,OAAAxL,EAAAiL,EAAAjL,MAQA,OAPAiL,GAAAO,OAAA,SAAAlvB,GACA,MAAAA,GAAAkvB,IAAAlvB,EAAA,GAAAA,EAAA,MAAAA,EAAAkvB,KAAAlvB,EAAA,IAAAA,EAAA,MAEA2uB,EAAAjL,OAAA,SAAA1jB,GACA,MAAAA,GAAA0jB,GAAA1jB,EAAA,GAAAA,EAAA,GAAAA,EAAA9D,OAAA,EAAA8D,EAAA,GAAA,GAAA,MAAAA,EAAA0jB,KACA1jB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAA,MAEA0jB,GAAA,EAAA,EAAA,OACA4nC,IAAA54B,GACAr1B,GAAAsxD,QAOAtxD,GAAAsxD,KAAA77B,KAAA,SAAA87B,GAGA,QAAA97B,GAAAjrB,GACA,GAAAA,EAAA3L,OAAA,EAAA,QACA,IAAAyF,GAAAi3B,EAAAjoB,GAAArS,GAAAu6B,EAAAloB,GAAAzE,GAAAtK,EAAAiG,EAAA3L,OAAA8mB,KAAA6rC,IACA,KAAAltD,EAAA,EAAAC,EAAAD,EAAAA,IACAqhB,EAAAriB,OAAAi4B,EAAApvB,KAAAzJ,KAAA8H,EAAAlG,GAAAA,IAAAk3B,EAAArvB,KAAAzJ,KAAA8H,EAAAlG,GAAAA,GAAAA,GAGA,KADAqhB,EAAAH,KAAAmQ,IACArxB,EAAA,EAAAC,EAAAD,EAAAA,IAAAktD,EAAAluD,MAAAqiB,EAAArhB,GAAA,IAAAqhB,EAAArhB,GAAA,IACA,IAAAmtD,GAAAj8B,GAAA7P,GAAA+rC,EAAAl8B,GAAAg8B,GACAG,EAAAD,EAAA,KAAAD,EAAA,GAAAG,EAAAF,EAAAA,EAAA7yD,OAAA,KAAA4yD,EAAAA,EAAA5yD,OAAA,GAAAooB,IACA,KAAA3iB,EAAAmtD,EAAA5yD,OAAA,EAAAyF,GAAA,IAAAA,EAAA2iB,EAAA3jB,KAAAkH,EAAAmb,EAAA8rC,EAAAntD,IAAA,IACA,KAAAA,GAAAqtD,EAAArtD,EAAAotD,EAAA7yD,OAAA+yD,IAAAttD,EAAA2iB,EAAA3jB,KAAAkH,EAAAmb,EAAA+rC,EAAAptD,IAAA,IACA,OAAA2iB,GAdA,GAAAhmB,GAAAq0B,GAAAzmB,EAAA0mB,EACA,OAAA9zB,WAAA5C,OAAA42B,EAAA87B,IAeA97B,EAAAx0B,EAAA,SAAA0B,GACA,MAAAlB,WAAA5C,QAAAoC,EAAA0B,EAAA8yB,GAAAx0B,GAEAw0B,EAAA5mB,EAAA,SAAAlM,GACA,MAAAlB,WAAA5C,QAAAgQ,EAAAlM,EAAA8yB,GAAA5mB,GAEA4mB,IAaAz1B,GAAAsxD,KAAArqC,QAAA,SAAAnG,GAEA,MADAta,IAAAsa,EAAA+wC,IACA/wC,EAEA,IAAA+wC,IAAA7xD,GAAAsxD,KAAArqC,QAAA3kB,YACAuvD,IAAAriB,KAAA,WAEA,IADA,GAAA3uC,GAAAyD,EAAA,GAAAC,EAAA7B,KAAA7D,OAAAiC,EAAA4B,KAAA6B,EAAA,GAAAirC,EAAA,IACAlrC,EAAAC,GACA1D,EAAAC,EACAA,EAAA4B,KAAA4B,GACAkrC,GAAA3uC,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAEA,OAAA,GAAA0uC,GAEAqiB,GAAA9D,SAAA,SAAAhsD,GACA,GAAAlB,GAAA8H,EAAArE,EAAA,GAAAC,EAAA7B,KAAA7D,OAAAoC,EAAA,EAAA4N,EAAA,EAAA/N,EAAA4B,KAAA6B,EAAA,EAEA,KADA9C,UAAA5C,SAAAkD,EAAA,IAAA,EAAAW,KAAA8sC,WACAlrC,EAAAC,GACA1D,EAAAC,EACAA,EAAA4B,KAAA4B,GACAqE,EAAA9H,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACAI,IAAAJ,EAAA,GAAAC,EAAA,IAAA6H,EACAkG,IAAAhO,EAAA,GAAAC,EAAA,IAAA6H,CAEA,QAAA1H,EAAAc,EAAA8M,EAAA9M,IAEA8vD,GAAA1sC,KAAA,SAAAD,GAEA,IADA,GAAA2jB,GAAA79B,EAAAC,EAAAnK,EAAA6H,EAAA9G,EAAAkf,EAAAsV,GAAAnR,GAAA5gB,EAAA,GAAAC,EAAA7B,KAAA7D,OAAAw3B,GAAA3zB,MAAA7B,EAAA6B,KAAA6B,EAAA,KACAD,EAAAC,GAAA,CAMA,IALAskC,EAAA3jB,EAAAjiB,QACAiiB,EAAArmB,OAAA,EACAiC,EAAA4B,KAAA4B,GACAqE,EAAAkgC,GAAA59B,EAAA49B,EAAAhqC,OAAAkiB,GAAA,GACA/V,EAAA,KACAA,EAAAC,GACApJ,EAAAgnC,EAAA79B,GACA4qB,GAAA/zB,EAAAhB,EAAAC,IACA80B,GAAAjtB,EAAA9H,EAAAC,IACAokB,EAAA5hB,KAAAuyB,GAAAltB,EAAA9G,EAAAhB,EAAAC,IAEAokB,EAAA5hB,KAAAzB,IACA+zB,GAAAjtB,EAAA9H,EAAAC,IACAokB,EAAA5hB,KAAAuyB,GAAAltB,EAAA9G,EAAAhB,EAAAC,IAEA6H,EAAA9G,CAEAkf,IAAAmE,EAAA5hB,KAAA4hB,EAAA,IACArkB,EAAAC,EAEA,MAAAokB,GAaA,IAAA2V,IAAAf,GAAA9C,GAAA2D,GAAAD,GAAA7D,MAAA4D,KAgIArB,IAAA92B,UAAA03B,QAAA,WAEA,IADA,GAAAxD,GAAAkD,EAAAh3B,KAAA22B,MAAAI,EAAAC,EAAA76B,OACA46B,KACAjD,EAAAkD,EAAAD,GAAAjD,KACAA,EAAA11B,GAAA01B,EAAA31B,GAAA64B,EAAAO,OAAAR,EAAA,EAGA,OADAC,GAAAlU,KAAA4U,IACAV,EAAA76B,QA4MAq7B,GAAA53B,WACAsjB,MAAA,WACA,MAAAljB,MAAA8zB,KAAAzxB,IAAArC,KAAA+zB,KAAA/zB,KAAA8zB,KAAA31B,EAAA6B,KAAA8zB,KAAA11B,GAEA84B,IAAA,WACA,MAAAl3B,MAAA8zB,KAAAzxB,IAAArC,KAAA+zB,KAAA/zB,KAAA8zB,KAAA11B,EAAA4B,KAAA8zB,KAAA31B,IASA66B,GAAAp5B,WACAi2B,OAAA,SAAApf,EAAA7Y,GACA,GAAA8J,GAAA0nD,EAAAC,CACA,IAAA54C,EAAA,CAKA,GAJA7Y,EAAA82B,EAAAje,EACA7Y,EAAAg3B,EAAAne,EAAAme,EACAne,EAAAme,IAAAne,EAAAme,EAAAF,EAAA92B,GACA6Y,EAAAme,EAAAh3B,EACA6Y,EAAAkf,EAAA,CAEA,IADAlf,EAAAA,EAAAkf,EACAlf,EAAA2B,GAAA3B,EAAAA,EAAA2B,CACA3B,GAAA2B,EAAAxa,MAEA6Y,GAAAkf,EAAA/3B,CAEA8J,GAAA+O,MACAzW,MAAAC,GACAwW,EAAA2iB,GAAAp5B,KAAAC,GACArC,EAAA82B,EAAA,KACA92B,EAAAg3B,EAAAne,EACAA,EAAAie,EAAAje,EAAA2B,EAAAxa,EACA8J,EAAA+O,IAEA7Y,EAAA82B,EAAA92B,EAAAg3B,EAAA,KACA50B,KAAAC,EAAArC,EACA8J,EAAA,KAMA,KAJA9J,EAAAwa,EAAAxa,EAAA+3B,EAAA,KACA/3B,EAAA+a,EAAAjR,EACA9J,EAAAotB,GAAA,EACAvU,EAAA7Y,EACA8J,GAAAA,EAAAsjB,GACAokC,EAAA1nD,EAAAiR,EACAjR,IAAA0nD,EAAAh3C,GACAi3C,EAAAD,EAAAz5B,EACA05B,GAAAA,EAAArkC,GACAtjB,EAAAsjB,EAAAqkC,EAAArkC,GAAA,EACAokC,EAAApkC,GAAA,EACAvU,EAAA24C,IAEA34C,IAAA/O,EAAAiuB,IACAsD,GAAAj5B,KAAA0H,GACA+O,EAAA/O,EACAA,EAAA+O,EAAAkC,GAEAjR,EAAAsjB,GAAA,EACAokC,EAAApkC,GAAA,EACAmO,GAAAn5B,KAAAovD,MAGAC,EAAAD,EAAAh3C,EACAi3C,GAAAA,EAAArkC,GACAtjB,EAAAsjB,EAAAqkC,EAAArkC,GAAA,EACAokC,EAAApkC,GAAA,EACAvU,EAAA24C,IAEA34C,IAAA/O,EAAA0Q,IACA+gB,GAAAn5B,KAAA0H,GACA+O,EAAA/O,EACAA,EAAA+O,EAAAkC,GAEAjR,EAAAsjB,GAAA,EACAokC,EAAApkC,GAAA,EACAiO,GAAAj5B,KAAAovD,KAGA1nD,EAAA+O,EAAAkC,CAEA3Y,MAAAC,EAAA+qB,GAAA,GAEAnoB,OAAA,SAAAjF,GACAA,EAAAg3B,IAAAh3B,EAAAg3B,EAAAF,EAAA92B,EAAA82B,GACA92B,EAAA82B,IAAA92B,EAAA82B,EAAAE,EAAAh3B,EAAAg3B,GACAh3B,EAAAg3B,EAAAh3B,EAAA82B,EAAA,IACA,IAAA46B,GAAA36B,EAAA8uB,EAAA/7C,EAAA9J,EAAA+a,EAAA/Z,EAAAhB,EAAAwa,EAAAnZ,EAAArB,EAAA+3B,CA6BA,IA5BAhB,EAAA/1B,EAAAK,EAAAm6B,GAAAn6B,GAAAL,EAAAK,EACAyI,EACAA,EAAA0Q,IAAAxa,EAAA8J,EAAA0Q,EAAAuc,EAAAjtB,EAAAiuB,EAAAhB,EAEA30B,KAAAC,EAAA00B,EAEA/1B,GAAAK,GACAwkD,EAAA9uB,EAAA3J,EACA2J,EAAA3J,EAAAptB,EAAAotB,EACA2J,EAAAvc,EAAAxZ,EACAA,EAAA+Z,EAAAgc,EACAA,IAAA11B,GACAyI,EAAAitB,EAAAhc,EACAgc,EAAAhc,EAAA/a,EAAA+a,EACA/a,EAAA+2B,EAAAgB,EACAjuB,EAAA0Q,EAAAxa,EACA+2B,EAAAgB,EAAA12B,EACAA,EAAA0Z,EAAAgc,IAEAA,EAAAhc,EAAAjR,EACAA,EAAAitB,EACA/2B,EAAA+2B,EAAAgB,KAGA8tB,EAAA7lD,EAAAotB,EACAptB,EAAA+2B,GAEA/2B,IAAAA,EAAA+a,EAAAjR,IACA+7C,EAAA,CACA,GAAA7lD,GAAAA,EAAAotB,EAEA,YADAptB,EAAAotB,GAAA,EAGA,GAAA,CACA,GAAAptB,IAAAoC,KAAAC,EAAA,KACA,IAAArC,IAAA8J,EAAA0Q,GAQA,GAPAk3C,EAAA5nD,EAAAiuB,EACA25B,EAAAtkC,IACAskC,EAAAtkC,GAAA,EACAtjB,EAAAsjB,GAAA,EACAiO,GAAAj5B,KAAA0H,GACA4nD,EAAA5nD,EAAAiuB,GAEA25B,EAAAl3C,GAAAk3C,EAAAl3C,EAAA4S,GAAAskC,EAAA35B,GAAA25B,EAAA35B,EAAA3K,EAAA,CACAskC,EAAA35B,GAAA25B,EAAA35B,EAAA3K,IACAskC,EAAAl3C,EAAA4S,GAAA,EACAskC,EAAAtkC,GAAA,EACAmO,GAAAn5B,KAAAsvD,GACAA,EAAA5nD,EAAAiuB,GAEA25B,EAAAtkC,EAAAtjB,EAAAsjB,EACAtjB,EAAAsjB,EAAAskC,EAAA35B,EAAA3K,GAAA,EACAiO,GAAAj5B,KAAA0H,GACA9J,EAAAoC,KAAAC,CACA,YAUA,IAPAqvD,EAAA5nD,EAAA0Q,EACAk3C,EAAAtkC,IACAskC,EAAAtkC,GAAA,EACAtjB,EAAAsjB,GAAA,EACAmO,GAAAn5B,KAAA0H,GACA4nD,EAAA5nD,EAAA0Q,GAEAk3C,EAAAl3C,GAAAk3C,EAAAl3C,EAAA4S,GAAAskC,EAAA35B,GAAA25B,EAAA35B,EAAA3K,EAAA,CACAskC,EAAAl3C,GAAAk3C,EAAAl3C,EAAA4S,IACAskC,EAAA35B,EAAA3K,GAAA,EACAskC,EAAAtkC,GAAA,EACAiO,GAAAj5B,KAAAsvD,GACAA,EAAA5nD,EAAA0Q,GAEAk3C,EAAAtkC,EAAAtjB,EAAAsjB,EACAtjB,EAAAsjB,EAAAskC,EAAAl3C,EAAA4S,GAAA,EACAmO,GAAAn5B,KAAA0H,GACA9J,EAAAoC,KAAAC,CACA,OAGAqvD,EAAAtkC,GAAA,EACAptB,EAAA8J,EACAA,EAAAA,EAAAiR,SACA/a,EAAAotB,EACAptB,KAAAA,EAAAotB,GAAA,MAiEA1tB,GAAAsxD,KAAAW,QAAA,SAAAtsC,GAGA,QAAAssC,GAAAznD,GACA,GAAA0nD,GAAA,GAAA1yD,OAAAgL,EAAA3L,QAAA+kB,EAAAyO,EAAA,GAAA,GAAA3O,EAAA2O,EAAA,GAAA,GAAA9G,EAAA8G,EAAA,GAAA,GAAA7G,EAAA6G,EAAA,GAAA,EAQA,OAPA0J,IAAAC,EAAAxxB,GAAA6nB,GAAAwH,MAAA9kB,QAAA,SAAAykB,EAAAl1B,GACA,GAAA+0B,GAAAG,EAAAH,MAAA5C,EAAA+C,EAAA/C,KAAAxP,EAAAirC,EAAA5tD,GAAA+0B,EAAAx6B,OAAAw6B,EAAA7wB,IAAA,SAAA3C,GACA,GAAAD,GAAAC,EAAA+f,OACA,QAAAhgB,EAAA3E,EAAA2E,EAAAiJ,KACA4nB,EAAAx1B,GAAA2iB,GAAA6S,EAAAx1B,GAAAsqB,GAAAkL,EAAA5nB,GAAA6U,GAAA+S,EAAA5nB,GAAA2c,IAAA5H,EAAA4H,IAAAD,EAAAC,IAAAD,EAAA7H,IAAAE,EAAAF,MACAuD,GAAAnZ,MAAAtD,EAAAlG,KAEA4tD,EAEA,QAAAl2B,GAAAxxB,GACA,MAAAA,GAAAhC,IAAA,SAAA3G,EAAAyC,GACA,OACArD,EAAA5B,KAAA4R,MAAAsqB,EAAA15B,EAAAyC,GAAA4e,IAAAA,GACArU,EAAAxP,KAAA4R,MAAAuqB,EAAA35B,EAAAyC,GAAA4e,IAAAA,GACA5e,EAAAA,KAlBA,GAAArD,GAAAq0B,GAAAzmB,EAAA0mB,GAAAgG,EAAAt6B,EAAAu6B,EAAA3sB,EAAAwjB,EAAA8/B,EACA,OAAAxsC,GAAAssC,EAAAtsC,IAqBAssC,EAAAruB,MAAA,SAAAp5B,GACA,MAAAuxB,IAAAC,EAAAxxB,IAAA6uB,MAAA7sB,OAAA,SAAAgqB,GACA,MAAAA,GAAAzxB,GAAAyxB,EAAAhlB,IACAhJ,IAAA,SAAAguB,GACA,OACA1yB,OAAA0G,EAAAgsB,EAAAzxB,EAAAT,GACAT,OAAA2G,EAAAgsB,EAAAhlB,EAAAlN,OAIA2tD,EAAAG,UAAA,SAAA5nD,GACA,GAAA4nD,KAaA,OAZAr2B,IAAAC,EAAAxxB,IAAAqvB,MAAA9kB,QAAA,SAAAykB,EAAAl1B,GAEA,IADA,GAAA8B,GAAAisD,EAAA57B,EAAA+C,EAAA/C,KAAA4C,EAAAG,EAAAH,MAAA7T,KAAA4U,IAAApvB,EAAA,GAAAC,EAAAouB,EAAAx6B,OAAAsH,EAAAkzB,EAAApuB,EAAA,GAAAurB,KAAA2P,EAAAhgC,EAAApB,IAAA0xB,EAAAtwB,EAAAqL,EAAArL,EAAApB,IACAiG,EAAAC,GACA7E,EAAAD,EACAksD,EAAAlsB,EACAhgC,EAAAkzB,EAAAruB,GAAAwrB,KACA2P,EAAAhgC,EAAApB,IAAA0xB,EAAAtwB,EAAAqL,EAAArL,EAAApB,EACAT,EAAA+tD,EAAA/tD,GAAAA,EAAA6hC,EAAA7hC,GAAA83B,GAAA3F,EAAA47B,EAAAlsB,GAAA,GACAisB,EAAA9uD,MAAAkH,EAAAlG,GAAAkG,EAAA6nD,EAAA/tD,GAAAkG,EAAA27B,EAAA7hC,OAIA8tD,GAEAH,EAAAhxD,EAAA,SAAA0B,GACA,MAAAlB,WAAA5C,QAAA08B,EAAAjoB,GAAArS,EAAA0B,GAAAsvD,GAAAhxD,GAEAgxD,EAAApjD,EAAA,SAAAlM,GACA,MAAAlB,WAAA5C,QAAA28B,EAAAloB,GAAAzE,EAAAlM,GAAAsvD,GAAApjD,GAEAojD,EAAA5/B,WAAA,SAAA1vB,GACA,MAAAlB,WAAA5C,QACAwzB,EAAA,MAAA1vB,EAAAwvD,GAAAxvD,EACAsvD,GAFA5/B,IAAA8/B,GAAA,KAAA9/B,GAIA4/B,EAAAzuD,KAAA,SAAAb,GACA,MAAAlB,WAAA5C,OACAozD,EAAA5/B,WAAA1vB,KAAA,EAAA,GAAAA,IADA0vB,IAAA8/B,GAAA,KAAA9/B,GAAAA,EAAA,IAGA4/B,GAEA,IAAAE,MAAA,KAAA,OAAA,IAAA,KAIAnyD,IAAAsxD,KAAAgB,SAAA,SAAAf,GACA,MAAAvxD,IAAAsxD,KAAAW,UAAAG,UAAAb,IAEAvxD,GAAAsxD,KAAAiB,SAAA,SAAA5sC,EAAA4F,EAAAC,EAAAoF,EAAAC,GAYA,QAAA0hC,GAAA/nD,GA4BA,QAAA+tB,GAAAh0B,EAAA1C,EAAAZ,EAAA4N,EAAA0c,EAAAC,EAAAoF,EAAAC,GACA,IAAA1vB,MAAAF,KAAAE,MAAA0N,GACA,GAAAtK,EAAAi4B,KAAA,CACA,GAAAg2B,GAAAjuD,EAAAtD,EAAAwxD,EAAAluD,EAAAsK,CACA,IAAA,MAAA2jD,EACA,GAAAlzD,GAAAkzD,EAAAvxD,GAAA3B,GAAAmzD,EAAA5jD,GAAA,IACA6jD,EAAAnuD,EAAA1C,EAAAZ,EAAA4N,EAAA0c,EAAAC,EAAAoF,EAAAC,OACA,CACA,GAAA8hC,GAAApuD,EAAAuJ,KACAvJ,GAAAtD,EAAAsD,EAAAsK,EAAAtK,EAAAuJ,MAAA,KACA4kD,EAAAnuD,EAAAouD,EAAAH,EAAAC,EAAAlnC,EAAAC,EAAAoF,EAAAC,GACA6hC,EAAAnuD,EAAA1C,EAAAZ,EAAA4N,EAAA0c,EAAAC,EAAAoF,EAAAC,OAGAtsB,GAAAtD,EAAAA,EAAAsD,EAAAsK,EAAAA,EAAAtK,EAAAuJ,MAAAjM,MAGA6wD,GAAAnuD,EAAA1C,EAAAZ,EAAA4N,EAAA0c,EAAAC,EAAAoF,EAAAC,GAGA,QAAA6hC,GAAAnuD,EAAA1C,EAAAZ,EAAA4N,EAAA0c,EAAAC,EAAAoF,EAAAC,GACA,GAAAuM,GAAA,IAAA7R,EAAAqF,GAAAyM,EAAA,IAAA7R,EAAAqF,GAAAlvB,EAAAV,GAAAm8B,EAAAE,EAAAzuB,GAAAwuB,EAAA/4B,EAAAg5B,GAAA,EAAA37B,CACA4C,GAAAi4B,MAAA,EACAj4B,EAAAA,EAAAk4B,MAAAn4B,KAAAC,EAAAk4B,MAAAn4B,GAAAi4B,MACA56B,EAAA4pB,EAAA6R,EAAAxM,EAAAwM,EACAE,EAAA9R,EAAA6R,EAAAxM,EAAAwM,EACA9E,EAAAh0B,EAAA1C,EAAAZ,EAAA4N,EAAA0c,EAAAC,EAAAoF,EAAAC,GArDA,GAAAhvB,GAAA+wD,EAAAC,EAAAvuD,EAAAC,EAAAuuD,EAAAC,EAAAC,EAAAC,EAAA13B,EAAAjoB,GAAArS,GAAAu6B,EAAAloB,GAAAzE,EACA,IAAA,MAAA0c,EACAunC,EAAAvnC,EAAAwnC,EAAAvnC,EAAAwnC,EAAApiC,EAAAqiC,EAAApiC,MAKA,IAHAmiC,EAAAC,IAAAH,EAAAC,EAAAt8C,EAAAA,GACAm8C,KAAAC,KACAtuD,EAAAiG,EAAA3L,OACAq0D,EAAA,IAAA5uD,EAAA,EAAAC,EAAAD,IAAAA,EACAzC,EAAA2I,EAAAlG,GACAzC,EAAAZ,EAAA6xD,IAAAA,EAAAjxD,EAAAZ,GACAY,EAAAgN,EAAAkkD,IAAAA,EAAAlxD,EAAAgN,GACAhN,EAAAZ,EAAA+xD,IAAAA,EAAAnxD,EAAAZ,GACAY,EAAAgN,EAAAokD,IAAAA,EAAApxD,EAAAgN,GACA+jD,EAAAtvD,KAAAzB,EAAAZ,GACA4xD,EAAAvvD,KAAAzB,EAAAgN,OACA,KAAAvK,EAAA,EAAAC,EAAAD,IAAAA,EAAA,CACA,GAAAooB,IAAA6O,EAAA15B,EAAA2I,EAAAlG,GAAAA,GAAAqoB,GAAA6O,EAAA35B,EAAAyC,EACAwuD,GAAApmC,IAAAomC,EAAApmC,GACAqmC,EAAApmC,IAAAomC,EAAApmC,GACAD,EAAAsmC,IAAAA,EAAAtmC,GACAC,EAAAsmC,IAAAA,EAAAtmC,GACAimC,EAAAtvD,KAAAopB,GACAmmC,EAAAvvD,KAAAqpB,GAGA,GAAAd,GAAAmnC,EAAAF,EAAAhnC,EAAAmnC,EAAAF,CACAlnC,GAAAC,EAAAmnC,EAAAF,EAAAlnC,EAAAmnC,EAAAF,EAAAhnC,CA6BA,IAAAiR,GAAAR,IAWA,IAVAQ,EAAAl0B,IAAA,SAAAhH,GACA02B,EAAAwE,EAAAl7B,GAAA05B,EAAA15B,IAAAyC,IAAAk3B,EAAA35B,EAAAyC,GAAAwuD,EAAAC,EAAAC,EAAAC,IAEAl2B,EAAAo2B,MAAA,SAAAxkD,GACA+tB,GAAA/tB,EAAAouB,EAAA+1B,EAAAC,EAAAC,EAAAC,IAEAl2B,EAAAG,KAAA,SAAApvB,GACA,MAAAgvB,IAAAC,EAAAjvB,EAAA,GAAAA,EAAA,GAAAglD,EAAAC,EAAAC,EAAAC,IAEA3uD,EAAA,GACA,MAAAinB,EAAA,CACA,OAAAjnB,EAAAC,GACAg0B,EAAAwE,EAAAvyB,EAAAlG,GAAAsuD,EAAAtuD,GAAAuuD,EAAAvuD,GAAAwuD,EAAAC,EAAAC,EAAAC,KAEA3uD,MACAkG,GAAAuK,QAAAgoB,EAAAl0B,IAEA,OADA+pD,GAAAC,EAAAroD,EAAA3I,EAAA,KACAk7B,EArFA,GAAAm2B,GAAAjyD,EAAAq0B,GAAAzmB,EAAA0mB,EACA,QAAA29B,EAAAzxD,UAAA5C,SACAoC,EAAAo7B,GACAxtB,EAAAytB,GACA,IAAA42B,IACAriC,EAAArF,EACAoF,EAAArF,EACAC,EAAAD,EAAA,GAEAgnC,EAAA5sC,KA8EA4sC,EAAAtxD,EAAA,SAAA0B,GACA,MAAAlB,WAAA5C,QAAAoC,EAAA0B,EAAA4vD,GAAAtxD,GAEAsxD,EAAA1jD,EAAA,SAAAlM,GACA,MAAAlB,WAAA5C,QAAAgQ,EAAAlM,EAAA4vD,GAAA1jD,GAEA0jD,EAAAh5B,OAAA,SAAA52B,GACA,MAAAlB,WAAA5C,QACA,MAAA8D,EAAA4oB,EAAAC,EAAAoF,EAAAC,EAAA,MAAAtF,GAAA5oB,EAAA,GAAA,GAAA6oB,GAAA7oB,EAAA,GAAA,GAAAiuB,GAAAjuB,EAAA,GAAA,GACAkuB,GAAAluB,EAAA,GAAA,IACA4vD,GAHA,MAAAhnC,EAAA,OAAAA,EAAAC,IAAAoF,EAAAC,KAKA0hC,EAAA/uD,KAAA,SAAAb,GACA,MAAAlB,WAAA5C,QACA,MAAA8D,EAAA4oB,EAAAC,EAAAoF,EAAAC,EAAA,MAAAtF,EAAAC,EAAA,EAAAoF,GAAAjuB,EAAA,GAAAkuB,GAAAluB,EAAA,IACA4vD,GAFA,MAAAhnC,EAAA,MAAAqF,EAAArF,EAAAsF,EAAArF,IAIA+mC,IA8DAvyD,GAAAozD,eAAA71B,GASAv9B,GAAAqzD,kBAAAv1B,GAoBA99B,GAAAszD,kBAAAt1B,GAOAh+B,GAAAuzD,kBAAAt1B,EAiCA,IAAAK,IAAA,8CAAAC,GAAA,GAAAt2B,QAAAq2B,GAAAx6B,OAAA,IACA9D,IAAAilB,YAAA8Y,GAMA/9B,GAAAy+B,eAAA,SAAA59B,EAAAC,GACA,GAAAwV,SAAAxV,EACA,QAAA,WAAAwV,EAAAnD,GAAAy3B,IAAA9pC,EAAAmS,gBAAA,oBAAAjK,KAAAlI,GAAAy8B,GAAAU,GAAAn9B,YAAAyP,IAAAgtB,GAAA/9B,MAAAg2C,QAAA10C,GAAA49B,GAAA,WAAApoB,GAAAnV,MAAAL,GAAAg9B,GAAAE,IAAAn9B,EAAAC,KAEAd,GAAAwzD,iBAAA90B,EAWA,IAAA+0B,IAAA,WACA,MAAA9vD,IAEA+vD,GAAA1zD,GAAAwI,KACAogC,OAAA6qB,GACAE,KAAAt0B,GACA+D,KAAA,WACA,MAAAnE,KAEA20B,MAAA,WACA,MAAA10B,KAEA5uB,IAAA,WACA,MAAAgvB,KAEApvB,IAAA,WACA,MAAAqvB,KAEA7I,OAAA,WACA,MAAA8I,KAEAq0B,QAAAp0B,GACAq0B,KAAAp0B,GACAq0B,OAAA,WACA,MAAAp0B,OAGAq0B,GAAAh0D,GAAAwI,KACAyrD,KAAAtwD,EACAuwD,IAAAn1B,GACAo1B,SAAAn1B,GACAo1B,SAAA,SAAAzlD,GACA,MAAAqwB,IAAAD,GAAApwB,MAGA3O,IAAAuxC,KAAA,SAAAptC,GACA,GAAAG,GAAAH,EAAAhF,QAAA,KAAAmX,EAAAhS,GAAA,EAAAH,EAAAlB,MAAA,EAAAqB,GAAAH,EAAA8G,EAAA3G,GAAA,EAAAH,EAAAlB,MAAAqB,EAAA,GAAA,IAGA,OAFAgS,GAAAo9C,GAAAruD,IAAAiR,IAAAm9C,GACAxoD,EAAA+oD,GAAA3uD,IAAA4F,IAAAtH,EACAm7B,GAAA7zB,EAAAqL,EAAAtS,MAAA,KAAAovC,GAAAjnC,KAAA1K,UAAA,OA4DAzB,GAAAq0D,eAAAz0B,GAWA5/B,GAAAs0D,eAAAl0B,GAWApgC,GAAAu0D,eAAAj0B,GASAtgC,GAAAw0D,iBAAA9zB,GAOA1gC,GAAAshC,UAAA,SAAA/mB,GACA,GAAA9I,GAAAqhC,GAAA9oC,gBAAAhK,GAAA4H,GAAA4Q,OAAA7K,IAAA,IACA,QAAA3N,GAAAshC,UAAA,SAAA/mB,GACA,GAAA,MAAAA,EAAA,CACA9I,EAAAlK,aAAA,YAAAgT,EACA,IAAAjE,GAAA7E,EAAA6vB,UAAAmzB,QAAAC,cAEA,MAAA,IAAA/zB,IAAArqB,EAAAA,EAAA6+B,OAAAwf,MACAp6C,IAeAomB,GAAAr+B,UAAAsQ,SAAA,WACA,MAAA,aAAAlQ,KAAA6vB,UAAA,WAAA7vB,KAAA2jB,OAAA,UAAA3jB,KAAA0+B,KAAA,UAAA1+B,KAAAuU,MAAA,IAkBA,IAAA09C,KACA9zD,EAAA,EACAC,EAAA,EACA6H,EAAA,EACA9G,EAAA,EACAgE,EAAA,EACA8I,EAAA,EAEA3O,IAAA40D,qBAAAvzB,GAiEArhC,GAAA60D,UACA70D,GAAA60D,OAAAC,OAAA,WACA,MAAA,UAAAlxB,GAEA,IADA,GAAAmxB,MAAAzwD,EAAA,GAAAC,EAAAq/B,EAAA/kC,SACAyF,EAAAC,GAAAwwD,EAAAzxD,KAAA2+B,GAAA2B,EAAAt/B,IACA,OAAAywD,KAoCA/0D,GAAA60D,OAAAG,MAAA,WAEA,QAAAC,KACA,GAAAlzD,GAAAd,EAAA2iB,EAAAtf,EAAA0G,EAAAisC,KAAAie,KAAAC,EAAAn1D,GAAA6Z,MAAAtV,GAAA6wD,IAIA,KAHAC,KACA9uD,KACAxE,EAAA,EAAAuC,EAAA,KACAA,EAAAC,GAAA,CAEA,IADAtD,EAAA,EAAA+J,EAAA,KACAA,EAAAzG,GACAtD,GAAAk0C,EAAA7wC,GAAA0G,EAEAkqD,GAAA5xD,KAAArC,GACAm0D,EAAA9xD,KAAAtD,GAAA6Z,MAAAtV,IACAxC,GAAAd,EAgBA,IAdAq0D,GACAH,EAAA3vC,KAAA,SAAA3kB,EAAAC,GACA,MAAAw0D,GAAAJ,EAAAr0D,GAAAq0D,EAAAp0D,MAGAy0D,GACAH,EAAArgD,QAAA,SAAAlT,EAAAyC,GACAzC,EAAA2jB,KAAA,SAAA3kB,EAAAC,GACA,MAAAy0D,GAAApgB,EAAA7wC,GAAAzD,GAAAs0C,EAAA7wC,GAAAxD,QAIAiB,GAAAonB,GAAA5a,EAAAhK,GAAAxC,EACAd,EAAA,EAAAqD,EAAA,KACAA,EAAAC,GAAA,CAEA,IADAqf,EAAA3iB,EAAA+J,EAAA,KACAA,EAAAzG,GAAA,CACA,GAAAixD,GAAAL,EAAA7wD,GAAAmxD,EAAAL,EAAAI,GAAAxqD,GAAA6F,EAAAskC,EAAAqgB,GAAAC,GAAAzlC,EAAA/uB,EAAAqrB,EAAArrB,GAAA4P,EAAA9O,CACAk1C,GAAAue,EAAA,IAAAC,IACAj3B,MAAAg3B,EACAE,SAAAD,EACAxpB,WAAAjc,EACAmc,SAAA7f,EACA/pB,MAAAsO,GAGAtK,EAAAivD,IACAh3B,MAAAg3B,EACAvpB,WAAAroB,EACAuoB,SAAAlrC,EACAsB,OAAAtB,EAAA2iB,GAAA7hB,GAEAd,GAAAsN,EAGA,IADAjK,EAAA,KACAA,EAAAC,GAEA,IADAyG,EAAA1G,EAAA,IACA0G,EAAAzG,GAAA,CACA,GAAAT,GAAAmzC,EAAA3yC,EAAA,IAAA0G,GAAAnH,EAAAozC,EAAAjsC,EAAA,IAAA1G,IACAR,EAAAvB,OAAAsB,EAAAtB,QACA8yD,EAAA/xD,KAAAQ,EAAAvB,MAAAsB,EAAAtB,OACAuB,OAAAD,EACAA,OAAAC,IAEAA,OAAAA,EACAD,OAAAA,IAKA8xD,GAAAC,IAEA,QAAAA,KACAP,EAAA7vC,KAAA,SAAA3kB,EAAAC,GACA,MAAA60D,IAAA90D,EAAAiD,OAAAvB,MAAA1B,EAAAgD,OAAAtB,OAAA,GAAAzB,EAAAgD,OAAAvB,MAAAzB,EAAA+C,OAAAtB,OAAA,KArEA,GAAA8yD,GAAA9uD,EAAA4uC,EAAA5wC,EAAA+wD,EAAAC,EAAAI,EAAAX,KAAAzmD,EAAA,CA8GA,OAtCAymD,GAAA7f,OAAA,SAAAl0C,GACA,MAAAQ,WAAA5C,QACA0F,GAAA4wC,EAAAl0C,IAAAk0C,EAAAt2C,OACAw2D,EAAA9uD,EAAA,KACAyuD,GAHA7f,GAKA6f,EAAAzmD,QAAA,SAAAtN,GACA,MAAAQ,WAAA5C,QACA0P,EAAAtN,EACAo0D,EAAA9uD,EAAA,KACAyuD,GAHAzmD,GAKAymD,EAAAM,WAAA,SAAAr0D,GACA,MAAAQ,WAAA5C,QACAy2D,EAAAr0D,EACAo0D,EAAA9uD,EAAA,KACAyuD,GAHAM,GAKAN,EAAAO,cAAA,SAAAt0D,GACA,MAAAQ,WAAA5C,QACA02D,EAAAt0D,EACAo0D,EAAA,KACAL,GAHAO,GAKAP,EAAAW,WAAA,SAAA10D,GACA,MAAAQ,WAAA5C,QACA82D,EAAA10D,EACAo0D,GAAAO,IACAZ,GAHAW,GAKAX,EAAAK,OAAA,WAEA,MADAA,IAAAJ,IACAI,GAEAL,EAAAzuD,OAAA,WAEA,MADAA,IAAA0uD,IACA1uD,GAEAyuD,GAEAh1D,GAAA60D,OAAAgB,MAAA,WAEA,QAAAC,GAAAx1D,GACA,MAAA,UAAA8iC,EAAA7X,EAAA5oB,EAAAiuB,GACA,GAAAwS,EAAAt1B,QAAAxN,EAAA,CACA,GAAAurB,GAAAuX,EAAAhf,GAAA9jB,EAAAW,EAAA6qB,EAAAsX,EAAA/e,GAAA/jB,EAAAuO,EAAAknD,EAAAnlC,EAAArF,EAAAyqC,EAAAnqC,EAAAA,EAAAC,EAAAA,CACA,IAAAkqC,EAAAD,EAAAA,EAAAE,EAAA,CACA,GAAAC,EAAAF,EAAA,CACA,GAAAj0D,GAAAqhC,EAAAG,OAAAyyB,CACA11D,GAAA0iC,IAAAnX,EAAA9pB,EACAzB,EAAA2iC,IAAAnX,EAAA/pB,EAEA,OAAA,EAEA,GAAAqhC,EAAAt1B,OAAAkoD,GAAAE,EAAAF,EAAA,CACA,GAAAj0D,GAAAqhC,EAAAK,YAAAuyB,CACA11D,GAAA0iC,IAAAnX,EAAA9pB,EACAzB,EAAA2iC,IAAAnX,EAAA/pB,GAGA,OAAAqhC,EAAAG,QAuLA,QAAA4yB,GAAAt0D,GACAA,EAAAmhC,GAAAhjC,GAAA8E,MAAA7D,EAAAY,EAAAohC,GAAAjjC,GAAA8E,MAAA+J,EACAgnD,EAAAO,SA5MA,GAAA7c,GAAAlW,EAAAgzB,EAAAC,EAAAhzB,EAAAuyB,KAAA/wD,EAAA9E,GAAA6E,SAAA,QAAA,OAAA,OAAArB,GAAA,EAAA,GAAA+yD,EAAA,GAAAC,EAAAC,GAAAC,EAAAC,GAAApzB,EAAA,IAAA2yB,EAAAU,GAAAC,EAAA,GAAAZ,EAAA,IAAAx5B,KAAAmH,IA8MA,OAxLAiyB,GAAAlkB,KAAA,WACA,IAAAtO,GAAA,KAAA,KAKA,MAJAv+B,GAAA80B,KACAvzB,KAAA,MACAg9B,MAAAA,EAAA,KAEA,CAEA,IAAApY,GAAA3mB,EAAAqI,EAAA/G,EAAA0Q,EAAAvR,EAAAhD,EAAAd,EAAA4N,EAAAtK,EAAAk4B,EAAA59B,OAAAoM,EAAA24B,EAAA/kC,MACA,KAAAyF,EAAA,EAAA2G,EAAA3G,IAAAA,EACAqI,EAAAi3B,EAAAt/B,GACAsB,EAAA+G,EAAA7I,OACAwS,EAAA3J,EAAA9I,OACA5C,EAAAqV,EAAArV,EAAA2E,EAAA3E,EACA4N,EAAAyH,EAAAzH,EAAAjJ,EAAAiJ,GACA9J,EAAA9D,EAAAA,EAAA4N,EAAAA,KACA9J,EAAAs+B,EAAAizB,EAAAhyD,KAAAS,EAAA1F,KAAAgT,KAAAtN,IAAAsxD,EAAA/xD,IAAAS,EACA9D,GAAA8D,EACA8J,GAAA9J,EACAuR,EAAArV,GAAAA,GAAAc,EAAA6D,EAAAkxD,QAAAxgD,EAAAwgD,OAAAlxD,EAAAkxD,SACAxgD,EAAAzH,GAAAA,EAAA9M,EACA6D,EAAA3E,GAAAA,GAAAc,EAAA,EAAAA,GACA6D,EAAAiJ,GAAAA,EAAA9M,EAGA,KAAAA,EAAAshC,EAAAwzB,KACA51D,EAAAuC,EAAA,GAAA,EACAqL,EAAArL,EAAA,GAAA,EACAc,EAAA,GACAvC,GAAA,OAAAuC,EAAAC,GACAoI,EAAA8vB,EAAAn4B,GACAqI,EAAA1L,IAAAA,EAAA0L,EAAA1L,GAAAc,EACA4K,EAAAkC,IAAAA,EAAAlC,EAAAkC,GAAA9M,CAGA,IAAAwhC,EAGA,IAFAJ,GAAAlY,EAAAjrB,GAAAsxD,KAAAiB,SAAA91B,GAAA4G,EAAAC,GACAh/B,EAAA,KACAA,EAAAC,IACAoI,EAAA8vB,EAAAn4B,IAAAu+B,OACA5X,EAAAkoC,MAAA2C,EAAAnpD,GAKA,KADArI,EAAA,KACAA,EAAAC,GACAoI,EAAA8vB,EAAAn4B,GACAqI,EAAAk2B,OACAl2B,EAAA1L,EAAA0L,EAAAq2B,GACAr2B,EAAAkC,EAAAlC,EAAAs2B,KAEAt2B,EAAA1L,IAAA0L,EAAAq2B,IAAAr2B,EAAAq2B,GAAAr2B,EAAA1L,IAAAs1D,EACA5pD,EAAAkC,IAAAlC,EAAAs2B,IAAAt2B,EAAAs2B,GAAAt2B,EAAAkC,IAAA0nD,EAGAzxD,GAAA6sC,MACAtrC,KAAA,OACAg9B,MAAAA,KAGAwyB,EAAAp5B,MAAA,SAAAx7B,GACA,MAAAQ,WAAA5C,QACA49B,EAAAx7B,EACA40D,GAFAp5B,GAIAo5B,EAAAjyB,MAAA,SAAA3iC,GACA,MAAAQ,WAAA5C,QACA+kC,EAAA3iC,EACA40D,GAFAjyB,GAIAiyB,EAAAryD,KAAA,SAAAvC,GACA,MAAAQ,WAAA5C,QACA2E,EAAAvC,EACA40D,GAFAryD,GAIAqyD,EAAAW,aAAA,SAAAv1D,GACA,MAAAQ,WAAA5C,QACA23D,EAAA,kBAAAv1D,GAAAA,GAAAA,EACA40D,GAFAW,GAIAX,EAAA1hC,SAAA0hC,EAAAW,aACAX,EAAAa,aAAA,SAAAz1D,GACA,MAAAQ,WAAA5C,QACA63D,EAAA,kBAAAz1D,GAAAA,GAAAA,EACA40D,GAFAa,GAIAb,EAAAU,SAAA,SAAAt1D,GACA,MAAAQ,WAAA5C,QACA03D,GAAAt1D,EACA40D,GAFAU,GAIAV,EAAAtyB,OAAA,SAAAtiC,GACA,MAAAQ,WAAA5C,QACA0kC,EAAA,kBAAAtiC,GAAAA,GAAAA,EACA40D,GAFAtyB,GAIAsyB,EAAAkB,eAAA,SAAA91D,GACA,MAAAQ,WAAA5C,QACAq3D,EAAAj1D,EAAAA,EACA40D,GAFAx2D,KAAAgT,KAAA6jD,IAIAL,EAAAgB,QAAA,SAAA51D,GACA,MAAAQ,WAAA5C,QACAg4D,GAAA51D,EACA40D,GAFAgB,GAIAhB,EAAAmB,MAAA,SAAA/1D,GACA,MAAAQ,WAAA5C,QACAo3D,EAAAh1D,EAAAA,EACA40D,GAFAx2D,KAAAgT,KAAA4jD,IAIAJ,EAAAxyB,MAAA,SAAApiC,GACA,MAAAQ,WAAA5C,QACAoC,GAAAA,EACAoiC,EACAA,EAAApiC,EAAA,EAAAA,EAAA,EACAA,EAAA,IACA6D,EAAA8gB,OACAvf,KAAA,QACAg9B,MAAAA,EAAApiC,IAEAjB,GAAAwxC,MAAAqkB,EAAAlkB,OAEAkkB,GAXAxyB,GAaAwyB,EAAAjwC,MAAA,WA0BA,QAAAxX,GAAA6oD,EAAAzzD,GACA,IAAA0zD,EAAA,CAEA,IADAA,EAAA,GAAA13D,OAAA+E,GACAyG,EAAA,EAAAzG,EAAAyG,IAAAA,EACAksD,EAAAlsD,KAEA,KAAAA,EAAA,EAAAC,EAAAD,IAAAA,EAAA,CACA,GAAA2B,GAAAi3B,EAAA54B,EACAksD,GAAAvqD,EAAA7I,OAAA06B,OAAAl7B,KAAAqJ,EAAA9I,QACAqzD,EAAAvqD,EAAA9I,OAAA26B,OAAAl7B,KAAAqJ,EAAA7I,SAIA,IADA,GAAA7C,GAAAk2D,EAAAD,EAAA5yD,GAAA0G,EAAA,GAAAjG,EAAAoyD,EAAAt4D,SACAmM,EAAAjG,GAAA,IAAA5D,MAAAF,EAAAk2D,EAAAnsD,GAAAisD,IAAA,MAAAh2D,EACA,OAAA5B,MAAAmkC,SAAAhgC,EAvCA,GAAAc,GAAA4yD,EAAAvqD,EAAApI,EAAAk4B,EAAA59B,OAAAoM,EAAA24B,EAAA/kC,OAAAqO,EAAA1J,EAAA,GAAAiN,EAAAjN,EAAA,EACA,KAAAc,EAAA,EAAAC,EAAAD,IAAAA,GACAqI,EAAA8vB,EAAAn4B,IAAAk6B,MAAAl6B,EACAqI,EAAAmqD,OAAA,CAEA,KAAAxyD,EAAA,EAAA2G,EAAA3G,IAAAA,EACAqI,EAAAi3B,EAAAt/B,GACA,gBAAAqI,GAAA7I,SAAA6I,EAAA7I,OAAA24B,EAAA9vB,EAAA7I,SACA,gBAAA6I,GAAA9I,SAAA8I,EAAA9I,OAAA44B,EAAA9vB,EAAA9I,WACA8I,EAAA7I,OAAAgzD,SACAnqD,EAAA9I,OAAAizD,MAEA,KAAAxyD,EAAA,EAAAC,EAAAD,IAAAA,EACAqI,EAAA8vB,EAAAn4B,GACAnD,MAAAwL,EAAA1L,KAAA0L,EAAA1L,EAAAmN,EAAA,IAAAlB,IACA/L,MAAAwL,EAAAkC,KAAAlC,EAAAkC,EAAAT,EAAA,IAAAqC,IACAtP,MAAAwL,EAAAq2B,MAAAr2B,EAAAq2B,GAAAr2B,EAAA1L,GACAE,MAAAwL,EAAAs2B,MAAAt2B,EAAAs2B,GAAAt2B,EAAAkC,EAGA,IADAwnD,KACA,kBAAAG,GAAA,IAAAlyD,EAAA,EAAA2G,EAAA3G,IAAAA,EAAA+xD,EAAA/xD,IAAAkyD,EAAArqD,KAAAzJ,KAAAkhC,EAAAt/B,GAAAA,OAAA,KAAAA,EAAA,EAAA2G,EAAA3G,IAAAA,EAAA+xD,EAAA/xD,GAAAkyD,CAEA,IADAF,KACA,kBAAAI,GAAA,IAAApyD,EAAA,EAAA2G,EAAA3G,IAAAA,EAAAgyD,EAAAhyD,IAAAoyD,EAAAvqD,KAAAzJ,KAAAkhC,EAAAt/B,GAAAA,OAAA,KAAAA,EAAA,EAAA2G,EAAA3G,IAAAA,EAAAgyD,EAAAhyD,GAAAoyD,CAEA,IADApzB,KACA,kBAAAC,GAAA,IAAAj/B,EAAA,EAAAC,EAAAD,IAAAA,EAAAg/B,EAAAh/B,IAAAi/B,EAAAp3B,KAAAzJ,KAAA+5B,EAAAn4B,GAAAA,OAAA,KAAAA,EAAA,EAAAC,EAAAD,IAAAA,EAAAg/B,EAAAh/B,GAAAi/B,CAiBA,OAAAsyB,GAAAO,UAEAP,EAAAO,OAAA,WACA,MAAAP,GAAAxyB,MAAA,KAEAwyB,EAAAhuB,KAAA,WACA,MAAAguB,GAAAxyB,MAAA,IAEAwyB,EAAAtc,KAAA,WAEA,MADAA,KAAAA,EAAAv5C,GAAAq2C,SAAAkD,OAAAgB,OAAA52C,GAAAuB,GAAA,kBAAA09B,IAAA19B,GAAA,aAAAixD,GAAAjxD,GAAA,gBAAA49B,KACArhC,UAAA5C,WACA6D,MAAAwC,GAAA,kBAAA69B,IAAA79B,GAAA,iBAAAg+B,IAAA/2B,KAAAotC,GADAA,GAOAv5C,GAAAsV,OAAAugD,EAAA/wD,EAAA,MA0CA,IAAA2xD,IAAA,GAAAE,GAAA,EAAAC,GAAAngD,EAAAA,CACAzW,IAAA60D,OAAAlxB,UAAA,WAEA,QAAAA,GAAA5G,GACA,GAAAz8B,GAAA82D,GAAAr6B,GAAAN,IAEA,KADAM,EAAAxM,MAAA,EACA,OAAAjwB,EAAA82D,EAAApwC,QAEA,GADAyV,EAAAn5B,KAAAhD,IACA+2D,EAAAx6B,EAAA1wB,KAAAw3B,EAAArjC,EAAAA,EAAAiwB,UAAAhsB,EAAA8yD,EAAAx4D,QAAA,CAEA,IADA,GAAA0F,GAAA8yD,EAAAjzB,IACA7/B,GAAA,GACA6yD,EAAA9zD,KAAA8gC,EAAAizB,EAAA9yD,IACA6/B,EAAAh6B,OAAA9J,EACA8jC,EAAA7T,MAAAjwB,EAAAiwB,MAAA,CAEAhuB,KAAAjC,EAAAiC,MAAA,GACAjC,EAAAu8B,SAAAw6B,MAEA90D,KAAAjC,EAAAiC,OAAAA,EAAA4J,KAAAw3B,EAAArjC,EAAAA,EAAAiwB,QAAA,SACAjwB,GAAAu8B,QAQA,OALAkH,IAAAhH,EAAA,SAAAz8B,GACA,GAAA+2D,GAAAjtD,CACAob,KAAA6xC,EAAA/2D,EAAAu8B,WAAAw6B,EAAA7xC,KAAAA,GACAjjB,IAAA6H,EAAA9J,EAAA8J,UAAAA,EAAA7H,OAAAjC,EAAAiC,SAEAk6B,EAzBA,GAAAjX,GAAA2e,GAAAtH,EAAAoH,GAAA1hC,EAAA2hC,EAuDA,OA5BAP,GAAAne,KAAA,SAAAvkB,GACA,MAAAQ,WAAA5C,QACA2mB,EAAAvkB,EACA0iC,GAFAne,GAIAme,EAAA9G,SAAA,SAAA57B,GACA,MAAAQ,WAAA5C,QACAg+B,EAAA57B,EACA0iC,GAFA9G,GAIA8G,EAAAphC,MAAA,SAAAtB,GACA,MAAAQ,WAAA5C,QACA0D,EAAAtB,EACA0iC,GAFAphC,GAIAohC,EAAA2zB,QAAA,SAAAv6B,GAWA,MAVAx6B,KACAuhC,GAAA/G,EAAA,SAAAz8B,GACAA,EAAAu8B,WAAAv8B,EAAAiC,MAAA,KAEAwhC,GAAAhH,EAAA,SAAAz8B,GACA,GAAA8J,EACA9J,GAAAu8B,WAAAv8B,EAAAiC,OAAAA,EAAA4J,KAAAw3B,EAAArjC,EAAAA,EAAAiwB,QAAA,IACAnmB,EAAA9J,EAAA8J,UAAAA,EAAA7H,OAAAjC,EAAAiC,UAGAw6B,GAEA4G,GAkDA3jC,GAAA60D,OAAA0C,UAAA,WAEA,QAAAnpD,GAAA9N,EAAAW,EAAA4qB,EAAAC,GACA,GAAA+Q,GAAAv8B,EAAAu8B,QAKA,IAJAv8B,EAAAW,EAAAA,EACAX,EAAAuO,EAAAvO,EAAAiwB,MAAAzE,EACAxrB,EAAAurB,GAAAA,EACAvrB,EAAAwrB,GAAAA,EACA+Q,IAAAt4B,EAAAs4B,EAAAh+B,QAAA,CACA,GAAA0F,GAAAoE,EAAA9G,EAAAyC,EAAA,EAEA,KADAunB,EAAAvrB,EAAAiC,MAAAspB,EAAAvrB,EAAAiC,MAAA,IACA+B,EAAAC,GACA6J,EAAAzF,EAAAk0B,EAAAv4B,GAAArD,EAAAY,EAAA8G,EAAApG,MAAAspB,EAAAC,GACA7qB,GAAAY,GAIA,QAAA0uB,GAAAjwB,GACA,GAAAu8B,GAAAv8B,EAAAu8B,SAAAh7B,EAAA,CACA,IAAAg7B,IAAAt4B,EAAAs4B,EAAAh+B,QAEA,IADA,GAAA0F,GAAAD,EAAA,KACAA,EAAAC,GAAA1C,EAAAxC,KAAAsT,IAAA9Q,EAAA0uB,EAAAsM,EAAAv4B,IAEA,OAAA,GAAAzC,EAEA,QAAA01D,GAAA11D,EAAAyC,GACA,GAAAm4B,GAAAkH,EAAAx3B,KAAAzJ,KAAAb,EAAAyC,EAEA,OADA8J,GAAAquB,EAAA,GAAA,EAAAj5B,EAAA,GAAAA,EAAA,GAAA+sB,EAAAkM,EAAA,KACAA,EA3BA,GAAAkH,GAAA3jC,GAAA60D,OAAAlxB,YAAAngC,GAAA,EAAA,EAkCA,OALA+zD,GAAA/zD,KAAA,SAAAvC,GACA,MAAAQ,WAAA5C,QACA2E,EAAAvC,EACAs2D,GAFA/zD,GAIAkgC,GAAA6zB,EAAA5zB,IAEA3jC,GAAA60D,OAAA2C,IAAA,WAEA,QAAAA,GAAAhtD,GACA,GAEAqG,GAFAtM,EAAAiG,EAAA3L,OAAAkmC,EAAAv6B,EAAAhC,IAAA,SAAA3G,EAAAyC,GACA,OAAA/B,EAAA4J,KAAAqrD,EAAA31D,EAAAyC,KACAzD,IAAA,kBAAAorC,GAAAA,EAAAjoC,MAAAtB,KAAAjB,WAAAwqC,GAAAzF,GAAA,kBAAA2F,GAAAA,EAAAnoC,MAAAtB,KAAAjB,WAAA0qC,GAAAtrC,EAAA+V,EAAAvX,KAAAwT,IAAAxT,KAAAC,IAAAknC,GAAAjiC,IAAA,kBAAA8nC,GAAAA,EAAAroC,MAAAtB,KAAAjB,WAAA4qC,IAAAhiB,EAAAzT,GAAA,EAAA4vB,EAAA,GAAA,GAAAzkC,GAAAykC,EAAAjiC,EAAA8lB,GAAArqB,GAAAi0C,IAAAlP,GAAAvG,EAAAx+B,GAAA6Z,MAAAtV,GAAAkzD,IAeA,OAdA,OAAAjyC,GAAAgZ,EAAAhZ,KAAAA,IAAAkyC,GAAA,SAAApzD,EAAA0G,GACA,MAAA+5B,GAAA/5B,GAAA+5B,EAAAzgC,IACA,SAAAA,EAAA0G,GACA,MAAAwa,GAAAhb,EAAAlG,GAAAkG,EAAAQ,MAEAwzB,EAAAzpB,QAAA,SAAAzQ,GACAmzD,EAAAnzD,IACAkG,KAAAA,EAAAlG,GACA/B,MAAAsO,EAAAk0B,EAAAzgC,GACA2nC,WAAAprC,EACAsrC,SAAAtrC,GAAAgQ,EAAA9O,EAAAsoB,EACAgiB,SAAAz1B,KAGA6gD,EAnBA,GAAAl1D,GAAAumC,OAAAtjB,EAAAkyC,GAAAzrB,EAAA,EAAAE,EAAAhjB,GAAAkjB,EAAA,CA8CA,OAzBAmrB,GAAAj1D,MAAA,SAAAI,GACA,MAAAlB,WAAA5C,QACA0D,EAAAI,EACA60D,GAFAj1D,GAIAi1D,EAAAhyC,KAAA,SAAA7iB,GACA,MAAAlB,WAAA5C,QACA2mB,EAAA7iB,EACA60D,GAFAhyC,GAIAgyC,EAAAvrB,WAAA,SAAAtpC,GACA,MAAAlB,WAAA5C,QACAotC,EAAAtpC,EACA60D,GAFAvrB,GAIAurB,EAAArrB,SAAA,SAAAxpC,GACA,MAAAlB,WAAA5C,QACAstC,EAAAxpC,EACA60D,GAFArrB,GAIAqrB,EAAAnrB,SAAA,SAAA1pC,GACA,MAAAlB,WAAA5C,QACAwtC,EAAA1pC,EACA60D,GAFAnrB,GAIAmrB,EAEA,IAAAE,MACA13D,IAAA60D,OAAAuC,MAAA,WAEA,QAAAA,GAAA5sD,EAAAg0B,GACA,KAAAj6B,EAAAiG,EAAA3L,QAAA,MAAA2L,EACA,IAAAmtD,GAAAntD,EAAAhC,IAAA,SAAA3G,EAAAyC,GACA,MAAAygC,GAAA54B,KAAAirD,EAAAv1D,EAAAyC,KAEAqhB,EAAAgyC,EAAAnvD,IAAA,SAAA3G,GACA,MAAAA,GAAA2G,IAAA,SAAAqI,EAAAvM,GACA,OAAArD,EAAAkL,KAAAirD,EAAAvmD,EAAAvM,GAAAuK,EAAA1C,KAAAirD,EAAAvmD,EAAAvM,QAGAszD,EAAAxhB,EAAAjqC,KAAAirD,EAAAzxC,EAAA6Y,EACAm5B,GAAA33D,GAAA40C,QAAA+iB,EAAAC,GACAjyC,EAAA3lB,GAAA40C,QAAAjvB,EAAAiyC,EACA,IACArzD,GAAAD,EAAA0G,EAAA2B,EADAkrD,EAAAl+C,EAAAxN,KAAAirD,EAAAzxC,EAAA6Y,GACAvzB,EAAA0sD,EAAA,GAAA94D,MACA,KAAAmM,EAAA,EAAAC,EAAAD,IAAAA,EAEA,IADAkpD,EAAA/nD,KAAAirD,EAAAO,EAAA,GAAA3sD,GAAA2B,EAAAkrD,EAAA7sD,GAAA2a,EAAA,GAAA3a,GAAA,IACA1G,EAAA,EAAAC,EAAAD,IAAAA,EACA4vD,EAAA/nD,KAAAirD,EAAAO,EAAArzD,GAAA0G,GAAA2B,GAAAgZ,EAAArhB,EAAA,GAAA0G,GAAA,GAAA2a,EAAArhB,GAAA0G,GAAA,GAGA,OAAAR,GAtBA,GAAAu6B,GAAAphC,EAAAyyC,EAAA5R,GAAA7qB,EAAA8qB,GAAAyvB,EAAA3vB,GAAAtjC,EAAAojC,GAAAx1B,EAAAy1B,EAsDA,OA9BA8yB,GAAAryB,OAAA,SAAA9jC,GACA,MAAAQ,WAAA5C,QACAkmC,EAAA9jC,EACAm2D,GAFAryB,GAIAqyB,EAAAhhB,MAAA,SAAAn1C,GACA,MAAAQ,WAAA5C,QACAu3C,EAAA,kBAAAn1C,GAAAA,EAAA62D,GAAAzyD,IAAApE,IAAAujC,GACA4yB,GAFAhhB,GAIAghB,EAAAz9C,OAAA,SAAA1Y,GACA,MAAAQ,WAAA5C,QACA8a,EAAA,kBAAA1Y,GAAAA,EAAA82D,GAAA1yD,IAAApE,IAAAwjC,GACA2yB,GAFAz9C,GAIAy9C,EAAAn2D,EAAA,SAAA+D,GACA,MAAAvD,WAAA5C,QACAoC,EAAA+D,EACAoyD,GAFAn2D,GAIAm2D,EAAAvoD,EAAA,SAAA7J,GACA,MAAAvD,WAAA5C,QACAgQ,EAAA7J,EACAoyD,GAFAvoD,GAIAuoD,EAAAlD,IAAA,SAAAlvD,GACA,MAAAvD,WAAA5C,QACAq1D,EAAAlvD,EACAoyD,GAFAlD,GAIAkD,EAYA,IAAAU,IAAA93D,GAAAwI,KACAwvD,aAAA,SAAAxtD,GACA,GAAAlG,GAAA0G,EAAAzG,EAAAiG,EAAA3L,OAAA8T,EAAAnI,EAAAhC,IAAAk8B,IAAAuzB,EAAAztD,EAAAhC,IAAAm8B,IAAAnG,EAAAx+B,GAAA6Z,MAAAtV,GAAAihB,KAAA,SAAA3kB,EAAAC,GACA,MAAA6R,GAAA9R,GAAA8R,EAAA7R,KACAuN,EAAA,EAAA6pD,EAAA,EAAAC,KAAAC,IACA,KAAA9zD,EAAA,EAAAC,EAAAD,IAAAA,EACA0G,EAAAwzB,EAAAl6B,GACA4zD,EAAA7pD,GACAA,GAAA4pD,EAAAjtD,GACAmtD,EAAA70D,KAAA0H,KAEAktD,GAAAD,EAAAjtD,GACAotD,EAAA90D,KAAA0H,GAGA,OAAAotD,GAAApgD,UAAA1S,OAAA6yD,IAEAngD,QAAA,SAAAxN,GACA,MAAAxK,IAAA6Z,MAAArP,EAAA3L,QAAAmZ,WAEAqgD,UAAA7zB,KAEAuzB,GAAA/3D,GAAAwI,KACA8vD,WAAA,SAAA9tD,GACA,GAAAlG,GAAA0G,EAAA2B,EAAApI,EAAAiG,EAAA3L,OAAAoM,EAAAT,EAAA,GAAA3L,OAAAo5D,KAAAtlD,EAAA,EAAA+Q,IACA,KAAA1Y,EAAA,EAAAC,EAAAD,IAAAA,EAAA,CACA,IAAA1G,EAAA,EAAAqI,EAAA,EAAApI,EAAAD,EAAAA,IAAAqI,GAAAnC,EAAAlG,GAAA0G,GAAA,EACA2B,GAAAgG,IAAAA,EAAAhG,GACAsrD,EAAA30D,KAAAqJ,GAEA,IAAA3B,EAAA,EAAAC,EAAAD,IAAAA,EACA0Y,EAAA1Y,IAAA2H,EAAAslD,EAAAjtD,IAAA,CAEA,OAAA0Y,IAEA60C,OAAA,SAAA/tD,GACA,GAAAlG,GAAA0G,EAAAjJ,EAAAokC,EAAAC,EAAAoyB,EAAA3sC,EAAAlf,EAAA8rD,EAAAl0D,EAAAiG,EAAA3L,OAAAoC,EAAAuJ,EAAA,GAAAS,EAAAhK,EAAApC,OAAA6kB,IAEA,KADAA,EAAA,GAAA/W,EAAA8rD,EAAA,EACAztD,EAAA,EAAAC,EAAAD,IAAAA,EAAA,CACA,IAAA1G,EAAA,EAAA6hC,EAAA,EAAA5hC,EAAAD,IAAAA,EAAA6hC,GAAA37B,EAAAlG,GAAA0G,GAAA,EACA,KAAA1G,EAAA,EAAA8hC,EAAA,EAAAva,EAAA5qB,EAAA+J,GAAA,GAAA/J,EAAA+J,EAAA,GAAA,GAAAzG,EAAAD,IAAAA,EAAA,CACA,IAAAvC,EAAA,EAAAy2D,GAAAhuD,EAAAlG,GAAA0G,GAAA,GAAAR,EAAAlG,GAAA0G,EAAA,GAAA,KAAA,EAAA6gB,GAAAvnB,EAAAvC,IAAAA,EACAy2D,IAAAhuD,EAAAzI,GAAAiJ,GAAA,GAAAR,EAAAzI,GAAAiJ,EAAA,GAAA,IAAA6gB,CAEAua,IAAAoyB,EAAAhuD,EAAAlG,GAAA0G,GAAA,GAEA0Y,EAAA1Y,GAAA2B,GAAAw5B,EAAAC,EAAAD,EAAAta,EAAA,EACA4sC,EAAA9rD,IAAA8rD,EAAA9rD,GAEA,IAAA3B,EAAA,EAAAC,EAAAD,IAAAA,EAAA0Y,EAAA1Y,IAAAytD,CACA,OAAA/0C,IAEAg1C,OAAA,SAAAluD,GACA,GAAAlG,GAAA0G,EAAA2B,EAAApI,EAAAiG,EAAA3L,OAAAoM,EAAAT,EAAA,GAAA3L,OAAAkD,EAAA,EAAAwC,EAAAmf,IACA,KAAA1Y,EAAA,EAAAC,EAAAD,IAAAA,EAAA,CACA,IAAA1G,EAAA,EAAAqI,EAAA,EAAApI,EAAAD,EAAAA,IAAAqI,GAAAnC,EAAAlG,GAAA0G,GAAA,EACA,IAAA2B,EAAA,IAAArI,EAAA,EAAAC,EAAAD,EAAAA,IAAAkG,EAAAlG,GAAA0G,GAAA,IAAA2B,MAAA,KAAArI,EAAA,EAAAC,EAAAD,EAAAA,IAAAkG,EAAAlG,GAAA0G,GAAA,GAAAjJ,EAEA,IAAAiJ,EAAA,EAAAC,EAAAD,IAAAA,EAAA0Y,EAAA1Y,GAAA,CACA,OAAA0Y,IAEAi1C,KAAAl0B,IA0BAzkC,IAAA60D,OAAA+D,UAAA,WAEA,QAAAA,GAAApuD,EAAAlG,GAEA,IADA,GAAAu0D,GAAA53D,EAAA63D,KAAA/zB,EAAAv6B,EAAAhC,IAAAuwD,EAAAr2D,MAAAmX,EAAA2wB,EAAAr+B,KAAAzJ,KAAAqiC,EAAAzgC,GAAA6mC,EAAA6tB,EAAA7sD,KAAAzJ,KAAAmX,EAAAkrB,EAAAzgC,GAAAA,EAAA,GAAAC,EAAAwgC,EAAAlmC,OAAAoM,EAAAkgC,EAAAtsC,OAAA,EAAAkD,EAAAk3D,EAAA,EAAA,EAAA10D,IACAD,EAAA2G,GACA4tD,EAAAC,EAAAx0D,MACAu0D,EAAAhtC,GAAAsf,EAAA7mC,EAAA,IAAAu0D,EAAA53D,EAAAkqC,EAAA7mC,IACAu0D,EAAAhqD,EAAA,CAEA,IAAA5D,EAAA,EAEA,IADA3G,EAAA,KACAA,EAAAC,GACAtD,EAAA8jC,EAAAzgC,GACArD,GAAA4Y,EAAA,IAAA5Y,GAAA4Y,EAAA,KACAg/C,EAAAC,EAAA94D,GAAAwoC,OAAA2C,EAAAlqC,EAAA,EAAAgK,GAAA,GACA4tD,EAAAhqD,GAAA9M,EACA82D,EAAAv1D,KAAAkH,EAAAlG,IAIA,OAAAw0D,GAnBA,GAAAG,IAAA,EAAAF,EAAAjwB,OAAA0B,EAAAtF,GAAA8zB,EAAAl0B,EA2CA,OAtBA8zB,GAAAr2D,MAAA,SAAAtB,GACA,MAAAQ,WAAA5C,QACAk6D,EAAA93D,EACA23D,GAFAG,GAIAH,EAAA/+C,MAAA,SAAA5Y,GACA,MAAAQ,WAAA5C,QACA2rC,EAAAl3B,GAAArS,GACA23D,GAFApuB,GAIAouB,EAAAE,KAAA,SAAA73D,GACA,MAAAQ,WAAA5C,QACAm6D,EAAA,gBAAA/3D,GAAA,SAAA4Y,GACA,MAAAmrB,IAAAnrB,EAAA5Y,IACAqS,GAAArS,GACA23D,GAJAI,GAMAJ,EAAAK,UAAA,SAAAh4D,GACA,MAAAQ,WAAA5C,QACAo6D,IAAAh4D,EACA23D,GAFAK,GAIAL,GAaA54D,GAAA60D,OAAAqE,KAAA,WAEA,QAAAA,GAAAr3D,EAAAyC,GACA,GAAAm4B,GAAAkH,EAAAx3B,KAAAzJ,KAAAb,EAAAyC,GAAAy4B,EAAAN,EAAA,GAAAvvB,EAAA1J,EAAA,GAAAiN,EAAAjN,EAAA,GAAAgO,EAAA,MAAAgY,EAAAnqB,KAAAgT,KAAA,kBAAAmX,GAAAA,EAAA,WACA,MAAAA,GAOA,IALAuT,EAAA97B,EAAA87B,EAAAluB,EAAA,EACAk1B,GAAAhH,EAAA,SAAAl7B,GACAA,EAAA2P,GAAAA,EAAA3P,EAAAU,SAEAwhC,GAAAhH,EAAA2I,IACAn3B,EAAA,CACA,GAAAk3B,GAAAl3B,GAAAib,EAAA,EAAAnqB,KAAAsT,IAAA,EAAAoqB,EAAAvrB,EAAAtE,EAAA,EAAA6vB,EAAAvrB,EAAAf,IAAA,CACAszB,IAAAhH,EAAA,SAAAl7B,GACAA,EAAA2P,GAAAi0B,IAEA1B,GAAAhH,EAAA2I,IACA3B,GAAAhH,EAAA,SAAAl7B,GACAA,EAAA2P,GAAAi0B,IAIA,MADAa,IAAAvJ,EAAA7vB,EAAA,EAAAuD,EAAA,EAAA+Y,EAAA,EAAA,EAAAnqB,KAAAsT,IAAA,EAAAoqB,EAAAvrB,EAAAtE,EAAA,EAAA6vB,EAAAvrB,EAAAf,IACAgsB,EArBA,GAAAjT,GAAAma,EAAA3jC,GAAA60D,OAAAlxB,YAAAne,KAAA2f,IAAA52B,EAAA,EAAA/K,GAAA,EAAA,EAsCA,OAfA01D,GAAA11D,KAAA,SAAAb,GACA,MAAAlB,WAAA5C,QACA2E,EAAAb,EACAu2D,GAFA11D,GAIA01D,EAAA1vC,OAAA,SAAA7mB,GACA,MAAAlB,WAAA5C,QACA2qB,EAAA,MAAA7mB,GAAA,kBAAAA,GAAAA,GAAAA,EACAu2D,GAFA1vC,GAIA0vC,EAAA3qD,QAAA,SAAA5L,GACA,MAAAlB,WAAA5C,QACA0P,GAAA5L,EACAu2D,GAFA3qD,GAIAm1B,GAAAw1B,EAAAv1B,IAmHA3jC,GAAA60D,OAAAj5B,KAAA,WAEA,QAAAA,GAAA/5B,EAAAyC,GACA,GAAAm4B,GAAAkH,EAAAx3B,KAAAzJ,KAAAb,EAAAyC,GAAA60D,EAAA18B,EAAA,GAAA28B,EAAAC,EAAAF,EAGA,IAFAp1B,GAAAq1B,EAAAE,GAAAF,EAAAhvD,OAAAa,GAAAmuD,EAAAp0D,EACA8+B,GAAAs1B,EAAAG,GACAC,EAAA11B,GAAAq1B,EAAAM,OAAA,CACA,GAAAn4D,GAAA63D,EAAAx3D,EAAAw3D,EAAAjB,EAAAiB,CACAr1B,IAAAq1B,EAAA,SAAA74D,GACAA,EAAAW,EAAAK,EAAAL,IAAAK,EAAAhB,GACAA,EAAAW,EAAAU,EAAAV,IAAAU,EAAArB,GACAA,EAAAiwB,MAAA2nC,EAAA3nC,QAAA2nC,EAAA53D,IAEA,IAAAo5D,GAAAC,EAAAr4D,EAAAK,GAAA,EAAAL,EAAAL,EAAA6/B,EAAAt9B,EAAA,IAAA7B,EAAAV,EAAA04D,EAAAh4D,EAAAL,GAAA,EAAAo4D,GAAAx4B,EAAA19B,EAAA,IAAA00D,EAAA3nC,OAAA,EACAuT,IAAAq1B,EAAA,SAAA74D,GACAA,EAAAW,GAAAX,EAAAW,EAAAy4D,GAAA54B,EACAxgC,EAAAuO,EAAAvO,EAAAiwB,MAAA2Q,IAGA,MAAAzE,GAEA,QAAA48B,GAAAF,GAKA,IAJA,GAGAS,GAHAR,GACAx7C,EAAA,KACAif,UAAAs8B,IACAU,GAAAT,GACA,OAAAQ,EAAAC,EAAA7yC,QACA,IAAA,GAAAod,GAAAvH,EAAA+8B,EAAA/8B,SAAAv4B,EAAA,EAAAC,EAAAs4B,EAAAh+B,OAAA0F,EAAAD,IAAAA,EACAu1D,EAAAv2D,MAAAu5B,EAAAv4B,GAAA8/B,GACAzhC,EAAAk6B,EAAAv4B,GACA8F,OAAAwvD,EACA/8B,UAAAuH,EAAAvH,EAAAv4B,GAAAu4B,WAAAuH,EAAAnhC,YACA2a,EAAA,KACA/c,EAAA,KACAmE,EAAA,EACAiG,EAAA,EACAtC,EAAA,EACA/C,EAAA,EACA0Q,EAAA,KACAhS,EAAAA,IACAzD,EAAAujC,EAGA,OAAAg1B,GAAAv8B,SAAA,GAEA,QAAAy8B,GAAAzoD,GACA,GAAAgsB,GAAAhsB,EAAAgsB,SAAAi9B,EAAAjpD,EAAAzG,OAAAyyB,SAAA3vB,EAAA2D,EAAAvM,EAAAw1D,EAAAjpD,EAAAvM,EAAA,GAAA,IACA,IAAAu4B,EAAAh+B,OAAA,CACAooC,GAAAp2B,EACA,IAAAkpD,IAAAl9B,EAAA,GAAA73B,EAAA63B,EAAAA,EAAAh+B,OAAA,GAAAmG,GAAA,CACAkI,IACA2D,EAAA7L,EAAAkI,EAAAlI,EAAA20D,EAAA9oD,EAAAlO,EAAAuK,EAAAvK,GACAkO,EAAA5F,EAAA4F,EAAA7L,EAAA+0D,GAEAlpD,EAAA7L,EAAA+0D,MAEA7sD,KACA2D,EAAA7L,EAAAkI,EAAAlI,EAAA20D,EAAA9oD,EAAAlO,EAAAuK,EAAAvK,GAEAkO,GAAAzG,OAAAwT,EAAAo8C,EAAAnpD,EAAA3D,EAAA2D,EAAAzG,OAAAwT,GAAAk8C,EAAA,IAEA,QAAAP,GAAA1oD,GACAA,EAAAlO,EAAA1B,EAAA4P,EAAA7L,EAAA6L,EAAAzG,OAAAa,EACA4F,EAAA5F,GAAA4F,EAAAzG,OAAAa,EAEA,QAAA+uD,GAAAnpD,EAAA3D,EAAAk6B,GACA,GAAAl6B,EAAA,CAEA,IADA,GAAAia,GAAA8yC,EAAAppD,EAAAqpD,EAAArpD,EAAAs2B,EAAAj6B,EAAAitD,EAAAF,EAAA7vD,OAAAyyB,SAAA,GAAAu9B,EAAAH,EAAAhvD,EAAAovD,EAAAH,EAAAjvD,EAAAqvD,EAAAnzB,EAAAl8B,EAAAsvD,EAAAJ,EAAAlvD,EACAk8B,EAAAP,GAAAO,GAAA8yB,EAAAtzB,GAAAszB,GAAA9yB,GAAA8yB,GACAE,EAAAxzB,GAAAwzB,GACAD,EAAAtzB,GAAAszB,GACAA,EAAAr5D,EAAAgQ,EACAsW,EAAAggB,EAAAniC,EAAAs1D,EAAAL,EAAAj1D,EAAAo1D,EAAAT,EAAAxyB,EAAAxkC,EAAAs3D,EAAAt3D,GACAwkB,EAAA,IACA0f,GAAAK,GAAAC,EAAAt2B,EAAAu2B,GAAAv2B,EAAAsW,GACAizC,GAAAjzC,EACAkzC,GAAAlzC,GAEAmzC,GAAAnzB,EAAAl8B,EACAmvD,GAAAH,EAAAhvD,EACAsvD,GAAAJ,EAAAlvD,EACAovD,GAAAH,EAAAjvD,CAEAk8B,KAAAP,GAAAszB,KACAA,EAAA5jD,EAAA6wB,EACA+yB,EAAAjvD,GAAAqvD,EAAAD,GAEAJ,IAAAtzB,GAAAwzB,KACAA,EAAA7jD,EAAA2jD,EACAE,EAAAlvD,GAAAmvD,EAAAG,EACAnzB,EAAAv2B,GAGA,MAAAu2B,GAEA,QAAAqyB,GAAAn5D,GACAA,EAAAW,GAAAuC,EAAA,GACAlD,EAAAuO,EAAAvO,EAAAiwB,MAAA/sB,EAAA,GAhGA,GAAAmgC,GAAA3jC,GAAA60D,OAAAlxB,YAAAne,KAAA,MAAAjjB,MAAA,MAAAo3D,EAAAjzB,GAAAljC,GAAA,EAAA,GAAAg2D,EAAA,IAiHA,OAfA59B,GAAA+9B,WAAA,SAAA14D,GACA,MAAAQ,WAAA5C,QACA86D,EAAA14D,EACA26B,GAFA+9B,GAIA/9B,EAAAp4B,KAAA,SAAAvC,GACA,MAAAQ,WAAA5C,QACA26D,EAAA,OAAAh2D,EAAAvC,GAAAw4D,EAAA,KACA79B,GAFA49B,EAAA,KAAAh2D,GAIAo4B,EAAA49B,SAAA,SAAAv4D,GACA,MAAAQ,WAAA5C,QACA26D,EAAA,OAAAh2D,EAAAvC,GAAA,KAAAw4D,EACA79B,GAFA49B,EAAAh2D,EAAA,MAIAkgC,GAAA9H,EAAA+H,IAiCA3jC,GAAA60D,OAAA2F,QAAA,WAEA,QAAAA,GAAA34D,EAAAyC,GACA,GAAAm2D,GAAAh+B,EAAAkH,EAAAx3B,KAAAzJ,KAAAb,EAAAyC,GAAAy4B,EAAAN,EAAA,GAAAx7B,EAAA,CACA8iC,IAAAhH,EAAA,SAAAz8B,GACA,GAAAu8B,GAAAv8B,EAAAu8B,QACAA,IAAAA,EAAAh+B,QACAyB,EAAAW,EAAAqmC,GAAAzK,GACAv8B,EAAAuO,EAAAw4B,GAAAxK,KAEAv8B,EAAAW,EAAAw5D,EAAAx5D,GAAA04D,EAAAr5D,EAAAm6D,GAAA,EACAn6D,EAAAuO,EAAA,EACA4rD,EAAAn6D,IAGA,IAAAgB,GAAAimC,GAAAxK,GAAAp7B,EAAA6lC,GAAAzK,GAAAnZ,EAAAtiB,EAAAL,EAAA04D,EAAAr4D,EAAAK,GAAA,EAAA4pB,EAAA5pB,EAAAV,EAAA04D,EAAAh4D,EAAAL,GAAA,CAQA,OAPAyiC,IAAAhH,EAAAy8B,EAAA,SAAAl5D,GACAA,EAAAW,GAAAX,EAAAW,EAAA87B,EAAA97B,GAAAuC,EAAA,GACAlD,EAAAuO,GAAAkuB,EAAAluB,EAAAvO,EAAAuO,GAAArL,EAAA,IACA,SAAAlD,GACAA,EAAAW,GAAAX,EAAAW,EAAA2iB,IAAA2H,EAAA3H,GAAApgB,EAAA,GACAlD,EAAAuO,GAAA,GAAAkuB,EAAAluB,EAAAvO,EAAAuO,EAAAkuB,EAAAluB,EAAA,IAAArL,EAAA,KAEAi5B,EAtBA,GAAAkH,GAAA3jC,GAAA60D,OAAAlxB,YAAAne,KAAA,MAAAjjB,MAAA,MAAAo3D,EAAAjzB,GAAAljC,GAAA,EAAA,GAAAg2D,GAAA,CAuCA,OAfAgB,GAAAb,WAAA,SAAA14D,GACA,MAAAQ,WAAA5C,QACA86D,EAAA14D,EACAu5D,GAFAb,GAIAa,EAAAh3D,KAAA,SAAAvC,GACA,MAAAQ,WAAA5C,QACA26D,EAAA,OAAAh2D,EAAAvC,GACAu5D,GAFAhB,EAAA,KAAAh2D,GAIAg3D,EAAAhB,SAAA,SAAAv4D,GACA,MAAAQ,WAAA5C,QACA26D,EAAA,OAAAh2D,EAAAvC,GACAu5D,GAFAhB,EAAAh2D,EAAA,MAIAkgC,GAAA82B,EAAA72B,IAoBA3jC,GAAA60D,OAAA6F,QAAA,WAEA,QAAAzjD,GAAA4lB,EAAA96B,GAEA,IADA,GAAAqiC,GAAAoL,EAAAlrC,EAAA,GAAAC,EAAAs4B,EAAAh+B,SACAyF,EAAAC,GACAirC,GAAApL,EAAAvH,EAAAv4B,IAAA/B,OAAA,EAAAR,EAAA,EAAAA,GACAqiC,EAAAoL,KAAAruC,MAAAquC,IAAA,GAAAA,EAAA,EAAAA,EAGA,QAAAmrB,GAAAr6D,GACA,GAAAu8B,GAAAv8B,EAAAu8B,QACA,IAAAA,GAAAA,EAAAh+B,OAAA,CACA,GAAAulC,GAAAw2B,EAAAr2D,EAAA4K,EAAA0rD,EAAAv6D,GAAA2nD,KAAA6S,EAAAj+B,EAAA55B,QAAA6qD,EAAAr3C,EAAAA,EAAAwL,EAAA,UAAA84C,EAAA5rD,EAAA0c,GAAA,SAAAkvC,EAAA5rD,EAAA2c,GAAA,eAAAivC,EAAA,EAAAz6D,EAAAiwB,MAAAphB,EAAA2c,GAAA3c,EAAA0c,GAAAxsB,KAAAwT,IAAA1D,EAAA0c,GAAA1c,EAAA2c,GAGA,KAFA7U,EAAA6jD,EAAA3rD,EAAA0c,GAAA1c,EAAA2c,GAAAxrB,EAAAiC,OACA0lD,EAAAzY,KAAA,GACAjrC,EAAAu2D,EAAAj8D,QAAA,GACAopD,EAAA3kD,KAAA8gC,EAAA02B,EAAAv2D,EAAA,IACA0jD,EAAAzY,MAAApL,EAAAoL,KACA,aAAAurB,IAAAH,EAAAI,EAAA/S,EAAAhmC,KAAA6rC,GACAgN,EAAA9zC,MACA8mC,EAAA8M,IAEA3S,EAAAzY,MAAAyY,EAAAjhC,MAAAwoB,KACAphC,EAAA65C,EAAAhmC,EAAA9S,GAAA,GACA8S,EAAA5iB,KAAAwT,IAAA1D,EAAA0c,GAAA1c,EAAA2c,IACAm8B,EAAAppD,OAAAopD,EAAAzY,KAAA,EACAse,EAAAr3C,EAAAA,EAGAwxC,GAAAppD,SACAuP,EAAA65C,EAAAhmC,EAAA9S,GAAA,GACA84C,EAAAppD,OAAAopD,EAAAzY,KAAA,GAEA3S,EAAA9nB,QAAA4lD,IAGA,QAAAM,GAAA36D,GACA,GAAAu8B,GAAAv8B,EAAAu8B,QACA,IAAAA,GAAAA,EAAAh+B,OAAA,CACA,GAAAulC,GAAAj1B,EAAA0rD,EAAAv6D,GAAAw6D,EAAAj+B,EAAA55B,QAAAglD,IAGA,KAFAhxC,EAAA6jD,EAAA3rD,EAAA0c,GAAA1c,EAAA2c,GAAAxrB,EAAAiC,OACA0lD,EAAAzY,KAAA,EACApL,EAAA02B,EAAA9zC,OACAihC,EAAA3kD,KAAA8gC,GACA6jB,EAAAzY,MAAApL,EAAAoL,KACA,MAAApL,EAAAp/B,IACAoJ,EAAA65C,EAAA7jB,EAAAp/B,EAAAmK,EAAA0c,GAAA1c,EAAA2c,GAAA3c,GAAA2rD,EAAAj8D,QACAopD,EAAAppD,OAAAopD,EAAAzY,KAAA;;AAGA3S,EAAA9nB,QAAAkmD,IAGA,QAAAD,GAAA/S,EAAAhmC,GAEA,IADA,GAAAzQ,GAAA5L,EAAAqiD,EAAAzY,KAAA0rB,EAAA,EAAAC,EAAA1kD,EAAAA,EAAAnS,EAAA,GAAAC,EAAA0jD,EAAAppD,SACAyF,EAAAC,IACAiN,EAAAy2C,EAAA3jD,GAAAkrC,QACA2rB,EAAA3pD,IAAA2pD,EAAA3pD,GACAA,EAAA0pD,IAAAA,EAAA1pD,GAIA,OAFA5L,IAAAA,EACAqc,GAAAA,EACArc,EAAAvG,KAAAsT,IAAAsP,EAAAi5C,EAAAE,EAAAx1D,EAAAA,GAAAqc,EAAAk5C,EAAAC,IAAA3kD,EAAAA,EAEA,QAAArI,GAAA65C,EAAAhmC,EAAA9S,EAAAm6C,GACA,GAAA38C,GAAArI,EAAA,GAAAC,EAAA0jD,EAAAppD,OAAAoC,EAAAkO,EAAAlO,EAAA4N,EAAAM,EAAAN,EAAAgC,EAAAoR,EAAAhR,EAAAg3C,EAAAzY,KAAAvtB,GAAA,CACA,IAAAA,GAAA9S,EAAA0c,GAAA,CAEA,KADAy9B,GAAAz4C,EAAA1B,EAAA2c,MAAAjb,EAAA1B,EAAA2c,MACAxnB,EAAAC,GACAoI,EAAAs7C,EAAA3jD,GACAqI,EAAA1L,EAAAA,EACA0L,EAAAkC,EAAAA,EACAlC,EAAAmf,GAAAjb,EACA5P,GAAA0L,EAAAkf,GAAAxsB,KAAAwT,IAAA1D,EAAAlO,EAAAkO,EAAA0c,GAAA5qB,EAAA4P,EAAAI,EAAAtE,EAAA6iC,KAAA3+B,GAAA,EAEAlE,GAAA3H,GAAA,EACA2H,EAAAkf,IAAA1c,EAAAlO,EAAAkO,EAAA0c,GAAA5qB,EACAkO,EAAAN,GAAAgC,EACA1B,EAAA2c,IAAAjb,MACA,CAEA,KADAy4C,GAAAz4C,EAAA1B,EAAA0c,MAAAhb,EAAA1B,EAAA0c,MACAvnB,EAAAC,GACAoI,EAAAs7C,EAAA3jD,GACAqI,EAAA1L,EAAAA,EACA0L,EAAAkC,EAAAA,EACAlC,EAAAkf,GAAAhb,EACAhC,GAAAlC,EAAAmf,GAAAzsB,KAAAwT,IAAA1D,EAAAN,EAAAM,EAAA2c,GAAAjd,EAAAgC,EAAAI,EAAAtE,EAAA6iC,KAAA3+B,GAAA,EAEAlE,GAAA3H,GAAA,EACA2H,EAAAmf,IAAA3c,EAAAN,EAAAM,EAAA2c,GAAAjd,EACAM,EAAAlO,GAAA4P,EACA1B,EAAA0c,IAAAhb,GAGA,QAAA6pD,GAAA74D,GACA,GAAA46B,GAAA4+B,GAAA13B,EAAA9hC,GAAAk7B,EAAAN,EAAA,EASA,OARAM,GAAA97B,EAAA,EACA87B,EAAAluB,EAAA,EACAkuB,EAAAlR,GAAAroB,EAAA,GACAu5B,EAAAjR,GAAAtoB,EAAA,GACA63D,GAAA13B,EAAA2zB,QAAAv6B,GACA9lB,GAAA8lB,GAAAA,EAAAlR,GAAAkR,EAAAjR,GAAAiR,EAAAx6B,QACA84D,EAAAJ,EAAAN,GAAA59B,GACAu+B,IAAAD,EAAA5+B,GACAA,EAvGA,GAAA4+B,GAAA13B,EAAA3jC,GAAA60D,OAAAlxB,YAAA1yB,EAAA5R,KAAA4R,MAAAzN,GAAA,EAAA,GAAA+K,EAAA,KAAAssD,EAAApzB,GAAA6zB,GAAA,EAAAP,EAAA,WAAAK,EAAA,IAAA,EAAA/7D,KAAAgT,KAAA,GAiJA,OAxCAqoD,GAAAl3D,KAAA,SAAAvC,GACA,MAAAQ,WAAA5C,QACA2E,EAAAvC,EACAy5D,GAFAl3D,GAIAk3D,EAAAnsD,QAAA,SAAAtN,GAEA,QAAAs6D,GAAAj7D,GACA,GAAAsW,GAAA3V,EAAAkL,KAAAuuD,EAAAp6D,EAAAA,EAAAiwB,MACA,OAAA,OAAA3Z,EAAA6wB,GAAAnnC,GAAAonC,GAAApnC,EAAA,gBAAAsW,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,GAEA,QAAA4kD,GAAAl7D,GACA,MAAAonC,IAAApnC,EAAAW,GANA,IAAAQ,UAAA5C,OAAA,MAAA0P,EAQA,IAAAlI,EAGA,OAFAw0D,GAAA,OAAAtsD,EAAAtN,GAAAwmC,GAAA,aAAAphC,QAAApF,IAAAs6D,EAAA,WAAAl1D,GAAApF,GAAAA,EAAAA,EAAAA,EAAAA,GACAu6D,GAAAA,EACAd,GAEAA,EAAAzpD,MAAA,SAAAhQ,GACA,MAAAQ,WAAA5C,QACAoS,EAAAhQ,EAAA5B,KAAA4R,MAAA63B,OACA4xB,GAFAzpD,GAAA63B,QAIA4xB,EAAAY,OAAA,SAAAr6D,GACA,MAAAQ,WAAA5C,QACAy8D,EAAAr6D,EACAo6D,EAAA,KACAX,GAHAY,GAKAZ,EAAAU,MAAA,SAAAn6D,GACA,MAAAQ,WAAA5C,QACAu8D,EAAAn6D,EACAy5D,GAFAU,GAIAV,EAAAK,KAAA,SAAA95D,GACA,MAAAQ,WAAA5C,QACAk8D,EAAA95D,EAAA,GACAy5D,GAFAK,GAIAr3B,GAAAg3B,EAAA/2B,IA2BA3jC,GAAAwjC,QACA2pB,OAAA,SAAAsO,EAAAC,GACA,GAAAn3D,GAAA9C,UAAA5C,MAGA,OAFA,GAAA0F,IAAAm3D,EAAA,GACA,EAAAn3D,IAAAk3D,EAAA,GACA,WACA,GAAAx6D,GAAA4N,EAAA2C,CACA,GACAvQ,GAAA,EAAA5B,KAAAmkC,SAAA,EACA30B,EAAA,EAAAxP,KAAAmkC,SAAA,EACAhyB,EAAAvQ,EAAAA,EAAA4N,EAAAA,SACA2C,GAAAA,EAAA,EACA,OAAAiqD,GAAAC,EAAAz6D,EAAA5B,KAAAgT,KAAA,GAAAhT,KAAAyX,IAAAtF,GAAAA,KAGAmqD,UAAA,WACA,GAAAn4B,GAAAxjC,GAAAwjC,OAAA2pB,OAAAnpD,MAAAhE,GAAAyB,UACA,OAAA,YACA,MAAApC,MAAA6Q,IAAAszB,OAGAo4B,MAAA,SAAA3wD,GACA,GAAAu4B,GAAAxjC,GAAAwjC,OAAAq4B,UAAA5wD,EACA,OAAA,YACA,MAAAu4B,KAAAv4B,IAGA4wD,UAAA,SAAA5wD,GACA,MAAA,YACA,IAAA,GAAArF,GAAA,EAAAoF,EAAA,EAAAC,EAAAD,EAAAA,IAAApF,GAAAvG,KAAAmkC,QACA,OAAA59B,MAIA5F,GAAAiX,QAkCA,IAAAqxB,KACApuB,MAAAvW,EACAkT,KAAAlT,EAiBA3D,IAAAiX,MAAA2xB,OAAA,WACA,MAAAH,KAAA,EAAA,IAAA,EAAA,GAAA1K,IAAA,GA6FA,IAAA6L,KACAhkC,EAAA,EACA6L,EAAA,EACAmF,EAAA,EACApF,EAAA,EACA3L,EAAA,EASA7F,IAAAiX,MAAAH,IAAA,WACA,MAAA+yB,IAAA7pC,GAAAiX,MAAA2xB,SAAAhB,QAAA,EAAA,IAAA,IAAA,GAAA,EAAA,KA+DA,IAAAsC,IAAAlqC,GAAAD,OAAA,OAAAkqC,IACA/vB,MAAA,SAAAjZ,GACA,OAAA5B,KAAAwX,MAAA5V,IAEA4V,KAAA,SAAA5V,GACA,OAAA5B,KAAA6a,OAAAjZ,IAGAjB,IAAAiX,MAAA1E,IAAA,WACA,MAAA43B,IAAAnqC,GAAAiX,MAAA2xB,SAAA,GAAA,EAAA,KAyCA5oC,GAAAiX,MAAA5E,KAAA,WACA,MAAArS,IAAAiX,MAAA1E,MAAAmG,SAAA,KAEA1Y,GAAAiX,MAAA6kD,QAAA,WACA,MAAAvxB,QACAj0B,EAAA,QACAzV,UA4FAb,GAAAiX,MAAA8kD,WAAA,WACA,MAAA/7D,IAAAiX,MAAA6kD,UAAAjiD,MAAAmiD,KAEAh8D,GAAAiX,MAAAglD,WAAA,WACA,MAAAj8D,IAAAiX,MAAA6kD,UAAAjiD,MAAAqiD,KAEAl8D,GAAAiX,MAAAklD,YAAA,WACA,MAAAn8D,IAAAiX,MAAA6kD,UAAAjiD,MAAAuiD,KAEAp8D,GAAAiX,MAAAolD,YAAA,WACA,MAAAr8D,IAAAiX,MAAA6kD,UAAAjiD,MAAAyiD,IAEA,IAAAN,KAAA,QAAA,SAAA,QAAA,SAAA,QAAA,QAAA,SAAA,QAAA,SAAA,SAAAxzD,IAAAiK,IACAypD,IAAA,QAAA,SAAA,SAAA,SAAA,QAAA,SAAA,SAAA,SAAA,QAAA,SAAA,QAAA,SAAA,SAAA,SAAA,QAAA,SAAA,SAAA,SAAA,QAAA,UAAA1zD,IAAAiK,IACA2pD,IAAA,QAAA,QAAA,QAAA,SAAA,QAAA,QAAA,SAAA,SAAA,QAAA,SAAA,SAAA,SAAA,QAAA,SAAA,SAAA,SAAA,QAAA,SAAA,SAAA,UAAA5zD,IAAAiK,IACA6pD,IAAA,QAAA,QAAA,SAAA,SAAA,SAAA,SAAA,SAAA,SAAA,QAAA,QAAA,SAAA,SAAA,QAAA,SAAA,SAAA,SAAA,QAAA,QAAA,SAAA,UAAA9zD,IAAAiK,GACAzS,IAAAiX,MAAAm0B,SAAA,WACA,MAAAF,YAmCAlrC,GAAAiX,MAAAslD,SAAA,WACA,MAAAhxB,IAAA,EAAA,GAAA,EAAA,KAiCAvrC,GAAAiX,MAAAulD,UAAA,WACA,MAAAhxB,KAAA,KAAA,EAAA,KAyBAxrC,GAAAiX,MAAAy0B,SAAA,WACA,MAAAD,KAAA,EAAA,KAuBAzrC,GAAA2N,OAIA3N,GAAA2N,IAAAyb,IAAA,WAEA,QAAAA,KACA,GAAAwX,GAAAvhC,KAAAsT,IAAA,GAAAk5B,EAAA7nC,MAAAtB,KAAAjB,YAAAo/B,EAAAxhC,KAAAsT,IAAA,GAAAo5B,EAAA/nC,MAAAtB,KAAAjB,YAAAuuB,EAAAic,EAAAjoC,MAAAtB,KAAAjB,WAAAsO,GAAAuc,EAAA6f,EAAAnoC,MAAAtB,KAAAjB,WAAAsO,GAAAy2B,EAAAnnC,KAAAC,IAAAgtB,EAAA0D,GAAAyc,EAAAzc,EAAA1D,EAAA,EAAA,CAEA,IADAsU,EAAAC,IAAA2L,EAAA3L,EAAAA,EAAAD,EAAAA,EAAA4L,GACAhG,GAAAgU,GAAA,MAAAiiB,GAAA57B,EAAA4L,IAAA7L,EAAA67B,EAAA77B,EAAA,EAAA6L,GAAA,IAAA,GACA,IAAAD,GAAA9iB,EAAAgzC,EAAAC,EAAA/4C,EAAAF,EAAA6H,EAAAC,EAAAoF,EAAAC,EAAAiF,EAAAG,EAAA5Q,EAAA,EAAAC,EAAA,EAAAuoB,IAOA,KANA8uB,IAAAtwB,EAAAroC,MAAAtB,KAAAjB,YAAA,GAAA,KACAi7D,EAAAE,IAAAC,GAAAx9D,KAAAgT,KAAAuuB,EAAAA,EAAAC,EAAAA,IAAA+7B,EAAA54D,MAAAtB,KAAAjB,WACAgrC,IAAAnnB,GAAA,IACAub,IAAAvb,EAAAxV,GAAA4sD,EAAA77B,EAAAxhC,KAAAiR,IAAAqsD,KACA/7B,IAAAvb,EAAAvV,GAAA4sD,EAAA97B,EAAAvhC,KAAAiR,IAAAqsD,MAEA97B,EAAA,CACAjd,EAAAid,EAAAxhC,KAAAsS,IAAAqe,EAAA1K,GACA5B,EAAAmd,EAAAxhC,KAAAiR,IAAA0f,EAAA1K,GACAiG,EAAAsV,EAAAxhC,KAAAsS,IAAA2a,EAAAhH,GACAkG,EAAAqV,EAAAxhC,KAAAiR,IAAAgc,EAAAhH,EACA,IAAA+3B,GAAAh+C,KAAAC,IAAAgtB,EAAA0D,EAAA,EAAA1K,IAAA1V,GAAA,EAAA,CACA,IAAA0V,GAAAgnB,GAAA1oB,EAAAF,EAAA6H,EAAAC,KAAAihB,EAAA4Q,EAAA,CACA,GAAAyf,IAAA9sC,EAAA1D,GAAA,CACA1I,GAAAid,EAAAxhC,KAAAsS,IAAAmrD,GACAp5C,EAAAmd,EAAAxhC,KAAAiR,IAAAwsD,GACAvxC,EAAAC,EAAA,UAGA5H,GAAAF,EAAA,CAEA,IAAAkd,EAAA,CACAhQ,EAAAgQ,EAAAvhC,KAAAsS,IAAA2a,EAAAjH,GACAwL,EAAA+P,EAAAvhC,KAAAiR,IAAAgc,EAAAjH,GACAyQ,EAAA8K,EAAAvhC,KAAAsS,IAAAqe,EAAA3K,GACA4Q,EAAA2K,EAAAvhC,KAAAiR,IAAA0f,EAAA3K,EACA,IAAA+3B,GAAA/9C,KAAAC,IAAA0wB,EAAA1D,EAAA,EAAAjH,IAAAzV,GAAA,EAAA,CACA,IAAAyV,GAAAinB,GAAA1b,EAAAC,EAAAiF,EAAAG,KAAA,EAAAwW,EAAA2Q,EAAA,CACA,GAAA2f,IAAA/sC,EAAA1D,GAAA,CACAsE,GAAAgQ,EAAAvhC,KAAAsS,IAAAorD,GACAlsC,EAAA+P,EAAAvhC,KAAAiR,IAAAysD,GACAjnC,EAAAG,EAAA,UAGArF,GAAAC,EAAA,CAEA,KAAA2b,EAAAntC,KAAAwT,IAAAxT,KAAAC,IAAAuhC,EAAAD,GAAA,GAAAo8B,EAAAh5D,MAAAtB,KAAAjB,aAAA,KAAA,CACAioB,EAAAmX,EAAAD,EAAA6L,EAAA,EAAA,CACA,IAAAwwB,GAAA,MAAAnnC,GAAAlF,EAAAC,GAAA,MAAAtF,GAAA3H,EAAAF,GAAAmS,IAAAjS,EAAAF,IAAAoS,EAAAG,IAAA1K,EAAAC,IAAAoF,EAAAC,IAAApF,EAAA7H,EAAAq5C,EAAA,GAAAvxC,EAAAhI,EAAAu5C,EAAA,GAAAtxC,EAAAJ,EAAA0xC,EAAA,GAAArxC,EAAAJ,EAAAyxC,EAAA,GAAAC,EAAA,EAAA79D,KAAAiR,IAAAjR,KAAAwQ,MAAA4b,EAAAE,EAAAD,EAAAE,IAAAvsB,KAAAgT,KAAAoZ,EAAAA,EAAAC,EAAAA,GAAArsB,KAAAgT,KAAAsZ,EAAAA,EAAAC,EAAAA,KAAA,GAAAuxC,EAAA99D,KAAAgT,KAAA4qD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,IAAA,MAAA1xC,EAAA,CACA,GAAA6xC,GAAA/9D,KAAAwT,IAAA25B,GAAA3L,EAAAs8B,IAAAD,EAAA,IAAAG,EAAA9wB,GAAA,MAAAzW,GAAAlF,EAAAC,IAAAiF,EAAAG,IAAArS,EAAAF,GAAAmd,EAAAu8B,EAAA3wB,GAAA6wB,EAAA/wB,IAAAhhB,EAAAC,IAAAoF,EAAAC,GAAAgQ,EAAAu8B,EAAA3wB,EACAD,KAAA4wB,EACAvvB,EAAAvqC,KAAA,IAAA+5D,EAAA,GAAA,IAAAD,EAAA,IAAAA,EAAA,QAAA1zC,EAAA,IAAA2zC,EAAA,GAAA,IAAAx8B,EAAA,IAAAA,EAAA,MAAA,EAAA4L,EAAAH,GAAA+wB,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAA,IAAA7wB,EAAA,IAAA6wB,EAAA,GAAA,IAAAF,EAAA,IAAAA,EAAA,QAAA1zC,EAAA,IAAA4zC,EAAA,IAEAzvB,EAAAvqC,KAAA,IAAA+5D,EAAA,GAAA,IAAAD,EAAA,IAAAA,EAAA,QAAA1zC,EAAA,IAAA4zC,EAAA,QAGAzvB,GAAAvqC,KAAA,IAAAsgB,EAAA,IAAAF,EAEA,IAAA,MAAAoS,EAAA,CACA,GAAAynC,GAAAl+D,KAAAwT,IAAA25B,GAAA5L,EAAAu8B,IAAAD,EAAA,IAAAM,EAAAjxB,IAAA3oB,EAAAF,IAAAoS,EAAAG,GAAA2K,GAAA28B,EAAA9wB,GAAAgxB,EAAAlxB,IAAA3b,EAAAC,GAAA,MAAAtF,GAAA3H,EAAAF,IAAA6H,EAAAC,GAAAoV,GAAA28B,EAAA9wB,EACAD,KAAA+wB,EACA1vB,EAAAvqC,KAAA,IAAAm6D,EAAA,GAAA,IAAAF,EAAA,IAAAA,EAAA,QAAA7zC,EAAA,IAAA+zC,EAAA,GAAA,IAAA78B,EAAA,IAAAA,EAAA,MAAA6L,EAAAH,GAAAmxB,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAD,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAA,IAAA,EAAA/wB,EAAA,IAAA+wB,EAAA,GAAA,IAAAD,EAAA,IAAAA,EAAA,QAAA7zC,EAAA,IAAA8zC,EAAA,IAEA3vB,EAAAvqC,KAAA,IAAAm6D,EAAA,GAAA,IAAAF,EAAA,IAAAA,EAAA,QAAA7zC,EAAA,IAAA8zC,EAAA,QAGA3vB,GAAAvqC,KAAA,IAAAstB,EAAA,IAAAC,OAGAgd,GAAAvqC,KAAA,IAAAsgB,EAAA,IAAAF,GACA,MAAA6H,GAAAsiB,EAAAvqC,KAAA,IAAAu9B,EAAA,IAAAA,EAAA,MAAAwc,EAAA,IAAA5Q,EAAA,IAAAlhB,EAAA,IAAAC,GACAqiB,EAAAvqC,KAAA,IAAAstB,EAAA,IAAAC,GACA,MAAAiF,GAAA+X,EAAAvqC,KAAA,IAAAs9B,EAAA,IAAAA,EAAA,MAAAwc,EAAA,IAAA,EAAA3Q,EAAA,IAAA3W,EAAA,IAAAG,EAGA,OADA4X,GAAAvqC,KAAA,KACAuqC,EAAAnuC,KAAA,IAEA,QAAA+8D,GAAA57B,EAAA4L,GACA,MAAA,MAAA5L,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAA4L,EAAA,OAAA5L,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAA4L,EAAA,MAAA5L,EA3EA,GAAAgL,GAAAD,GAAAG,EAAAD,GAAAkxB,EAAArxB,GAAAixB,EAAAC,GAAA5wB,EAAAD,GAAAG,EAAAD,GAAAG,EAAAD,EAoHA,OAvCAhjB,GAAAyiB,YAAA,SAAAh7B,GACA,MAAApP,WAAA5C,QACAgtC,EAAAv4B,GAAAzC,GACAuY,GAFAyiB,GAIAziB,EAAA2iB,YAAA,SAAAl7B,GACA,MAAApP,WAAA5C,QACAktC,EAAAz4B,GAAAzC,GACAuY,GAFA2iB,GAIA3iB,EAAA4zC,aAAA,SAAAnsD,GACA,MAAApP,WAAA5C,QACAm+D,EAAA1pD,GAAAzC,GACAuY,GAFA4zC,GAIA5zC,EAAAwzC,UAAA,SAAA/rD,GACA,MAAApP,WAAA5C,QACA+9D,EAAA/rD,GAAAgsD,GAAAA,GAAAvpD,GAAAzC,GACAuY,GAFAwzC,GAIAxzC,EAAA6iB,WAAA,SAAAp7B,GACA,MAAApP,WAAA5C,QACAotC,EAAA34B,GAAAzC,GACAuY,GAFA6iB,GAIA7iB,EAAA+iB,SAAA,SAAAt7B,GACA,MAAApP,WAAA5C,QACAstC,EAAA74B,GAAAzC,GACAuY,GAFA+iB,GAIA/iB,EAAAijB,SAAA,SAAAx7B,GACA,MAAApP,WAAA5C,QACAwtC,EAAA/4B,GAAAzC,GACAuY,GAFAijB,GAIAjjB,EAAA2kC,SAAA,WACA,GAAAv8C,KAAAq6B,EAAA7nC,MAAAtB,KAAAjB,aAAAsqC,EAAA/nC,MAAAtB,KAAAjB,YAAA,EAAAZ,IAAAorC,EAAAjoC,MAAAtB,KAAAjB,aAAA0qC,EAAAnoC,MAAAtB,KAAAjB,YAAA,EAAAsO,EACA,QAAA1Q,KAAAsS,IAAA9Q,GAAA2Q,EAAAnS,KAAAiR,IAAAzP,GAAA2Q,IAEA4X,EAEA,IAAAyzC,IAAA,MAqEA78D,IAAA2N,IAAA4Y,KAAA,WACA,MAAA8mB,IAAA1pC,GAEA,IAAA+pC,IAAA1tC,GAAAwI,KACAogC,OAAA4E,GACAkwB,gBAAA/vB,GACAn0B,KAAAo0B,GACA+vB,cAAA7vB,GACA8vB,aAAA7vB,GACA8vB,MAAApvB,GACAqvB,aAAAjvB,GACAkvB,eAAAjvB,GACAgmB,OAAA/lB,GACAivB,SAAA5vB,GACA6vB,gBAAAjwB,GACAkwB,kBAAA/vB,GACAgwB,SAAA9uB,IAEA3B,IAAA34B,QAAA,SAAA5S,EAAAI,GACAA,EAAAJ,IAAAA,EACAI,EAAAwe,OAAA,WAAA/X,KAAA7G,IA8IA,IAAA6sC,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAAC,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAAN,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EA0CA3uC,IAAA2N,IAAA4Y,KAAA63C,OAAA,WACA,GAAA73C,GAAA8mB,GAAAiC,GAGA,OAFA/oB,GAAAiD,OAAAjD,EAAAtlB,QAAAslB,GAAAtlB,EACAslB,EAAA6M,MAAA7M,EAAA1X,QAAA0X,GAAA1X,EACA0X,GAsFAunB,GAAA91B,QAAA+1B,GACAA,GAAA/1B,QAAA81B,GACA9tC,GAAA2N,IAAA6hC,KAAA,WACA,MAAAD,IAAA5rC,IAEA3D,GAAA2N,IAAA6hC,KAAA4uB,OAAA,WACA,GAAA5uB,GAAAD,GAAAD,GAOA,OANAE,GAAAhmB,OAAAgmB,EAAAvuC,QAAAuuC,GAAAvuC,EACAuuC,EAAA3D,YAAA2D,EAAA5rB,SAAA4rB,GAAA5rB,GACA4rB,EAAAzD,YAAAyD,EAAAjkB,SAAAikB,GAAAjkB,GACAikB,EAAApc,MAAAoc,EAAA3gC,QAAA2gC,GAAA3gC,EACA2gC,EAAAvD,WAAAuD,EAAA9rB,SAAA8rB,GAAA9rB,GACA8rB,EAAArD,SAAAqD,EAAAhkB,SAAAgkB,GAAAhkB,GACAgkB,GAEAxvC,GAAA2N,IAAAqnD,MAAA,WAEA,QAAAA,GAAAnzD,EAAAyC,GACA,GAAAsB,GAAAmxC,EAAAr0C,KAAAoB,EAAAjC,EAAAyC,GAAAgS,EAAAygC,EAAAr0C,KAAAmB,EAAAhC,EAAAyC,EACA,OAAA,IAAAsB,EAAAyf,GAAA+D,EAAAxjB,EAAA4L,EAAA5L,EAAA0f,GAAA1f,EAAA0mB,GAAA1mB,EAAAoqB,KAAAquC,EAAAz4D,EAAA0Q,GAAAgoD,EAAA14D,EAAA4L,EAAA5L,EAAA0f,GAAA1f,EAAA4L,EAAA5L,EAAAyf,IAAAi5C,EAAA14D,EAAA4L,EAAA5L,EAAA0f,GAAAhP,EAAA9E,EAAA8E,EAAA+O,IAAA+D,EAAA9S,EAAA9E,EAAA8E,EAAAgP,GAAAhP,EAAAgW,GAAAhW,EAAA0Z,IAAAsuC,EAAAhoD,EAAA9E,EAAA8E,EAAAgP,GAAA1f,EAAA4L,EAAA5L,EAAAyf,KAAA,IAEA,QAAA0xB,GAAAwnB,EAAA5vD,EAAA9M,EAAAyC,GACA,GAAAyyC,GAAApoC,EAAAxC,KAAAoyD,EAAA18D,EAAAyC,GAAAkN,EAAAgY,EAAArd,KAAAoyD,EAAAxnB,EAAAzyC,GAAA0rB,EAAAic,EAAA9/B,KAAAoyD,EAAAxnB,EAAAzyC,GAAAyL,GAAAuc,EAAA6f,EAAAhgC,KAAAoyD,EAAAxnB,EAAAzyC,GAAAyL,EACA,QACAyB,EAAAA,EACAwe,GAAAA,EACA1D,GAAAA,EACAjH,IAAA7T,EAAAnS,KAAAsS,IAAAqe,GAAAxe,EAAAnS,KAAAiR,IAAA0f,IACA1K,IAAA9T,EAAAnS,KAAAsS,IAAA2a,GAAA9a,EAAAnS,KAAAiR,IAAAgc,KAGA,QAAA+xC,GAAAx9D,EAAAC,GACA,MAAAD,GAAAmvB,IAAAlvB,EAAAkvB,IAAAnvB,EAAAyrB,IAAAxrB,EAAAwrB,GAEA,QAAAlD,GAAA5X,EAAAoF,EAAA/V,GACA,MAAA,IAAA2Q,EAAA,IAAAA,EAAA,SAAA3Q,EAAA+O,IAAA,MAAAgH,EAEA,QAAA0nD,GAAA19B,EAAAvb,EAAAwb,EAAAvb,GACA,MAAA,SAAAA,EAtBA,GAAAxhB,GAAA0vB,GAAA3vB,EAAA4vB,GAAAjK,EAAAwmB,GAAA/D,EAAAD,GAAAG,EAAAD,EAiDA,OAzBA8oB,GAAAxrC,OAAA,SAAA3Y,GACA,MAAApP,WAAA5C,QACA2qB,EAAAlW,GAAAzC,GACAmkD,GAFAxrC,GAIAwrC,EAAAlxD,OAAA,SAAA+M,GACA,MAAApP,WAAA5C,QACAiF,EAAAwP,GAAAzC,GACAmkD,GAFAlxD,GAIAkxD,EAAAnxD,OAAA,SAAAgN,GACA,MAAApP,WAAA5C,QACAgF,EAAAyP,GAAAzC,GACAmkD,GAFAnxD,GAIAmxD,EAAA/oB,WAAA,SAAAp7B,GACA,MAAApP,WAAA5C,QACAotC,EAAA34B,GAAAzC,GACAmkD,GAFA/oB,GAIA+oB,EAAA7oB,SAAA,SAAAt7B,GACA,MAAApP,WAAA5C,QACAstC,EAAA74B,GAAAzC,GACAmkD,GAFA7oB,GAIA6oB,GAKAh1D,GAAA2N,IAAA6wD,SAAA,WAEA,QAAAA,GAAA38D,EAAAyC,GACA,GAAA+gB,GAAAvhB,EAAAqI,KAAAzJ,KAAAb,EAAAyC,GAAAm6D,EAAA56D,EAAAsI,KAAAzJ,KAAAb,EAAAyC,GAAA2G,GAAAoa,EAAAxW,EAAA4vD,EAAA5vD,GAAA,EAAA+H,GAAAyO,GACApkB,EAAAokB,EAAApkB,EACA4N,EAAA5D,IAEAhK,EAAAw9D,EAAAx9D,EACA4N,EAAA5D,GACAwzD,EAEA,OADA7nD,GAAAA,EAAApO,IAAA8oB,GACA,IAAA1a,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAVA,GAAA9S,GAAA0vB,GAAA3vB,EAAA4vB,GAAAnC,EAAA2e,EA2BA,OAfAuuB,GAAA16D,OAAA,SAAA7C,GACA,MAAAQ,WAAA5C,QACAiF,EAAAwP,GAAArS,GACAu9D,GAFA16D,GAIA06D,EAAA36D,OAAA,SAAA5C,GACA,MAAAQ,WAAA5C,QACAgF,EAAAyP,GAAArS,GACAu9D,GAFA36D,GAIA26D,EAAAltC,WAAA,SAAArwB,GACA,MAAAQ,WAAA5C,QACAyyB,EAAArwB,EACAu9D,GAFAltC,GAIAktC,GAKAx+D,GAAA2N,IAAA6wD,SAAAJ,OAAA,WACA,GAAAI,GAAAx+D,GAAA2N,IAAA6wD,WAAAltC,EAAA2e,GAAAyuB,EAAAF,EAAAltC,UAIA,OAHAktC,GAAAltC,WAAA,SAAArwB,GACA,MAAAQ,WAAA5C,OAAA6/D,EAAAxuB,GAAA5e,EAAArwB,IAAAqwB,GAEAktC,GAQAx+D,GAAA2N,IAAAuJ,OAAA,WAEA,QAAAA,GAAArV,EAAAyC,GACA,OAAAq6D,GAAAt5D,IAAAgB,EAAA8F,KAAAzJ,KAAAb,EAAAyC,KAAA+rC,IAAA7sC,EAAA2I,KAAAzJ,KAAAb,EAAAyC,IAFA,GAAA+B,GAAA+pC,GAAA5sC,EAAA2sC,EAcA,OAVAj5B,GAAA7Q,KAAA,SAAApF,GACA,MAAAQ,WAAA5C,QACAwH,EAAAiN,GAAArS,GACAiW,GAFA7Q,GAIA6Q,EAAA1T,KAAA,SAAAvC,GACA,MAAAQ,WAAA5C,QACA2E,EAAA8P,GAAArS,GACAiW,GAFA1T,GAIA0T,EAYA,IAAAynD,IAAA3+D,GAAAwI,KACAkuB,OAAA2Z,GACAuuB,MAAA,SAAAp7D,GACA,GAAAgO,GAAAnS,KAAAgT,KAAA7O,EAAA,GAAA,CACA,OAAA,IAAA,GAAAgO,EAAA,KAAAA,EAAA,KAAAA,EAAA,IAAA,GAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAA,EAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA,EAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAA,GAAAA,EAAA,KAEAqtD,QAAA,SAAAr7D,GACA,GAAA83B,GAAAj8B,KAAAgT,KAAA7O,GAAA,EAAAs7D,KAAAzjC,EAAAC,EAAAwjC,EACA,OAAA,OAAAxjC,EAAA,IAAAD,EAAA,QAAAC,EAAA,KAAAD,EAAA,OAEA0jC,OAAA,SAAAv7D,GACA,GAAAgO,GAAAnS,KAAAgT,KAAA7O,GAAA,CACA,OAAA,KAAAgO,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAEAwtD,gBAAA,SAAAx7D,GACA,GAAA63B,GAAAh8B,KAAAgT,KAAA7O,EAAAy7D,IAAA3jC,EAAAD,EAAA4jC,GAAA,CACA,OAAA,MAAA3jC,EAAA,IAAAD,EAAA,KAAAC,EAAA,KAAAD,EAAA,KAAAC,EAAA,KAEA4jC,cAAA,SAAA17D,GACA,GAAA63B,GAAAh8B,KAAAgT,KAAA7O,EAAAy7D,IAAA3jC,EAAAD,EAAA4jC,GAAA,CACA,OAAA,OAAA3jC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,IAAAC,EAAA,MAGAt7B,IAAA2N,IAAAwxD,YAAAR,GAAAt7D,MACA,IAAA47D,IAAA5/D,KAAAgT,KAAA,GAAAysD,GAAAz/D,KAAA01B,IAAA,GAAAnjB,GACAnL,IAAA4qC,WAAA,SAAAltC,GAOA,IAAA,GANA4yC,GAAAz2C,EAAAswC,EAAAuN,MAAAihB,GAAAx3D,EAAAspC,GAAA/sC,GAAA8yC,KAAA5F,EAAAguB,KACAp/D,KAAAkW,KAAAT,MACA67B,KAAApS,GACAvpB,MAAA,EACA07B,SAAA,KAEAtmC,EAAA,GAAAC,EAAAvI,KAAA7D,SAAAmM,EAAAC,GAAA,CACAgsC,EAAA3zC,KAAAyzC,KACA,KAAA,GAAA7rC,GAAAxI,KAAAsI,GAAA1G,EAAA,GAAAC,EAAA2G,EAAArM,SAAAyF,EAAAC,IACAjE,EAAA4K,EAAA5G,KAAA6sC,GAAA7wC,EAAAgE,EAAAsD,EAAAgpC,EAAAS,GACA0F,EAAAzzC,KAAAhD,GAGA,MAAAqwC,IAAAsG,EAAArvC,EAAAgpC,IAEAnqC,GAAAiqC,UAAA,SAAAvsC,GACA,MAAAzB,MAAA+0C,KAAA,MAAAtzC,EAAAs4C,GAAAnM,GAAAY,GAAA/sC,KAEA,IAiBAg6C,IAAAkhB,GAjBA5iB,GAAAnM,GAAAY,MAiBAL,MAAAuuB,GAAA,CACAvuB,IAAA1kC,KAAA1F,GAAA0F,KACA0kC,GAAA4E,MAAAhvC,GAAAgvC,MACA5E,GAAAvwC,KAAAmG,GAAAnG,KACAuwC,GAAArtC,KAAAiD,GAAAjD,KACAxD,GAAAqxC,WAAA,SAAAjmC,EAAAjH,GACA,MAAAiH,IAAAA,EAAAimC,WAAA8M,GAAA/yC,EAAAimC,WAAAltC,GAAAiH,EAAApL,GAAAoL,YAAAimC,WAAAjmC,IAEApL,GAAAqxC,WAAA/uC,UAAAuuC,GACAA,GAAA1jC,OAAA,SAAAxG,GACA,GAAAowC,GAAAC,EAAA12C,EAAAswC,EAAAluC,KAAAkuC,GAAAhpC,EAAAlF,KAAAoH,UAAAmtC,IACAtwC,GAAAD,EAAAC,EACA,KAAA,GAAAqE,GAAA,GAAAC,EAAAvI,KAAA7D,SAAAmM,EAAAC,GAAA,CACAgsC,EAAA3zC,KAAAyzC,KACA,KAAA,GAAA7rC,GAAAxI,KAAAsI,GAAA1G,EAAA,GAAAC,EAAA2G,EAAArM,SAAAyF,EAAAC,IACAjE,EAAA4K,EAAA5G,MAAA0yC,EAAArwC,EAAAwF,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,KACA,YAAA1K,KAAA02C,EAAAvsC,SAAAnK,EAAAmK,UACA0mC,GAAA6F,EAAA1yC,EAAAsD,EAAAgpC,EAAAtwC,EAAAsH,GAAAgpC,IACAmG,EAAAzzC,KAAA0zC,IAEAD,EAAAzzC,KAAA,MAIA,MAAAqtC,IAAAsG,EAAArvC,EAAAgpC,IAEAC,GAAAqG,UAAA,SAAAvwC,GACA,GAAAowC,GAAAuoB,EAAAh/D,EAAA02C,EAAA3F,EAAAT,EAAAluC,KAAAkuC,GAAAhpC,EAAAlF,KAAAoH,UAAAmtC,IACAtwC,GAAAE,EAAAF,EACA,KAAA,GAAAqE,GAAA,GAAAC,EAAAvI,KAAA7D,SAAAmM,EAAAC,GACA,IAAA,GAAAC,GAAAxI,KAAAsI,GAAA1G,EAAA,GAAAC,EAAA2G,EAAArM,SAAAyF,EAAAC,GACA,GAAAjE,EAAA4K,EAAA5G,GAAA,CACA+sC,EAAA/wC,EAAAsH,GAAAgpC,GACA0uB,EAAA34D,EAAAwF,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,GACAisC,EAAA3zC,KAAAyzC,KACA,KAAA,GAAAh1C,GAAA,GAAA4K,EAAA2yD,EAAAzgE,SAAAkD,EAAA4K,IACAqqC,EAAAsoB,EAAAv9D,KAAAovC,GAAA6F,EAAAj1C,EAAA6F,EAAAgpC,EAAAS,GACA0F,EAAAzzC,KAAA0zC,GAKA,MAAArG,IAAAsG,EAAArvC,EAAAgpC,IAEAC,GAAArkC,OAAA,SAAAA,GACA,GAAAuqC,GAAA7rC,EAAA5K,EAAA22C,IACA,mBAAAzqC,KAAAA,EAAA9B,EAAA8B,GACA,KAAA,GAAAxB,GAAA,EAAAC,EAAAvI,KAAA7D,OAAAoM,EAAAD,EAAAA,IAAA,CACAisC,EAAA3zC,KAAAyzC,KACA,KAAA,GAAA7rC,GAAAxI,KAAAsI,GAAA1G,EAAA,EAAAC,EAAA2G,EAAArM,OAAA0F,EAAAD,EAAAA,KACAhE,EAAA4K,EAAA5G,KAAAkI,EAAAL,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,IACA+rC,EAAAzzC,KAAAhD,GAIA,MAAAqwC,IAAAsG,EAAAv0C,KAAAoH,UAAApH,KAAAkuC,KAEAC,GAAAE,MAAA,SAAA5sC,EAAA4sC,GACA,GAAAH,GAAAluC,KAAAkuC,GAAAhpC,EAAAlF,KAAAoH,SACA,OAAArI,WAAA5C,OAAA,EAAA6D,KAAApC,OAAAsH,GAAAgpC,GAAAG,MAAA1rC,IAAAlB,GACA2G,EAAApI,KAAA,MAAAquC,EAAA,SAAAzwC,GACAA,EAAAsH,GAAAgpC,GAAAG,MAAAxrC,OAAApB,IACA,SAAA7D,GACAA,EAAAsH,GAAAgpC,GAAAG,MAAAvrC,IAAArB,EAAA4sC,MAWAF,GAAAgB,KAAA,SAAA0tB,EAAAh9D,GAMA,QAAAyE,KACAtE,KAAAuE,gBAAA9C,GAEA,QAAA+C,KACAxE,KAAAyE,kBAAAhD,EAAAiD,MAAAjD,EAAAkD,OAEA,QAAAm4D,GAAA1+D,GACA,MAAA,OAAAA,EAAAkG,GAAAlG,GAAA,GAAA,WACA,GAAAwD,GAAAzD,EAAA6B,KAAAoG,aAAA3E,EACA,OAAAtD,KAAAC,IAAAwD,EAAA2gB,EAAApkB,EAAAC,GAAA,SAAAwV,GACA5T,KAAA6E,aAAApD,EAAAG,EAAAgS,QAIA,QAAAmpD,GAAA3+D,GACA,MAAA,OAAAA,EAAAoG,GAAApG,GAAA,GAAA,WACA,GAAAwD,GAAAzD,EAAA6B,KAAA80C,eAAArzC,EAAAiD,MAAAjD,EAAAkD,MACA,OAAAxG,KAAAC,IAAAwD,EAAA2gB,EAAApkB,EAAAC,GAAA,SAAAwV,GACA5T,KAAA+E,eAAAtD,EAAAiD,MAAAjD,EAAAkD,MAAA/C,EAAAgS,QAvBA,GAAA7U,UAAA5C,OAAA,EAAA,CACA,IAAA0D,IAAAg9D,GAAA78D,KAAAmvC,KAAAtvC,EAAAg9D,EAAAh9D,GACA,OAAAG,MAEA,GAAAuiB,GAAA,aAAAs6C,EAAAl+B,GAAAtD,GAAA55B,EAAAnE,GAAA4H,GAAAC,QAAA03D,EAuBA,OAAAzuB,IAAApuC,KAAA,QAAA68D,EAAAh9D,EAAA4B,EAAAkD,MAAAo4D,EAAAD,IAEA3uB,GAAA2uB,UAAA,SAAAD,EAAAxuB,GAEA,QAAAyuB,GAAA39D,EAAAyC,GACA,GAAAqK,GAAAoiC,EAAA5kC,KAAAzJ,KAAAb,EAAAyC,EAAA5B,KAAAoG,aAAA3E,GACA,OAAAwK,IAAA,SAAA2H,GACA5T,KAAA6E,aAAApD,EAAAwK,EAAA2H,KAGA,QAAAmpD,GAAA59D,EAAAyC,GACA,GAAAqK,GAAAoiC,EAAA5kC,KAAAzJ,KAAAb,EAAAyC,EAAA5B,KAAA80C,eAAArzC,EAAAiD,MAAAjD,EAAAkD,OACA,OAAAsH,IAAA,SAAA2H,GACA5T,KAAA+E,eAAAtD,EAAAiD,MAAAjD,EAAAkD,MAAAsH,EAAA2H,KAVA,GAAAnS,GAAAnE,GAAA4H,GAAAC,QAAA03D,EAaA,OAAA78D,MAAAquC,MAAA,QAAAwuB,EAAAp7D,EAAAkD,MAAAo4D,EAAAD,IAEA3uB,GAAAznC,MAAA,SAAAjF,EAAA5B,EAAA2G,GAUA,QAAAC,KACAzG,KAAA0G,MAAAC,eAAAlF,GAEA,QAAAu7D,GAAA5+D,GACA,MAAA,OAAAA,EAAAqI,GAAArI,GAAA,GAAA,WACA,GAAAwD,GAAAzD,EAAAH,EAAAgC,MAAAk1C,iBAAAl1C,KAAA,MAAAm1C,iBAAA1zC,EACA,OAAAtD,KAAAC,IAAAwD,EAAAy5B,GAAAl9B,EAAAC,GAAA,SAAAwV,GACA5T,KAAA0G,MAAAG,YAAApF,EAAAG,EAAAgS,GAAApN,OAhBA,GAAA3E,GAAA9C,UAAA5C,MACA,IAAA,EAAA0F,EAAA,CACA,GAAA,gBAAAJ,GAAA,CACA,EAAAI,IAAAhC,EAAA,GACA,KAAA2G,IAAA/E,GAAAzB,KAAA0G,MAAAF,EAAA/E,EAAA+E,GAAA3G,EACA,OAAAG,MAEAwG,EAAA,GAaA,MAAA4nC,IAAApuC,KAAA,SAAAyB,EAAA5B,EAAAm9D,IAEA7uB,GAAA8uB,WAAA,SAAAx7D,EAAA4sC,EAAA7nC,GAEA,QAAAy2D,GAAA99D,EAAAyC,GACA,GAAAqK,GAAAoiC,EAAA5kC,KAAAzJ,KAAAb,EAAAyC,EAAA5D,EAAAgC,MAAAk1C,iBAAAl1C,KAAA,MAAAm1C,iBAAA1zC,GACA,OAAAwK,IAAA,SAAA2H,GACA5T,KAAA0G,MAAAG,YAAApF,EAAAwK,EAAA2H,GAAApN,IAGA,MAPAzH,WAAA5C,OAAA,IAAAqK,EAAA,IAOAxG,KAAAquC,MAAA,SAAA5sC,EAAAw7D,IAEA9uB,GAAAiH,KAAA,SAAAv1C,GACA,MAAAuuC,IAAApuC,KAAA,OAAAH,EAAAyuC,KAQAH,GAAAtrC,OAAA,WACA,GAAAqC,GAAAlF,KAAAoH,SACA,OAAApH,MAAA+0C,KAAA,iBAAA,WACA,GAAA7gC,EACAlU,MAAAkF,GAAA6oC,MAAA,IAAA75B,EAAAlU,KAAA2H,aAAAuM,EAAAtM,YAAA5H,SAGAmuC,GAAAU,KAAA,SAAAhvC,GACA,GAAAquC,GAAAluC,KAAAkuC,GAAAhpC,EAAAlF,KAAAoH,SACA,OAAArI,WAAA5C,OAAA,EAAA6D,KAAApC,OAAAsH,GAAAgpC,GAAAW,MACA,kBAAAhvC,KAAAA,EAAAvC,GAAAuxC,KAAAvtC,MAAAhE,GAAAyB,YACAqJ,EAAApI,KAAA,SAAApC,GACAA,EAAAsH,GAAAgpC,GAAAW,KAAAhvC,MAGAsuC,GAAAj7B,MAAA,SAAArT,GACA,GAAAquC,GAAAluC,KAAAkuC,GAAAhpC,EAAAlF,KAAAoH,SACA,OAAArI,WAAA5C,OAAA,EAAA6D,KAAApC,OAAAsH,GAAAgpC,GAAAh7B,MACA9K,EAAApI,KAAA,kBAAAH,GAAA,SAAAjC,EAAAgE,EAAA0G,GACA1K,EAAAsH,GAAAgpC,GAAAh7B,OAAArT,EAAA4J,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,KACAzI,GAAAA,EAAA,SAAAjC,GACAA,EAAAsH,GAAAgpC,GAAAh7B,MAAArT,MAGAsuC,GAAAS,SAAA,SAAA/uC,GACA,GAAAquC,GAAAluC,KAAAkuC,GAAAhpC,EAAAlF,KAAAoH,SACA,OAAArI,WAAA5C,OAAA,EAAA6D,KAAApC,OAAAsH,GAAAgpC,GAAAU,SACAxmC,EAAApI,KAAA,kBAAAH,GAAA,SAAAjC,EAAAgE,EAAA0G,GACA1K,EAAAsH,GAAAgpC,GAAAU,SAAAjyC,KAAAsT,IAAA,EAAApQ,EAAA4J,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,MACAzI,EAAAlD,KAAAsT,IAAA,EAAApQ,GAAA,SAAAjC,GACAA,EAAAsH,GAAAgpC,GAAAU,SAAA/uC,MAGAsuC,GAAA4G,KAAA,SAAApxC,EAAAjB,GACA,GAAAwrC,GAAAluC,KAAAkuC,GAAAhpC,EAAAlF,KAAAoH,SACA,IAAArI,UAAA5C,OAAA,EAAA,CACA,GAAAuyC,GAAAiuB,GAAAO,EAAAzhB,EACA,KACAA,GAAAvN,EACA9lC,EAAApI,KAAA,SAAApC,EAAAgE,EAAA0G,GACAq0D,GAAA/+D,EAAAsH,GAAAgpC,GACAvqC,EAAA8F,KAAA7L,EAAAA,EAAAmK,SAAAnG,EAAA0G,KAEA,QACAq0D,GAAAjuB,EACA+M,GAAAyhB,OAGA90D,GAAApI,KAAA,SAAApC,GACA,GAAA+wC,GAAA/wC,EAAAsH,GAAAgpC,IACAS,EAAAvsC,QAAAusC,EAAAvsC,MAAA9E,GAAA6E,SAAA,QAAA,MAAA,eAAAK,GAAAmB,EAAAjB,IAGA,OAAA1C,OAEAmuC,GAAAQ,WAAA,WAEA,IAAA,GADA0F,GAAA7rC,EAAA5K,EAAA+wC,EAAAwuB,EAAAn9D,KAAAkuC,GAAAkvB,IAAAV,GAAAx3D,EAAAlF,KAAAoH,UAAAmtC,KACAjsC,EAAA,EAAAC,EAAAvI,KAAA7D,OAAAoM,EAAAD,EAAAA,IAAA,CACAisC,EAAA3zC,KAAAyzC,KACA,KAAA,GAAA7rC,GAAAxI,KAAAsI,GAAA1G,EAAA,EAAAC,EAAA2G,EAAArM,OAAA0F,EAAAD,EAAAA,KACAhE,EAAA4K,EAAA5G,MACA+sC,EAAA/wC,EAAAsH,GAAAi4D,GACA1uB,GAAA7wC,EAAAgE,EAAAsD,EAAAk4D,GACA7/D,KAAAoxC,EAAApxC,KACAsxC,KAAAF,EAAAE,KACA37B,MAAAy7B,EAAAz7B,MAAAy7B,EAAAC,SACAA,SAAAD,EAAAC,YAGAyF,EAAAzzC,KAAAhD,GAGA,MAAAqwC,IAAAsG,EAAArvC,EAAAk4D,IAmEA9/D,GAAA2N,IAAAoyD,KAAA,WAEA,QAAAA,GAAAtuD,GACAA,EAAAgmC,KAAA,WACA,GAEAuoB,GAFAvuD,EAAAzR,GAAAmN,OAAAzK,MACAi6C,EAAAj6C,KAAAs5C,WAAA/kC,EAAAsmC,EAAA76C,KAAAs5C,UAAA/kC,EAAAoyB,OACAL,EAAA,MAAAi3B,EAAA1iB,EAAAvU,MAAAuU,EAAAvU,MAAAhlC,MAAAu5C,EAAA2iB,GAAA3iB,EAAA3V,SAAAq4B,EAAA/2B,EAAA,MAAAi3B,EAAA5iB,EAAArU,WAAAqU,EAAArU,WAAAllC,MAAAu5C,EAAA2iB,GAAAv8D,EAAAw8D,EAAAxuB,EAAAlgC,EAAAylC,UAAA,SAAA1sC,KAAAw+B,EAAAuU,GAAA6iB,EAAAzuB,EAAApmC,QAAAgtB,OAAA,IAAA,WAAAsZ,KAAA,QAAA,QAAAzoC,MAAA,UAAA8Z,IAAAm9C,EAAArgE,GAAAqxC,WAAAM,EAAAgH,QAAAvvC,MAAA,UAAA8Z,IAAA3d,SAAA+6D,EAAAtgE,GAAAqxC,WAAAM,EAAAyE,SAAAhtC,MAAA,UAAA,GAAAm3D,EAAAlhE,KAAAsT,IAAA6tD,EAAA,GAAAC,EACA5mD,EAAAiuB,GAAAyV,GAAA1P,EAAAp8B,EAAAylC,UAAA,WAAA1sC,MAAA,IAAAk2D,GAAA7yB,EAAAtiC,QAAA4C,OAAA,QAAA0jC,KAAA,QAAA,UACA7xC,GAAAqxC,WAAAxD,GACAuyB,GAAAjyD,OAAA,QACAiyD,EAAAjyD,OAAA,OACA,IAAAod,GAAAqF,EAAApF,EAAAqF,EAAA8vC,EAAAP,EAAAjzD,OAAA,QAAAyzD,EAAAN,EAAAnzD,OAAA,QAAA2qC,EAAAnG,EAAAxkC,OAAA,QAAA2qC,KAAA5O,GAAA23B,EAAAT,EAAAjzD,OAAA,QAAA2zD,EAAAR,EAAAnzD,OAAA,QAAA1O,EAAA,QAAAsiE,GAAA,SAAAA,EAAA,GAAA,CAcA,IAbA,WAAAA,GAAA,QAAAA,GACAf,EAAApuB,GAAArmB,EAAA,IAAAC,EAAA,IAAAoF,EAAA,KAAAC,EAAA,KACAinB,EAAAjG,KAAA,KAAA,EAAApzC,EAAA,MAAA,SAAA2K,MAAA,cAAA,UACAs3D,EAAA7uB,KAAA,IAAA,IAAAh4B,EAAA,GAAA,IAAApb,EAAAuiE,EAAA,MAAAnnD,EAAA,GAAA,IAAApb,EAAAuiE,KAEAhB,EAAAluB,GAAAvmB,EAAA,IAAAC,EAAA,IAAAoF,EAAA,KAAAC,EAAA,KACAinB,EAAAjG,KAAA,KAAA,SAAAzoC,MAAA,cAAA,EAAA3K,EAAA,MAAA,SACAiiE,EAAA7uB,KAAA,IAAA,IAAApzC,EAAAuiE,EAAA,IAAAnnD,EAAA,GAAA,MAAAA,EAAA,GAAA,IAAApb,EAAAuiE,IAEAL,EAAA9uB,KAAAhhB,EAAApyB,EAAA+hE,GACAK,EAAAhvB,KAAArmB,EAAA/sB,EAAA8hE,GACAK,EAAA/uB,KAAAjhB,EAAA,GAAAihB,KAAAhhB,EAAApyB,EAAA+hE,GACAM,EAAAjvB,KAAAtmB,EAAA,GAAAsmB,KAAArmB,EAAA/sB,EAAA8hE,GACAhjB,EAAA7S,UAAA,CACA,GAAAzpC,GAAAs8C,EAAA1xB,EAAA5qB,EAAAypC,YAAA,CACAiS,GAAAY,EAAA,SAAA17C,GACA,MAAAZ,GAAAY,GAAAgqB,OAEA8wB,GAAAjS,UACAiS,EAAAY,EAEA8iB,EAAAl0D,KAAA6zD,EAAAziB,EAAAZ,EAEAyjB,GAAAj0D,KAAA6zD,EAAArjB,EAAAY,GACA+iB,EAAAn0D,KAAA6zD,EAAAziB,EAAAA,KAnCA,GAAA4iB,GAAAlpD,EAAAjX,GAAAiX,MAAA2xB,SAAAm4B,EAAAE,GAAAT,EAAA,EAAAQ,EAAA,EAAAP,EAAA,EAAAP,GAAA,IAAAD,EAAA,IAwFA,OAlDAF,GAAA9oD,MAAA,SAAAhW,GACA,MAAAQ,WAAA5C,QACAoY,EAAAhW,EACA8+D,GAFA9oD,GAIA8oD,EAAAgB,OAAA,SAAA9/D,GACA,MAAAQ,WAAA5C,QACAkiE,EAAA9/D,IAAAigE,IAAAjgE,EAAA,GAAAggE,GACAlB,GAFAgB,GAIAhB,EAAA/2B,MAAA,WACA,MAAAvnC,WAAA5C,QACAqhE,EAAAz+D,UACAs+D,GAFAG,GAIAH,EAAAE,WAAA,SAAAh/D,GACA,MAAAQ,WAAA5C,QACAohE,EAAAh/D,EACA8+D,GAFAE,GAIAF,EAAA72B,WAAA,SAAAjoC,GACA,MAAAQ,WAAA5C,QACAshE,EAAAl/D,EACA8+D,GAFAI,GAIAJ,EAAAoB,SAAA,SAAAlgE,GACA,GAAAsD,GAAA9C,UAAA5C,MACA,OAAA0F,IACAi8D,GAAAv/D,EACA+/D,GAAAv/D,UAAA8C,EAAA,GACAw7D,GAHAS,GAKAT,EAAAS,cAAA,SAAAv/D,GACA,MAAAQ,WAAA5C,QACA2hE,GAAAv/D,EACA8+D,GAFAS,GAIAT,EAAAiB,cAAA,SAAA//D,GACA,MAAAQ,WAAA5C,QACAmiE,GAAA//D,EACA8+D,GAFAiB,GAIAjB,EAAAU,YAAA,SAAAx/D,GACA,MAAAQ,WAAA5C,QACA4hE,GAAAx/D,EACA8+D,GAFAU,GAIAV,EAAAqB,cAAA,WACA,MAAA3/D,WAAA5C,QAAAkhE,GAEAA,EAEA,IAAAkB,IAAA,SAAAC,IACA7yD,IAAA,EACA1M,MAAA,EACAu2D,OAAA,EACA52D,KAAA,EAcAtB,IAAA2N,IAAA0zD,MAAA,WAEA,QAAAA,GAAA5vD,GACAA,EAAAgmC,KAAA,WACA,GAAAhmC,GAAAzR,GAAAmN,OAAAzK,MAAA0G,MAAA,iBAAA,OAAAA,MAAA,8BAAA,iBAAAlE,GAAA,kBAAAo8D,GAAAp8D,GAAA,mBAAAo8D,GACAC,EAAA9vD,EAAAylC,UAAA,eAAA1sC,MAAA,GACA+2D,GAAAh2D,QAAA4C,OAAA,QAAA0jC,KAAA,QAAA,cAAAzoC,MAAA,aAAA,UAAAA,MAAA,SAAA,aACAqI,EAAAylC,UAAA,WAAA1sC,MAAA,IAAAe,QAAA4C,OAAA,QAAA0jC,KAAA,QAAA,UAAAzoC,MAAA,SAAA,OACA,IAAAo4D,GAAA/vD,EAAAylC,UAAA,WAAA1sC,KAAAi3D,EAAA99D,EACA69D,GAAA7oB,OAAApzC,SACAi8D,EAAAj2D,QAAA4C,OAAA,KAAA0jC,KAAA,QAAA,SAAAhwC,GACA,MAAA,UAAAA,IACAuH,MAAA,SAAA,SAAAvH,GACA,MAAA6/D,IAAA7/D,KACAsM,OAAA,QAAA0jC,KAAA,IAAA,SAAAhwC,GACA,MAAA,QAAAmH,KAAAnH,GAAA,GAAA,OACAgwC,KAAA,IAAA,SAAAhwC,GACA,MAAA,QAAAmH,KAAAnH,GAAA,GAAA,OACAgwC,KAAA,QAAA,GAAAA,KAAA,SAAA,GAAAzoC,MAAA,aAAA,UACAo4D,EAAAp4D,MAAA,UAAAi4D,EAAA5rB,QAAA,OAAA,KACA,IAAA57B,GAAA8nD,EAAA3hE,GAAAqxC,WAAA5/B,GAAAmwD,EAAA5hE,GAAAqxC,WAAAkwB,EACAtgE,KACA4Y,EAAAiuB,GAAA7mC,GACA2gE,EAAA/vB,KAAA,IAAAh4B,EAAA,IAAAg4B,KAAA,QAAAh4B,EAAA,GAAAA,EAAA,IACAgoD,EAAAF,IAEA9yD,IACAgL,EAAAiuB,GAAAj5B,GACA+yD,EAAA/vB,KAAA,IAAAh4B,EAAA,IAAAg4B,KAAA,SAAAh4B,EAAA,GAAAA,EAAA,IACAioD,EAAAH,IAEAI,EAAAJ,KAyDA,QAAAI,GAAAtwD,GACAA,EAAAylC,UAAA,WAAArF,KAAA,YAAA,SAAAhwC,GACA,MAAA,aAAAmgE,GAAA,KAAAh5D,KAAAnH,IAAA,IAAAogE,GAAA,KAAAj5D,KAAAnH,IAAA,MAGA,QAAAggE,GAAApwD,GACAA,EAAAtE,OAAA,WAAA0kC,KAAA,IAAAmwB,EAAA,IACAvwD,EAAAylC,UAAA,2BAAArF,KAAA,QAAAmwB,EAAA,GAAAA,EAAA,IAEA,QAAAF,GAAArwD,GACAA,EAAAtE,OAAA,WAAA0kC,KAAA,IAAAowB,EAAA,IACAxwD,EAAAylC,UAAA,2BAAArF,KAAA,SAAAowB,EAAA,GAAAA,EAAA,IAEA,QAAAX,KAwBA,QAAAY,KACA,IAAAliE,GAAA8E,MAAAq9D,UACAC,IACAvwC,EAAA,KACA0oB,EAAA,IAAAynB,EAAA,GACAznB,EAAA,IAAA0nB,EAAA,GACAG,EAAA,GAEA38D,KAGA,QAAA48D,KACA,IAAAriE,GAAA8E,MAAAq9D,SAAA,GAAAC,IACA7nB,EAAA,IAAAynB,EAAA,GACAznB,EAAA,IAAA0nB,EAAA,GACAG,EAAA,EACA38D,KAGA,QAAA68D,KACA,GAAAx0D,GAAA9N,GAAAk5C,MAAAr1C,GAAA+1C,GAAA,CACAjgC,KACA7L,EAAA,IAAA6L,EAAA,GACA7L,EAAA,IAAA6L,EAAA,IAEAyoD,IACApiE,GAAA8E,MAAAy9D,QACA1wC,IAAAA,IAAAmwC,EAAA,GAAAA,EAAA,IAAA,GAAAC,EAAA,GAAAA,EAAA,IAAA,IACA1nB,EAAA,GAAAynB,IAAAl0D,EAAA,GAAA+jB,EAAA,KACA0oB,EAAA,GAAA0nB,IAAAn0D,EAAA,GAAA+jB,EAAA,MACAA,EAAA,MAEA2wC,GAAAC,EAAA30D,EAAA7M,EAAA,KACA4gE,EAAApwD,GACAmoC,GAAA,GAEA8oB,GAAAD,EAAA30D,EAAAe,EAAA,KACAizD,EAAArwD,GACAmoC,GAAA,GAEAA,IACAmoB,EAAAtwD,GACAkxD,GACAt8D,KAAA,QACA00D,KAAAqH,EAAA,OAAA,YAIA,QAAAK,GAAA30D,EAAAmJ,EAAA3S,GACA,GAAAuO,GAAAF,EAAAkH,EAAAiuB,GAAA7wB,GAAA2pB,EAAA/mB,EAAA,GAAAgnB,EAAAhnB,EAAA,GAAAzL,EAAAmsC,EAAAj2C,GAAAi1B,EAAAj1B,EAAA29D,EAAAD,EAAAx+D,EAAA+1B,EAAA,GAAAA,EAAA,EAiBA,OAhBA6oC,KACAxhC,GAAAxyB,EACAyyB,GAAAr9B,EAAA4K,GAEAyE,GAAAvO,EAAAs+D,EAAAC,GAAAxjE,KAAAsT,IAAAiuB,EAAAvhC,KAAAwT,IAAAguB,EAAA/yB,EAAAxJ,KAAAwJ,EAAAxJ,GACA89D,EACAzvD,GAAAE,GAAAzE,GAAA5K,GAEAquB,IAAAzjB,EAAA/O,KAAAsT,IAAAiuB,EAAAvhC,KAAAwT,IAAAguB,EAAA,EAAAhP,EAAAvtB,GAAAuO,KACAA,EAAAzE,GACAuE,EAAAE,EACAA,EAAAzE,GAEAuE,EAAAvE,GAGAmrB,EAAA,IAAA1mB,GAAA0mB,EAAA,IAAA5mB,GACArO,EAAAw+D,EAAA,KAAAC,EAAA,KACAxpC,EAAA,GAAA1mB,EACA0mB,EAAA,GAAA5mB,GACA,GAJA,OAOA,QAAAqwD,KACAV,IACA7wD,EAAArI,MAAA,iBAAA,OAAA8tC,UAAA,WAAA9tC,MAAA,UAAAi4D,EAAA5rB,QAAA,OAAA,MACAz1C,GAAAmN,OAAA,QAAA/D,MAAA,SAAA,MACA8D,EAAAhI,GAAA,kBAAA,MAAAA,GAAA,gBAAA,MAAAA,GAAA,kBAAA,MAAAA,GAAA,iBAAA,MAAAA,GAAA,gBAAA,MAAAA,GAAA,cAAA,MACAm1C,IACAsoB,GACAt8D,KAAA,aAvGA,GAAAwrB,GAAAlY,EAAA9V,EAAAnB,KAAAugE,EAAAjjE,GAAAmN,OAAAnN,GAAA8E,MAAAjB,QAAA8+D,EAAA79D,EAAAkB,GAAAnC,EAAApC,WAAAgQ,EAAAzR,GAAAmN,OAAAtJ,GAAAq/D,EAAAD,EAAArqB,QAAA4pB,GAAA,UAAAx5D,KAAAk6D,IAAAjiE,EAAAyhE,GAAA,UAAA15D,KAAAk6D,IAAAr0D,EAAAuzD,EAAAa,EAAAvrB,QAAA,UAAA2C,EAAAttC,EAAAlJ,GAAA02C,EAAAv6C,GAAAk5C,MAAAr1C,GACAqJ,EAAAlN,GAAAmN,OAAAzM,EAAAmD,IAAAqB,GAAA,gBAAAg9D,GAAAh9D,GAAA,cAAAm9D,EAOA,IANAriE,GAAA8E,MAAA4I,eACAR,EAAAhI,GAAA,kBAAAo9D,GAAAp9D,GAAA,iBAAA89D,GAEA91D,EAAAhI,GAAA,kBAAAo9D,GAAAp9D,GAAA,gBAAA89D,GAEAvxD,EAAAi/B,YAAAwG,UAAA,KAAAxG,YACA0xB,EACA7nB,EAAA,GAAAynB,EAAA,GAAAznB,EAAA,GACAA,EAAA,GAAA0nB,EAAA,GAAA1nB,EAAA,OACA,IAAA2oB,EAAA,CACA,GAAAC,IAAA,KAAAn6D,KAAAk6D,GAAAE,GAAA,KAAAp6D,KAAAk6D,EACAvpD,IAAAqoD,EAAA,EAAAmB,GAAA5oB,EAAA,GAAA0nB,EAAA,EAAAmB,GAAA7oB,EAAA,IACAA,EAAA,GAAAynB,EAAAmB,GACA5oB,EAAA,GAAA0nB,EAAAmB,OACApjE,IAAA8E,MAAAy9D,SAAA1wC,EAAA0oB,EAAAt3C,QACAwO,GAAArI,MAAA,iBAAA,QAAA8tC,UAAA,WAAA9tC,MAAA,UAAA,MACApJ,GAAAmN,OAAA,QAAA/D,MAAA,SAAA65D,EAAA75D,MAAA,WACAu5D,GACAt8D,KAAA,eAEAi8D,IA3HA,GAAAS,GAAAD,EAAAh+D,EAAAiB,EAAAs7D,EAAA,aAAA,QAAA,YAAApgE,EAAA,KAAA4N,EAAA,KAAAmzD,GAAA,EAAA,GAAAC,GAAA,EAAA,GAAAY,GAAA,EAAAD,GAAA,EAAAnB,EAAA4B,GAAA,EAoRA,OAnPAhC,GAAAv8D,MAAA,SAAA2M,GACAA,EAAAgmC,KAAA,WACA,GAAAkrB,GAAA79D,EAAAkB,GAAAtD,KAAAjB,WAAA6hE,GACAriE,EAAA+gE,EACAnzD,EAAAozD,EACA39D,EAAAy+D,EACA/3D,EAAA83D,GACAS,EAAA7gE,KAAAs5C,WAAAsnB,CACA5gE,MAAAs5C,UAAAsnB,EACAnlB,GACAn+C,GAAAmN,OAAAzK,MAAA2uC,aAAAoG,KAAA,cAAA,WACAsrB,EAAAQ,EAAAj/D,EACAw+D,EAAAS,EAAAv4D,EACAg3D,EAAAuB,EAAAtiE,EACAghE,EAAAsB,EAAA10D,EACA8zD,GACAt8D,KAAA,iBAEA0qC,MAAA,cAAA,WACA,GAAApG,GAAAjM,GAAAsjC,EAAAsB,EAAAriE,GAAAuiE,EAAA9kC,GAAAujC,EAAAqB,EAAAz0D,EAEA,OADAk0D,GAAAD,EAAA,KACA,SAAAxsD,GACA0rD,EAAAsB,EAAAriE,EAAA0pC,EAAAr0B,GACA2rD,EAAAqB,EAAAz0D,EAAA20D,EAAAltD,GACAqsD,GACAt8D,KAAA,QACA00D,KAAA,cAGAtjB,KAAA,YAAA,WACAsrB,EAAAO,EAAAh/D,EACAw+D,EAAAQ,EAAAt4D,EACA23D,GACAt8D,KAAA,QACA00D,KAAA,WAEA4H,GACAt8D,KAAA,gBAIAs8D,GACAt8D,KAAA,eAEAs8D,GACAt8D,KAAA,QACA00D,KAAA,WAEA4H,GACAt8D,KAAA,iBA8HAg7D,EAAApgE,EAAA,SAAA+D,GACA,MAAAvD,WAAA5C,QACAoC,EAAA+D,EACAy8D,EAAA4B,IAAApiE,GAAA,GAAA4N,GACAwyD,GAHApgE,GAKAogE,EAAAxyD,EAAA,SAAA7J,GACA,MAAAvD,WAAA5C,QACAgQ,EAAA7J,EACAy8D,EAAA4B,IAAApiE,GAAA,GAAA4N,GACAwyD,GAHAxyD,GAKAwyD,EAAA34B,MAAA,SAAA1jC,GACA,MAAAvD,WAAA5C,QACAoC,GAAA4N,GAAAg0D,IAAA79D,EAAA,GAAA49D,IAAA59D,EAAA,IAAA/D,EAAA4hE,IAAA79D,EAAA6J,IAAA+zD,IAAA59D,GACAq8D,GAFApgE,GAAA4N,GAAAg0D,EAAAD,GAAA3hE,EAAA4hE,EAAAh0D,EAAA+zD,EAAA,MAIAvB,EAAA9nC,OAAA,SAAAv0B,GACA,GAAA4e,GAAA2H,EAAA7H,EAAA8H,EAAAlV,CACA,OAAA7U,WAAA5C,QAqBAoC,IACA2iB,EAAA5e,EAAA,GAAAumB,EAAAvmB,EAAA,GACA6J,IAAA+U,EAAAA,EAAA,GAAA2H,EAAAA,EAAA,IACAw3C,GAAAn/C,EAAA2H,GACAtqB,EAAA2jB,SAAAhB,EAAA3iB,EAAA2iB,GAAA2H,EAAAtqB,EAAAsqB,IACA3H,EAAA2H,IAAAjV,EAAAsN,EAAAA,EAAA2H,EAAAA,EAAAjV,IACAsN,GAAAo+C,EAAA,IAAAz2C,GAAAy2C,EAAA,MAAAA,GAAAp+C,EAAA2H,KAEA1c,IACA6U,EAAA1e,EAAA,GAAAwmB,EAAAxmB,EAAA,GACA/D,IAAAyiB,EAAAA,EAAA,GAAA8H,EAAAA,EAAA,IACAs3C,GAAAp/C,EAAA8H,GACA3c,EAAA+V,SAAAlB,EAAA7U,EAAA6U,GAAA8H,EAAA3c,EAAA2c,IACA9H,EAAA8H,IAAAlV,EAAAoN,EAAAA,EAAA8H,EAAAA,EAAAlV,IACAoN,GAAAu+C,EAAA,IAAAz2C,GAAAy2C,EAAA,MAAAA,GAAAv+C,EAAA8H,KAEA61C,IApCApgE,IACA8hE,GACAn/C,EAAAm/C,EAAA,GAAAx3C,EAAAw3C,EAAA,KAEAn/C,EAAAo+C,EAAA,GAAAz2C,EAAAy2C,EAAA,GACA/gE,EAAA2jB,SAAAhB,EAAA3iB,EAAA2jB,OAAAhB,GAAA2H,EAAAtqB,EAAA2jB,OAAA2G,IACA3H,EAAA2H,IAAAjV,EAAAsN,EAAAA,EAAA2H,EAAAA,EAAAjV,KAGAzH,IACAi0D,GACAp/C,EAAAo/C,EAAA,GAAAt3C,EAAAs3C,EAAA,KAEAp/C,EAAAu+C,EAAA,GAAAz2C,EAAAy2C,EAAA,GACApzD,EAAA+V,SAAAlB,EAAA7U,EAAA+V,OAAAlB,GAAA8H,EAAA3c,EAAA+V,OAAA4G,IACA9H,EAAA8H,IAAAlV,EAAAoN,EAAAA,EAAA8H,EAAAA,EAAAlV,KAGArV,GAAA4N,IAAA+U,EAAAF,IAAA6H,EAAAC,IAAAvqB,GAAA2iB,EAAA2H,GAAA1c,IAAA6U,EAAA8H,KAoBA61C,EAAAoC,MAAA,WAKA,MAJApC,GAAA5rB,UACAusB,GAAA,EAAA,GAAAC,GAAA,EAAA,GACAc,EAAAD,EAAA,MAEAzB,GAEAA,EAAA5rB,MAAA,WACA,QAAAx0C,GAAA+gE,EAAA,IAAAA,EAAA,MAAAnzD,GAAAozD,EAAA,IAAAA,EAAA,IAEAjiE,GAAAsV,OAAA+rD,EAAAv8D,EAAA,MAEA,IAAA48D,KACAn9D,EAAA,YACAsB,EAAA,YACAD,EAAA,YACAsH,EAAA,YACAw2D,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAEAR,KAAA,IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,KAAA,OAAA,IAAA,MAAA,IAAA,SACAhpD,GAAA8D,GAAApe,OAAAgsD,GAAAD,WACAgY,GAAAzpD,GAAAJ,IACA8pD,GAAAD,GAAA,wBACAzpD,IAAA2pD,IAAA7tD,KAAA7T,UAAA0vC,cAAA,GAAA77B,MAAA,4BAAA47B,GAAAgyB,GAIAhyB,GAAA7xC,MAAA,SAAAqa,GACA,GAAAna,GAAA,GAAA+V,MAAAoE,EACA,OAAApZ,OAAAf,GAAA,KAAAA,GAEA2xC,GAAAn/B,SAAAmxD,GAAAnxD,SACAuL,GAAA8lD,OAAA1qD,GAAA,SAAAnZ,GACA,MAAA,IAAAwZ,IAAA,IAAAva,KAAA6a,MAAA9Z,EAAA,OACA,SAAAA,EAAAuZ,GACAvZ,EAAAgrD,QAAAhrD,EAAA+pD,UAAA,IAAA9qD,KAAA6a,MAAAP,KACA,SAAAvZ,GACA,MAAAA,GAAAme,eAEAJ,GAAA+lD,QAAA/lD,GAAA8lD,OAAApqD,MACAsE,GAAA+lD,QAAAjqD,IAAAkE,GAAA8lD,OAAAhqD,IAAAJ,MACAsE,GAAAgmD,OAAA5qD,GAAA,SAAAnZ,GACA,MAAA,IAAAwZ,IAAA,IAAAva,KAAA6a,MAAA9Z,EAAA,OACA,SAAAA,EAAAuZ,GACAvZ,EAAAgrD,QAAAhrD,EAAA+pD,UAAA,IAAA9qD,KAAA6a,MAAAP,KACA,SAAAvZ,GACA,MAAAA,GAAAke,eAEAH,GAAAimD,QAAAjmD,GAAAgmD,OAAAtqD,MACAsE,GAAAimD,QAAAnqD,IAAAkE,GAAAgmD,OAAAlqD,IAAAJ,MACAsE,GAAAkmD,KAAA9qD,GAAA,SAAAnZ,GACA,GAAAkkE,GAAAlkE,EAAA2f,oBAAA,EACA,OAAA,IAAAnG,IAAA,MAAAva,KAAA6a,MAAA9Z,EAAA,KAAAkkE,GAAAA,KACA,SAAAlkE,EAAAuZ,GACAvZ,EAAAgrD,QAAAhrD,EAAA+pD,UAAA,KAAA9qD,KAAA6a,MAAAP,KACA,SAAAvZ,GACA,MAAAA,GAAA6d,aAEAE,GAAAomD,MAAApmD,GAAAkmD,KAAAxqD,MACAsE,GAAAomD,MAAAtqD,IAAAkE,GAAAkmD,KAAApqD,IAAAJ,MACAsE,GAAAqmD,MAAAjrD,GAAA,SAAAnZ,GAGA,MAFAA,GAAA+d,GAAAktC,IAAAjrD,GACAA,EAAAiqD,QAAA,GACAjqD,GACA,SAAAA,EAAAuZ,GACAvZ,EAAA4qD,SAAA5qD,EAAAyd,WAAAlE,IACA,SAAAvZ,GACA,MAAAA,GAAAyd,aAEAM,GAAAd,OAAAc,GAAAqmD,MAAA3qD,MACAsE,GAAAd,OAAApD,IAAAkE,GAAAqmD,MAAAvqD,IAAAJ,KAsDA,IAAAu4B,KAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,OAAA,OAAA,OAAA,OAAA,SACAqyB,KAAAtmD,GAAA8lD,OAAA,IAAA9lD,GAAA8lD,OAAA,IAAA9lD,GAAA8lD,OAAA,KAAA9lD,GAAA8lD,OAAA,KAAA9lD,GAAAgmD,OAAA,IAAAhmD,GAAAgmD,OAAA,IAAAhmD,GAAAgmD,OAAA,KAAAhmD,GAAAgmD,OAAA,KAAAhmD,GAAAkmD,KAAA,IAAAlmD,GAAAkmD,KAAA,IAAAlmD,GAAAkmD,KAAA,IAAAlmD,GAAAkmD,KAAA,KAAAlmD,GAAAktC,IAAA,IAAAltC,GAAAktC,IAAA,IAAAltC,GAAAotC,KAAA,IAAAptC,GAAAqmD,MAAA,IAAArmD,GAAAqmD,MAAA,IAAArmD,GAAAk0B,KAAA,IACAqyB,GAAArqD,GAAAmD,QAAA,MAAA,SAAA3b,GACA,MAAAA,GAAAwc,qBACA,MAAA,SAAAxc,GACA,MAAAA,GAAA0c,gBACA,QAAA,SAAA1c,GACA,MAAAA,GAAAyc,gBACA,QAAA,SAAAzc,GACA,MAAAA,GAAAoc,cACA,QAAA,SAAApc,GACA,MAAAA,GAAAuZ,UAAA,GAAAvZ,EAAAmc,aACA,QAAA,SAAAnc,GACA,MAAA,IAAAA,EAAAmc,aACA,KAAA,SAAAnc,GACA,MAAAA,GAAAgc,cACA,KAAAgH,MACAytB,IACAz4B,MAAA,SAAA+L,EAAAiiB,EAAAruB,GACA,MAAAxZ,IAAA6Z,MAAAxa,KAAAwX,KAAA+O,EAAApM,GAAAA,GAAAquB,EAAAruB,GAAAhR,IAAA+pC,KAEAr4B,MAAAvW,EACAkT,KAAAlT,EAEA8gE,IAAApyB,KAAAl0B,GAAAk0B,KACAl0B,GAAAlH,MAAA,WACA,MAAAg7B,IAAAjyC,GAAAiX,MAAA2xB,SAAA67B,GAAAC,IAEA,IAAAC,IAAAF,GAAAj8D,IAAA,SAAAyC,GACA,OAAAA,EAAA,GAAAgP,IAAAhP,EAAA,MAEA25D,GAAAd,GAAAtmD,QAAA,MAAA,SAAA3b,GACA,MAAAA,GAAAkoD,wBACA,MAAA,SAAAloD,GACA,MAAAA,GAAAqoD,mBACA,QAAA,SAAAroD,GACA,MAAAA,GAAAmoD,mBACA,QAAA,SAAAnoD,GACA,MAAAA,GAAAioD,iBACA,QAAA,SAAAjoD,GACA,MAAAA,GAAA+nD,aAAA,GAAA/nD,EAAA8nD,gBACA,QAAA,SAAA9nD,GACA,MAAA,IAAAA,EAAA8nD,gBACA,KAAA,SAAA9nD,GACA,MAAAA,GAAAooD,iBACA,KAAAplC,KACA8/C,IAAAtyB,KAAAl0B,GAAAk0B,KAAAp4B,IACAkE,GAAAlH,MAAAgD,IAAA,WACA,MAAAg4B,IAAAjyC,GAAAiX,MAAA2xB,SAAA+7B,GAAAC,KAEA5kE,GAAA83C,KAAAvkC,GAAA,SAAAQ,GACA,MAAAA,GAAAyB,eAEAxV,GAAA6kE,KAAA,SAAApxD,EAAA1I,GACA,MAAA4I,IAAAF,EAAA,mBAAAk/B,GAAA5nC,IAKA/K,GAAA+3C,KAAA,SAAAtkC,EAAA1I,GACA,MAAA4I,IAAAF,EAAA,YAAAo/B,GAAA9nC,IAOA/K,GAAAs3C,IAAA/jC,GAAA,SAAAQ,GACA,MAAAA,GAAA+wD,cAEA,kBAAAC,SAAAA,OAAAC,IAAAD,OAAA/kE,IAAA,gBAAAilE,SAAAA,OAAAC,UAAAD,OAAAC,QAAAllE,IACA0C,KAAA1C,GAAAA,MC7xSA,WA0VA,QAAAmlE,GAAAtjE,GACA,MAAAA,GAAAqrD,OAGA,QAAAkY,GAAAvjE,GACA,MAAAA,GAAAwjE,QAGA,QAAAC,GAAAzjE,GACA,MAAAA,GAAA0jE,SAGA,QAAAC,GAAAvkE,GACA,MAAA,UAAAY,GACA,MAAA,aAAAZ,EAAAY,GAAA,OAIA,QAAA4jE,GAAAxkE,GACA,GAAA2iB,GAAA3iB,EAAA,EACA,OAAA,UAAAY,GACA,MAAAxC,MAAAC,IAAA2B,EAAAY,GAAA+hB,IA1WA5jB,GAAA0lE,OAAA,WAYA,QAAAA,GAAAj0D,GACAA,EAAAgmC,KAAA,SAAA51C,EAAAyC,GACA,GAAAqhE,GAAAzY,EAAA/gD,KAAAzJ,KAAAb,EAAAyC,GAAArB,QAAAuiB,KAAAxlB,GAAAg0C,YAEA4xB,GADAP,EAAAl5D,KAAAzJ,KAAAb,EAAAyC,GACA+gE,EAAAl5D,KAAAzJ,KAAAb,EAAAyC,GAAArB,QAAAuiB,KAAAxlB,GAAAg0C,aACA6xB,EAAAN,EAAAp5D,KAAAzJ,KAAAb,EAAAyC,GAAArB,QAAAuiB,KAAAxlB,GAAAg0C,YACAviC,EAAAzR,GAAAmN,OAAAzK,MAGA6oB,EAAAvrB,GAAAiX,MAAA2xB,SACAhB,QAAA,EAAAvoC,KAAAsT,IAAAgzD,EAAA,GAAAC,EAAA,GAAAC,EAAA,MACAhsD,MAAA7B,GAAAF,EAAA,IAAA,EAAAA,IAGA8L,EAAAlhB,KAAAs5C,WAAAh8C,GAAAiX,MAAA2xB,SACAhB,QAAA,EAAAnxB,EAAAA,IACAoD,MAAA0R,EAAA1R,QAGAnX,MAAAs5C,UAAAzwB,CAGA,IAAAuvB,GAAA2qB,EAAA7hD,GACAu3B,EAAAsqB,EAAAl6C,GAGA1R,EAAApI,EAAAylC,UAAA,cACA1sC,KAAAm7D,EAEA9rD,GAAAtO,QAAA4C,OAAA,QACA0jC,KAAA,QAAA,SAAAhwC,EAAAyC,GAAA,MAAA,UAAAA,IACAutC,KAAA,QAAAiJ,GACAjJ,KAAA,SAAAi0B,GACAj0B,KAAA,IAAA75B,EAAA4L,EAAA,GACAiuB,KAAA,QAAAsJ,GACAtJ,KAAA,IAAA75B,EAAAuT,EAAA,GAEA1R,EAAAg4B,KAAA,IAAA75B,EAAAuT,EAAA,GACAsmB,KAAA,QAAAsJ,GACAtJ,KAAA,SAAAi0B,EAGA,IAAAC,GAAAt0D,EAAAylC,UAAA,gBACA1sC,KAAAq7D,EAEAE,GAAAx6D,QAAA4C,OAAA,QACA0jC,KAAA,QAAA,SAAAhwC,EAAAyC,GAAA,MAAA,YAAAA,IACAutC,KAAA,QAAAiJ,GACAjJ,KAAA,SAAAi0B,EAAA,GACAj0B,KAAA,IAAA75B,EAAA4L,EAAA,GACAiuB,KAAA,IAAAi0B,EAAA,GACAz0B,aACAC,SAAAA,GACAO,KAAA,QAAAsJ,GACAtJ,KAAA,IAAA75B,EAAAuT,EAAA,GAEAw6C,EACA10B,aACAC,SAAAA,GACAO,KAAA,QAAAsJ,GACAtJ,KAAA,SAAAi0B,EAAA,GACAj0B,KAAA,IAAA75B,EAAAuT,EAAA,GACAsmB,KAAA,IAAAi0B,EAAA,EAMA,IASAE,GAAAhmE,GAAAmN,OAAA,sBAAAgB,OAAA,OACA0jC,KAAA,QAAA,WACAzoC,MAAA,UAAA,EAGA28D,GAAA7gE,GAAA,aAAA,SAAArD,EAAAyC,GAGA0hE,EAAA30B,aACAC,SAAA,KACAloC,MAAA,UAAA,GAGA48D,EAAAjuB,KAAA,OAAA,IAAAl2C,GAAAokE,YAAA,GAAA,QACA78D,MAAA,OAAA,WAGA,GAAA88D,GAAAn6D,EAAA,+BAAA+L,OACA,OAAA9X,IAAA8E,MAAA8J,MAAAs3D,EAAAn6D,EAAA,sBAAA+L,QACA9X,GAAA8E,MAAA8J,MAAAs3D,EAAA,KAGAlmE,GAAA8E,MAAA8J,MAAA,OAGAxF,MAAA,MAAA,WAGA,GAAA+8D,GAAAp6D,EAAA,+BAAA+5D,QACA,OAAA9lE,IAAA8E,MAAAgK,MAAAq3D,EAAAL,EACA9lE,GAAA8E,MAAAgK,MAAAq3D,EAAA,KAGAnmE,GAAA8E,MAAAgK,MAAA,SAMAi3D,EAAA7gE,GAAA,aAAA,SAAArD,EAAAyC,GACA0hE,EAAA30B,aACAC,SAAA,KACAloC,MAAA,UAAA,IAQA,IAAAg9D,GAAA30D,EAAAylC,UAAA,KACA1sC,KAAAo7D,GACAr6D,QAAA4C,OAAA,KACA/E,MAAA,cAAA,MAEAg9D,GAAAj4D,OAAA,QACA0jC,KAAA,QAAA,UACAA,KAAA,KAAAjuB,GACAiuB,KAAA,KAAAjuB,GACAiuB,KAAA,KAAAi0B,EAAA,GACAj0B,KAAA,KAAA,EAAAi0B,EAAA,GACAj0B,KAAA,KAAAtmB,GACAsmB,KAAA,KAAAtmB,GAEA66C,EAAAj4D,OAAA,UACA0jC,KAAA,KAAAjuB,GACAiuB,KAAA,KAAAi0B,EAAA,GACAj0B,KAAA,IAAA,IACAA,KAAA,KAAAtmB,GACAsmB,KAAA,YAAA,oBACAA,KAAA,OAAA,UAEAu0B,EAAAj4D,OAAA,UACA0jC,KAAA,KAAAjuB,GACAiuB,KAAA,KAAAi0B,EAAA,GACAj0B,KAAA,IAAA,GACAA,KAAA,KAAAtmB,GACAsmB,KAAA,YAAA,qBACAA,KAAA,OAAA,SAEAu0B,EAAAj4D,OAAA,UACA0jC,KAAA,KAAAjuB,GACAiuB,KAAA,KAAAi0B,EAAA,GACAj0B,KAAA,IAAA,GACAA,KAAA,KAAAtmB,GACAsmB,KAAA,YAAA,oBACAA,KAAA,OAAA,SAEAu0B,EAAAj4D,OAAA,WACA0jC,KAAA,KAAAjuB,GACAiuB,KAAA,KAAAi0B,EAAA,GACAj0B,KAAA,KAAA,GACAA,KAAA,KAAA,GACAA,KAAA,KAAAtmB,GACAsmB,KAAA,YAAA,mBACAA,KAAA,OAAA,SAEAu0B,EAAAj4D,OAAA,WACA0jC,KAAA,KAAAjuB,GACAiuB,KAAA,KAAAi0B,EAAA,GACAj0B,KAAA,KAAA,GACAA,KAAA,KAAA,GACAA,KAAA,KAAAtmB,GACAsmB,KAAA,YAAA,mBACAA,KAAA,OAAA,UAEAu0B,EAAAj4D,OAAA,QACA2pC,KAAA,QACAjG,KAAA,cAAA,UACAA,KAAA,IAAAtmB,GACAsmB,KAAA,IAAAi0B,EAAA,EAAA,GAEAM,EAAAv0B,KAAA,KAAAtmB,GACAsmB,KAAA,KAAAtmB,GACAsmB,KAAA,KAAAi0B,EAAA,GACAj0B,KAAA,KAAA,EAAAi0B,EAAA,GAEAM,EAAAlhE,GAAA,aAAA,SAAArD,EAAAyC,GACA0hE,EAAA30B,aACAC,SAAA,KACAloC,MAAA,UAAA,GACA48D,EAAAjuB,KAAA,OAAA,IAAAl2C,GAAAokE,YAAA,GAAA,QACA78D,MAAA,OAAA,WACA,GAAA88D,GAAAn6D,EAAA,+BAAA+L,OACA,OAAA9X,IAAA8E,MAAA8J,MAAAs3D,EAAAn6D,EAAA,sBAAA+L,QACA9X,GAAA8E,MAAA8J,MAAAs3D,EAAA,KAGAlmE,GAAA8E,MAAA8J,MAAA,OAGAxF,MAAA,MAAA,WACA,GAAA+8D,GAAAp6D,EAAA,+BAAA+5D,QACA,OAAA9lE,IAAA8E,MAAAgK,MAAAq3D,EAAAL,EACA9lE,GAAA8E,MAAAgK,MAAAq3D,EAAA,KAGAnmE,GAAA8E,MAAAgK,MAAA,SAKAs3D,EAAAlhE,GAAA,aAAA,SAAArD,EAAAyC,GACA0hE,EAAA30B,aACAC,SAAA,KACAloC,MAAA,UAAA,IAIA,IAAArJ,GAAAmpC,GAAA3d,EAAA2d,WAAA,GAGAyI,EAAAlgC,EAAAylC,UAAA,UACA1sC,KAAA+gB,EAAAyd,MAAA,GAAA,SAAAnnC,GACA,MAAAa,MAAAuuC,aAAAlxC,EAAA8B,KAIAu+D,EAAAzuB,EAAApmC,QAAA4C,OAAA,KACA0jC,KAAA,QAAA,QACAA,KAAA,YAAA2zB,EAAA5hD,IACAxa,MAAA,UAAA,KAEAg3D,GAAAjyD,OAAA,QACA0jC,KAAA,KAAAi0B,GACAj0B,KAAA,KAAA,EAAAi0B,EAAA,GAEA1F,EAAAjyD,OAAA,QACA0jC,KAAA,cAAA,UACAA,KAAA,KAAA,OACAA,KAAA,IAAA,EAAAi0B,EAAA,GACAhuB,KAAA/3C,GAGAqgE,EAAAvuB,KAAA,YAAA2zB,EAAAj6C,IACAniB,MAAA,UAAA,EAGA,IAAAk3D,GAAA3uB,EAAAE,KAAA,YAAA2zB,EAAAj6C,IACAniB,MAAA,UAAA,EAEAk3D,GAAAnzD,OAAA,QACA0kC,KAAA,KAAAi0B,GACAj0B,KAAA,KAAA,EAAAi0B,EAAA,GAEAxF,EAAAnzD,OAAA,QACA0kC,KAAA,IAAA,EAAAi0B,EAAA,GAGAn0B,EAAAgH,OAAA9G,KAAA,YAAA2zB,EAAAj6C,IACAniB,MAAA,UAAA,MACA7D,WAEAvF,GAAAwxC,MAAA8X,QAzRA,GAAAyX,GAAA,OACA/oD,GAAA,EACAs5B,EAAA,EACA4b,EAAAiY,EACAE,EAAAD,EACAG,EAAAD,EACAxtD,EAAA,IACAguD,EAAA,GACA58B,EAAA,IAyUA,OApDAw8B,GAAA3E,OAAA,SAAA9/D,GACA,MAAAQ,WAAA5C,QACAkiE,EAAA9/D,EACA+W,EAAA,SAAA+oD,GAAA,UAAAA,EACA2E,GAHA3E,GAOA2E,EAAAxY,OAAA,SAAAjsD,GACA,MAAAQ,WAAA5C,QACAquD,EAAAjsD,EACAykE,GAFAxY,GAMAwY,EAAAL,QAAA,SAAApkE,GACA,MAAAQ,WAAA5C,QACAwmE,EAAApkE,EACAykE,GAFAL,GAMAK,EAAAH,SAAA,SAAAtkE,GACA,MAAAQ,WAAA5C,QACA0mE,EAAAtkE,EACAykE,GAFAH,GAKAG,EAAA5tD,MAAA,SAAA7W,GACA,MAAAQ,WAAA5C,QACAiZ,EAAA7W,EACAykE,GAFA5tD,GAKA4tD,EAAAI,OAAA,SAAA7kE,GACA,MAAAQ,WAAA5C,QACAinE,EAAA7kE,EACAykE,GAFAI,GAKAJ,EAAAx8B,WAAA,SAAAjoC,GACA,MAAAQ,WAAA5C,QACAqqC,EAAAjoC,EACAykE,GAFAx8B,GAKAw8B,EAAAp0B,SAAA,SAAArwC,GACA,MAAAQ,WAAA5C,QACAyyC,EAAArwC,EACAykE,GAFAp0B,GAKAo0B,GA4BA58B,OAAAxmC,UAAA2jE,YAAA,SAAAt9D,EAAA9G,EAAAyU,GACA,GAAA/R,GAAA7B,KACAiG,EAAAxH,MAAAwH,EAAAtJ,KAAAC,IAAAqJ,IAAA,EAAAA,EACA9G,EAAAwkE,QAAAxkE,EAAA,IAAAA,EACAyU,EAAA+vD,QAAA/vD,EAAA,IAAAA,EACA1Q,EAAA,EAAArB,EAAA,IAAA,GACAD,EAAA8O,SAAA7O,EAAAlF,KAAAC,KAAAiF,GAAA,GAAA3F,QAAA+J,IAAA,GACAqC,GAAAA,EAAA1G,EAAAzF,QAAA,EAAAmM,EAAA,EAAA,CACA,OAAApF,GAAA,KAAAoF,EAAA1G,EAAAlF,OAAA,EAAA4L,GAAAsL,EAAA,IAAAhS,EAAAlF,OAAA4L,GAAAlM,QAAA,iBAAA,KAAAwX,IAAA3N,EAAA9G,EAAAxC,KAAAC,IAAAiF,EAAAD,GAAA1F,QAAA+J,GAAA1F,MAAA,GAAA,QCtXA,SAAAqjE,GAEA,GAAA,kBAAAvB,SAAAA,OAAAC,IAGAD,UAAAuB,OAEA,IAAA,gBAAApB,SAAA,CAEA,GAAAqB,GAAAC,QAAA,KAGAvB,QAAAC,QAAAoB,IACArB,OAAAC,QAAAuB,IAAA,WACA,MAAAF,GAAAG,aAAAC,UAAA,sBAAA,aAMA34D,QAAA44D,WAAAN,KAGA,WAEA,YAIA,SAAAO,GAAA9gD,GACA,MAAAA,GAAAvZ,OAAA,SAAA3L,GACA,MAAA6B,MAAA7B,IAAA,EAAA6B,KAAA7B,IAAA,OAKA,QAAAimE,GAAAvkE,EAAAkmB,GACA,MAAAppB,MAAA4R,MAAA1O,EAAAkmB,GAAAA,EAIA,QAAA9O,GAAAotD,GAEA,GAAA53D,GAAA43D,EAAA33D,wBACA43D,EAAAD,EAAAxmE,cACA0mE,EAAAD,EAAArmE,aAAAqmE,EAAAE,aACAC,EAAAH,EAAAvmE,gBACA2mE,EAAAH,EAAAI,WASA,OAJA,0BAAAr+D,KAAAmwC,UAAAC,aACAguB,EAAA,IAIA/4D,IAAAc,EAAAd,IAAA44D,EAAAK,YAAAH,EAAA73D,UACAhO,KAAA6N,EAAA7N,KAAA8lE,EAAAD,EAAA93D,YAKA,QAAAk4D,GAAA1mE,GACA,MAAA,gBAAAA,KAAAM,MAAAN,IAAAiV,SAAAjV,GAIA,QAAA2mE,GAAAppE,GACA,GAAAwY,GAAAvX,KAAAkT,IAAA,GAAA,EACA,OAAAu2B,SAAAzpC,KAAA4R,MAAA7S,EAAAwY,GAAAA,GAAAhY,QAAA,IAIA,QAAA6oE,GAAAC,EAAAC,EAAAr2B,GACAs2B,EAAAF,EAAAC,GACAp6D,WAAA,WACAs6D,EAAAH,EAAAC,IACAr2B,GAIA,QAAAw2B,GAAAjnE,GACA,MAAAxB,MAAAsT,IAAAtT,KAAAwT,IAAAhS,EAAA,KAAA,GAIA,QAAAknE,GAAAlnE,GACA,MAAArB,OAAAg2C,QAAA30C,GAAAA,GAAAA,GAIA,QAAAmnE,GAAAC,GACA,GAAAC,GAAAD,EAAA7/D,MAAA,IACA,OAAA8/D,GAAArpE,OAAA,EAAAqpE,EAAA,GAAArpE,OAAA,EAIA,QAAA+oE,GAAAO,EAAAR,GACAQ,EAAAv/D,UACAu/D,EAAAv/D,UAAAC,IAAA8+D,GAEAQ,EAAAR,WAAA,IAAAA,EAKA,QAAAE,GAAAM,EAAAR,GACAQ,EAAAv/D,UACAu/D,EAAAv/D,UAAArD,OAAAoiE,GAEAQ,EAAAR,UAAAQ,EAAAR,UAAA7oE,QAAA,GAAAmJ,QAAA,UAAA0/D,EAAAv/D,MAAA,KAAA1I,KAAA,KAAA,UAAA,MAAA,KAKA,QAAA0oE,GAAAD,EAAAR,GACAQ,EAAAv/D,UACAu/D,EAAAv/D,UAAA+uC,SAAAgwB,GAEA,GAAA1/D,QAAA,QAAA0/D,EAAA,QAAA,MAAA3+D,KAAAm/D,EAAAR,WAiDA,QAAAU,GAAAh+C,EAAAC,GACA,MAAA,MAAAA,EAAAD,GAIA,QAAAi+C,GAAAzuD,EAAAtX,GACA,MAAA,KAAAA,GAAAsX,EAAA,GAAAA,EAAA,IAIA,QAAA0uD,GAAA1uD,EAAAtX,GACA,MAAA+lE,GAAAzuD,EAAAA,EAAA,GAAA,EACAtX,EAAAlD,KAAAC,IAAAua,EAAA,IACAtX,EAAAsX,EAAA,IAIA,QAAA2uD,GAAA3uD,EAAAtX,GACA,MAAAA,IAAAsX,EAAA,GAAAA,EAAA,IAAA,IAAAA,EAAA,GAMA,QAAA4uD,GAAAlmE,EAAAmmE,GAIA,IAFA,GAAA19D,GAAA,EAEAzI,GAAAmmE,EAAA19D,IACAA,GAAA,CAGA,OAAAA,GAIA,QAAA29D,GAAAC,EAAAC,EAAAtmE,GAEA,GAAAA,GAAAqmE,EAAA3lE,MAAA,IAAA,GACA,MAAA,IAGA,IAAAi4B,GAAAH,EAAA1Q,EAAAC,EAAAtf,EAAAy9D,EAAAlmE,EAAAqmE,EAOA,OALA1tC,GAAA0tC,EAAA59D,EAAA,GACA+vB,EAAA6tC,EAAA59D,GACAqf,EAAAw+C,EAAA79D,EAAA,GACAsf,EAAAu+C,EAAA79D,GAEAqf,EAAAk+C,GAAArtC,EAAAH,GAAAx4B,GAAA8lE,EAAAh+C,EAAAC,GAIA,QAAAw+C,GAAAF,EAAAC,EAAAtmE,GAGA,GAAAA,GAAA,IACA,MAAAqmE,GAAA3lE,MAAA,IAAA,EAGA,IAAAi4B,GAAAH,EAAA1Q,EAAAC,EAAAtf,EAAAy9D,EAAAlmE,EAAAsmE,EAOA,OALA3tC,GAAA0tC,EAAA59D,EAAA,GACA+vB,EAAA6tC,EAAA59D,GACAqf,EAAAw+C,EAAA79D,EAAA,GACAsf,EAAAu+C,EAAA79D,GAEAw9D,GAAAttC,EAAAH,IAAAx4B,EAAA8nB,GAAAg+C,EAAAh+C,EAAAC,IAIA,QAAAy+C,GAAAF,EAAAG,EAAAC,EAAA1mE,GAEA,GAAA,MAAAA,EACA,MAAAA,EAGA,IAAA1B,GAAAC,EAAAkK,EAAAy9D,EAAAlmE,EAAAsmE,EAGA,OAAAI,IAEApoE,EAAAgoE,EAAA79D,EAAA,GACAlK,EAAA+nE,EAAA79D,GAGAzI,EAAA1B,GAAAC,EAAAD,GAAA,EACAC,EAGAD,GAGAmoE,EAAAh+D,EAAA,GAIA69D,EAAA79D,EAAA,GAAA87D,EACAvkE,EAAAsmE,EAAA79D,EAAA,GACAg+D,EAAAh+D,EAAA,IALAzI,EAYA,QAAA2mE,GAAA1qC,EAAAj8B,EAAA+3C,GAEA,GAAA6uB,EAQA,IALA,gBAAA5mE,KACAA,GAAAA,IAIA,mBAAAH,OAAAE,UAAAsQ,SAAAzG,KAAA5J,GACA,KAAA,IAAAgzC,OAAA,8CAaA,IARA4zB,EADA,QAAA3qC,EACA,EACA,QAAAA,EACA,IAEAhgC,WAAAggC,IAIA+oC,EAAA4B,KAAA5B,EAAAhlE,EAAA,IACA,KAAA,IAAAgzC,OAAA,2CAIA+E,GAAAuuB,KAAAvlE,KAAA6lE,GACA7uB,EAAAsuB,KAAAtlE,KAAAf,EAAA,IAKA4mE,EAKA7uB,EAAA0uB,OAAA1lE,KAAAnC,MAAAoB,EAAA,KAAA,EAAAA,EAAA,IAJApB,MAAAoB,EAAA,MACA+3C,EAAA0uB,OAAA,GAAAzmE,EAAA,IAOA,QAAA6mE,GAAA9kE,EAAAC,EAAA+1C,GAGA,MAAA/1C,QAKA+1C,EAAA0uB,OAAA1kE,GAAAgkE,GACAhuB,EAAAsuB,KAAAtkE,GACAg2C,EAAAsuB,KAAAtkE,EAAA,IACAC,GAAA8jE,EACA/tB,EAAAuuB,KAAAvkE,GACAg2C,EAAAuuB,KAAAvkE,EAAA,MATA,EAkBA,QAAA+kE,GAAA3jD,EAAAujD,EAAAvgD,EAAA4gD,GAEA5mE,KAAAmmE,QACAnmE,KAAAkmE,QACAlmE,KAAAsmE,QAAAM,IAAA,GACA5mE,KAAA6mE,YAAA,GAEA7mE,KAAAumE,KAAAA,EACAvmE,KAAAgmB,UAAAA,CAEA,IAAA8V,GAAAgrC,IAGA,KAAAhrC,IAAA9Y,GACAA,EAAA9E,eAAA4d,IACAgrC,EAAAlmE,MAAAoiB,EAAA8Y,GAAAA,GAQA,KAHAgrC,EAAAhkD,KAAA,SAAA3kB,EAAAC,GAAA,MAAAD,GAAA,GAAAC,EAAA,KAGA09B,EAAA,EAAAA,EAAAgrC,EAAA3qE,OAAA2/B,IACA0qC,EAAAM,EAAAhrC,GAAA,GAAAgrC,EAAAhrC,GAAA,GAAA97B,KAQA,KAHAA,KAAA6mE,UAAA7mE,KAAAsmE,OAAA/lE,MAAA,GAGAu7B,EAAA,EAAAA,EAAA97B,KAAA6mE,UAAA1qE,OAAA2/B,IACA4qC,EAAA5qC,EAAA97B,KAAA6mE,UAAA/qC,GAAA97B,MA4EA,QAAA+mE,GAAAC,EAAAhkD,GAEA,IAAA6hD,EAAA7hD,GACA,KAAA,IAAA6vB,OAAA,qCAKAm0B,GAAAJ,WAAA5jD,EAGA,QAAAikD,GAAAD,EAAAhkD,GAGA,GAAA,gBAAAA,IAAAlmB,MAAAg2C,QAAA9vB,GACA,KAAA,IAAA6vB,OAAA,wCAIA,IAAA8wB,SAAA3gD,EAAA7S,KAAAwzD,SAAA3gD,EAAA/S,IACA,KAAA,IAAA4iC,OAAA,iDAGAm0B,GAAAE,SAAA,GAAAP,GAAA3jD,EAAAgkD,EAAAT,KAAAS,EAAAG,IAAAH,EAAAJ,YAGA,QAAAQ,GAAAJ,EAAAhkD,GAMA,GAJAA,EAAAqiD,EAAAriD,IAIAlmB,MAAAg2C,QAAA9vB,KAAAA,EAAA7mB,QAAA6mB,EAAA7mB,OAAA,EACA,KAAA,IAAA02C,OAAA,2CAIAm0B,GAAAK,QAAArkD,EAAA7mB,OAIA6qE,EAAA9jD,MAAAF,EAGA,QAAAskD,GAAAN,EAAAhkD,GAKA,GAFAgkD,EAAAT,KAAAvjD,EAEA,iBAAAA,GACA,KAAA,IAAA6vB,OAAA;;CAIA,QAAA00B,GAAAP,EAAAhkD,GAKA,GAFAgkD,EAAAQ,QAAAxkD,EAEA,iBAAAA,GACA,KAAA,IAAA6vB,OAAA,mDAIA,QAAA40B,GAAAT,EAAAhkD,GAEA,GAAA,UAAAA,GAAA,IAAAgkD,EAAAK,QACAL,EAAAU,QAAA,MACA,IAAA,UAAA1kD,GAAA,IAAAgkD,EAAAK,QACAL,EAAAU,QAAA,MACA,IAAA1kD,KAAA,GAAA,IAAAgkD,EAAAK,QACAL,EAAAU,QAAA,MACA,CAAA,GAAA1kD,KAAA,EAGA,KAAA,IAAA6vB,OAAA,2DAFAm0B,GAAAU,QAAA,GAMA,QAAAC,GAAAX,EAAAhkD,GAIA,OAAAA,GACA,IAAA,aACAgkD,EAAAY,IAAA,CACA,MACA,KAAA,WACAZ,EAAAY,IAAA,CACA,MACA,SACA,KAAA,IAAA/0B,OAAA,iDAIA,QAAAg1B,GAAAb,EAAAhkD,GAEA,IAAA6hD,EAAA7hD,GACA,KAAA,IAAA6vB,OAAA,+CAKA,IAFAm0B,EAAAp7D,OAAAo7D,EAAAE,SAAAY,UAAA9kD,IAEAgkD,EAAAp7D,OACA,KAAA,IAAAinC,OAAA,oEAIA,QAAAk1B,GAAAf,EAAAhkD,GAEA,IAAA6hD,EAAA7hD,GACA,KAAA,IAAA6vB,OAAA,8CAKA,IAFAm0B,EAAA5B,MAAA4B,EAAAE,SAAAY,UAAA9kD,IAEAgkD,EAAA5B,MACA,KAAA,IAAAvyB,OAAA,mEAIA,QAAAm1B,GAAAhB,EAAAhkD,GAKA,OAAAA,GACA,IAAA,MACAgkD,EAAAG,IAAA,CACA,MACA,KAAA,MACAH,EAAAG,IAAA,EACAH,EAAAU,SAAA,EAAA,EAAA,EAAA,GAAAV,EAAAU,QACA,MACA,SACA,KAAA,IAAA70B,OAAA,uDAIA,QAAAo1B,GAAAjB,EAAAhkD,GAGA,GAAA,gBAAAA,GACA,KAAA,IAAA6vB,OAAA,+DAKA,IAAAq1B,GAAAllD,EAAAvmB,QAAA,QAAA,EACAo6C,EAAA7zB,EAAAvmB,QAAA,SAAA,EACA0jC,EAAAnd,EAAAvmB,QAAA,UAAA,EACA8pE,EAAAvjD,EAAAvmB,QAAA,SAAA,CAEAuqE,GAAAmB,QACAD,IAAAA,GAAA3B,EACA1vB,KAAAA,EACA1W,MAAAA,EACAomC,KAAAA,GAIA,QAAA6B,GAAApB,EAAAhkD,GAKA,GAHAgkD,EAAA3pE,OAAA2lB,EAGA,kBAAAA,GAAA+C,IAAA,kBAAA/C,GAAA8C,KACA,OAAA,CAGA,MAAA,IAAA+sB,OAAA,0DAIA,QAAAw1B,GAAAC,GAEA,GAKAC,GALAvB,GACAp7D,OAAA,EACAw5D,MAAA,EACAoC,SAAA,EACAnqE,OAAAmrE,EAIAD,IACAzxD,MAAAhI,GAAA,EAAA8E,EAAAmzD,GACA7jD,OAAApU,GAAA,EAAA8E,EAAAwzD,GACAM,SAAA54D,GAAA,EAAA8E,EAAA6zD,GACAzhD,WAAAlX,GAAA,EAAA8E,EAAAo0D,GACAzB,MAAAz3D,GAAA,EAAA8E,EAAA0zD,GACAE,SAAA14D,GAAA,EAAA8E,EAAA2zD,GACApwD,OAAArI,GAAA,EAAA8E,EAAAqzD,GACAwB,aAAA35D,GAAA,EAAA8E,EAAA+zD,GACA/7D,QAAAkD,GAAA,EAAA8E,EAAAi0D,GACAzC,OAAAt2D,GAAA,EAAA8E,EAAAm0D,GACAW,WAAA55D,GAAA,EAAA8E,EAAAq0D,GACA5qE,QAAAyR,GAAA,EAAA8E,EAAAw0D,GAGA,IAAAO,IACAjB,SAAA,EACA1hD,UAAA,MACA0iD,UAAA,MACAD,YAAA,aAoCA,OAhCA/oE,QAAAiB,KAAAgoE,GAAAt2D,QAAA,SAAA5Q,GACAkiE,SAAA2E,EAAA7mE,KACA6mE,EAAA7mE,GAAAknE,EAAAlnE,MAOA/B,OAAAiB,KAAA4nE,GAAAl2D,QAAA,SAAA5Q,GAEA,GAAA6E,GAAAiiE,EAAA9mE,EAGA,IAAAkiE,SAAA2E,EAAA7mE,GAAA,CAEA,GAAA6E,EAAAwI,EACA,KAAA,IAAA+jC,OAAA,gBAAApxC,EAAA,iBAGA,QAAA,EAGA6E,EAAAsN,EAAAozD,EAAAsB,EAAA7mE,MAIAulE,EAAA4B,KAAAN,EAAAM,KAGA5B,EAAAtgE,MAAAsgE,EAAAY,IAAA,MAAA,OAEAZ,EAKA,QAAA6B,GAAA1qE,EAAAC,EAAA0qE,GAGA,GAAA7iE,GAAA9H,EAAAC,EAAA,GAAAe,EAAAhB,EAAAC,EAAA,EAIA,OAAA0qE,IACA,EAAA7iE,IACA9G,GAAAxC,KAAAC,IAAAqJ,IAEA9G,EAAA,MACA8G,GAAA9G,EAAA,MAIAimE,EAAAn/D,GAAAm/D,EAAAjmE,MAGA8G,EAAA9G,GAIA,QAAA4pE,GAAA5lE,GAIAA,EAAAH,gBAKA,IAGAzE,GAAA4N,EAHAwqC,EAAA,IAAAxzC,EAAAQ,KAAAlH,QAAA,SACA+5C,EAAA,IAAArzC,EAAAQ,KAAAlH,QAAA,SACAusE,EAAA,IAAA7lE,EAAAQ,KAAAlH,QAAA,WACA2F,EAAAe,CAsBA,OAnBA,KAAAA,EAAAQ,KAAAlH,QAAA,eACAusE,GAAA,GAGAryB,IAGAp4C,EAAA4E,EAAA6H,eAAA,GAAAkB,MACAC,EAAAhJ,EAAA6H,eAAA,GAAAoB,QAGAoqC,GAAAwyB,KACAzqE,EAAA4E,EAAAkJ,QAAAf,OAAAq5D,YACAx4D,EAAAhJ,EAAAmJ,QAAAhB,OAAAs5D,aAGAxiE,EAAA6gB,QAAA1kB,EAAA4N,GACA/J,EAAA6mE,OAAAzyB,GAAAwyB,EAEA5mE,EAIA,QAAA8mE,GAAAljD,EAAA8V,GAEA,GAAA+b,GAAA/5C,SAAAyJ,cAAA,OACA4hE,EAAArrE,SAAAyJ,cAAA,OACA6hE,GAAA,SAAA,SAYA,OAVApjD,IACAojD,EAAA9zD,UAGA4vD,EAAAiE,EAAAE,EAAA,IACAnE,EAAAiE,EAAAE,EAAA,GAAAD,EAAAttC,IAEAopC,EAAArtB,EAAAwxB,EAAA,IACAxxB,EAAAtC,YAAA4zB,GAEAtxB,EAIA,QAAAyxB,GAAA5B,EAAAvmE,EAAAkmE,GAMA,OAAAK,GACA,IAAA,GAAAxC,EAAA/jE,EAAAkoE,EAAA,IACAnE,EAAAmC,EAAA,GAAAgC,EAAA,GACA,MACA,KAAA,GAAAnE,EAAAmC,EAAA,GAAAgC,EAAA,GAEA,KAAA,GAAAnE,EAAAmC,EAAA,GAAAgC,EAAA,GAEA,KAAA,GAAAnE,EAAA/jE,EAAAkoE,EAAA,KAMA,QAAAE,GAAAC,EAAAxjD,EAAAohB,GAEA,GAAAtL,GAAAurC,IAGA,KAAAvrC,EAAA,EAAA0tC,EAAA1tC,EAAAA,GAAA,EAGAurC,EAAAzmE,KAAAwmC,EAAAmO,YAAA2zB,EAAAljD,EAAA8V,IAGA,OAAAurC,GAIA,QAAAoC,GAAAzjD,EAAAyiD,EAAAtnE,GAGA+jE,EAAA/jE,EAAAkoE,EAAA,IACAnE,EAAA/jE,EAAAkoE,EAAA,EAAArjD,IACAk/C,EAAA/jE,EAAAkoE,EAAA,EAAAZ,GAEA,IAAAiB,GAAA5rE,SAAAyJ,cAAA,MAGA,OAFA29D,GAAAwE,EAAAL,EAAA,IACAloE,EAAAo0C,YAAAm0B,GACAA,EAIA,QAAAC,GAAAxoE,EAAAmnE,GAYA,QAAAsB,GAAAvR,EAAAh2B,EAAAwnC,GAGA,GAAA,UAAAxR,GAAA,UAAAA,EACA,MAAAyR,GAAA5D,IAGA,IAAA,UAAA7N,EAAA,CAGA,GAAAlqD,GAAA47D,EAAA,KAAA1nC,EAAA,GAAAzgC,EAAA,CAIA,KAHAygC,MAGAl0B,EAAAvM,IAAAmoE,IAAA,KACA1nC,EAAAzhC,KAAAuN,EAGAkqD,GAAA,YAGA,MAAA,cAAAA,EAGAh2B,EAAAv8B,IAAA,SAAAjG,GACA,MAAAiqE,GAAA1D,aAAAyD,EAAAC,EAAAzD,QAAAxmE,GAAAA,KAIA,WAAAw4D,EAGAwR,EAEAxnC,EAAAv8B,IAAA,SAAAjG,GAGA,MAAAiqE,GAAA1D,aAAA0D,EAAAzD,QAAAyD,EAAA7D,WAAApmE,OAMAwiC,EAdA,OAkBA,QAAA2nC,GAAAC,EAAA5R,EAAA7vD,GAEA,GAAA0hE,GAAAJ,EAAA9jD,UACAmsB,KACAg4B,EAAAL,EAAA5D,KAAA,GACAkE,EAAAN,EAAA5D,KAAA4D,EAAA5D,KAAA/pE,OAAA,GACAkuE,GAAA,EACAC,GAAA,EACAC,EAAA,CAkGA,OA7FAT,GAAA9jD,UAAA,EAGAxd,EAAA27D,EAAA37D,EAAAjI,QAAAuiB,KAAA,SAAA3kB,EAAAC,GAAA,MAAAD,GAAAC,KAGAoK,EAAA,KAAA2hE,IACA3hE,EAAAzL,QAAAotE,GACAE,GAAA,GAIA7hE,EAAAA,EAAArM,OAAA,KAAAiuE,IACA5hE,EAAA5H,KAAAwpE,GACAE,GAAA,GAGA9hE,EAAA6J,QAAA,SAAA8Q,EAAA2Y,GAGA,GAAAhlB,GAAAlV,EAAA2mB,EAGAiiD,EAAAC,EAAAC,EAAA/mE,EACAokC,EAAA4iC,EAAAC,EAHAC,EAAA1nD,EACA2nD,EAAAtiE,EAAAszB,EAAA,EAiBA,IAXA,UAAAu8B,IACAvhD,EAAAgzD,EAAAjD,UAAA/qC,IAIAhlB,IACAA,EAAAg0D,EAAAD,GAKAA,KAAA,GAAAlH,SAAAmH,EAKA,IAAAlpE,EAAAipE,EAAAC,GAAAlpE,EAAAA,GAAAkV,EAAA,CAkBA,IAdA0zD,EAAAV,EAAA7D,WAAArkE,GACA6oE,EAAAD,EAAAD,EAEAxiC,EAAA0iC,EAAAR,EACAU,EAAAhuE,KAAA4R,MAAAw5B,GAMA6iC,EAAAH,EAAAE,EAIApiD,EAAA,EAAAoiD,GAAApiD,EAAAA,GAAA,EAMAmiD,EAAAH,EAAAhiD,EAAAqiD,EACAz4B,EAAAu4B,EAAAxuE,QAAA,KAAA,IAAA,EAIAyH,GAAA6E,EAAA/L,QAAAmF,GAAA,GAAA,EAAA,UAAAy2D,EAAA,EAAA,GAGAv8B,GAAAuuC,IACA1mE,EAAA,GAGA/B,IAAAkpE,GAAAR,IAEAn4B,EAAAq4B,EAAAtuE,QAAA,KAAA0F,EAAA+B,IAIA4mE,EAAAC,KAKAV,EAAA9jD,UAAAkkD,EAEA/3B,EAGA,QAAA44B,GAAAhB,EAAAiB,EAAAC,GAQA,QAAAC,GAAAvnE,GACA,OAAA,UAAA,SAAA,QAAAA,GAGA,QAAAwnE,GAAAl0D,EAAA7V,EAAAihC,GACA,MAAA,UAAAjhC,EAAA,IACAA,EAAA,IAAAsF,EAAA,IACAtF,EAAA8pE,EAAA7oC,EAAA,IACA,YAAAimC,EAAA5hE,MAAA,KAAAuQ,EAAA,KAGA,QAAAm0D,GAAAn0D,EAAAorB,GAEAynC,EAAA9jD,YACA/O,EAAA,IAAAA,GAIAorB,EAAA,GAAAA,EAAA,IAAA2oC,EAAAA,EAAA3oC,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAGA2iC,EAAA1vB,WAAA,QAAA61B,EAAAl0D,EAAA,cAAAorB,GAAA,UAGAA,EAAA,KACA2iC,EAAA1vB,WAAA,QAAA61B,EAAAl0D,EAAA,aAAAorB,GAAA,IAAA4oC,EAAAllD,GAAAsc,EAAA,IAAA,UA/BA,GAAA37B,IAAA,aAAA,YAAA4hE,EAAAV,KACA5C,EAAAlnE,SAAAyJ,cAAA,MAuCA,OArCA29D,GAAAF,EAAA,aACAE,EAAAF,EAAA,aAAAt+D,GAgCAhH,OAAAiB,KAAAopE,GAAA13D,QAAA,SAAAlU,GACAitE,EAAAjtE,EAAA4rE,EAAA5rE,MAGA6mE,EAGA,QAAA4D,GAAAyC,GAEA,GAAAhT,GAAAgT,EAAAhT,KACA4R,EAAAoB,EAAApB,SAAA,EACAngE,EAAAuhE,EAAAvhE,SAAA,EACAu4B,EAAAgpC,EAAAhpC,SAAA,EACAwnC,EAAAwB,EAAAxB,UAAA,EACArhE,EAAAohE,EAAAvR,EAAAh2B,EAAAwnC,GACAE,EAAAC,EAAAC,EAAA5R,EAAA7vD,GACAnL,EAAAguE,EAAAhuE,SACA0oB,GAAAppB,KAAA4R,MAGA,OAAA+8D,GAAA/1B,YAAAw1B,EACAhB,EACAjgE,EACAzM,IAMA,QAAAkuE,KACA,MAAAC,GAAA,UAAA,QAAA,UAAAlD,EAAAV,MAIA,QAAA6D,GAAArpE,EAAAspE,GAEA/H,SAAA+H,IACAA,EAAA/uE,KAAAC,IAAA8uE,EAAApD,EAAAnB,MAGAznE,OAAAiB,KAAAgrE,GAAAt5D,QAAA,SAAAu5D,GAEA,GAAAC,GAAAD,EAAAlmE,MAAA,KAAA,EAEAtD,KAAAypE,GACAF,EAAAC,GAAAv5D,QAAA,SAAAhK,GAGAA,EAAAg9D,EAAAyG,KAAAJ,EAAAK,EAAAjvE,MAAA8C,UAAAW,MAAAkJ,KAAAuiE,SAOA,QAAAD,GAAA1pC,GAGA,MAAA,KAAAA,EAAAlmC,OACAkmC,EAAA,GAGAimC,EAAAnB,IACA9kC,EAAA/sB,UAGA+sB,EAKA,QAAA4pC,GAAA9D,EAAAnD,EAAA38D,EAAAP,GAKA,GAAAzG,GAAA,SAAA8B,GAEA,MAAAmoE,GAAAY,aAAA,aACA,EAIAxG,EAAA4F,EAAAjC,EAAA,MACA,GAGAlmE,EAAA4lE,EAAA5lE,GAGAglE,IAAAgE,EAAAjpD,OAAAygD,SAAAxgE,EAAAipE,SAAAjpE,EAAAipE,QAAA,GACA,GAGAjpE,EAAAkpE,UAAAlpE,EAAA8f,OAAAqlD,EAAAV,SAGAv/D,GAAAlF,EAAA2E,MAEA0nC,IAQA,OALA24B,GAAAziE,MAAA,KAAA2M,QAAA,SAAAi6D,GACAtH,EAAAt7D,iBAAA4iE,EAAAjrE,GAAA,GACAmuC,EAAA5uC,MAAA0rE,EAAAjrE,MAGAmuC,EAIA,QAAAyH,GAAA70C,EAAA0F,GAEA,GAAAykE,GAEA3qE,EAFAylE,EAAAv/D,EAAAu/D,SAAAmF,EAAAC,GAAA,EACAC,EAAA,KAAAtqE,EAAAiqE,UAAAvkE,EAAAob,OAAAqoD,IACAG,EAAArE,EAAA,KAAAmF,EAAA,GAAA,EAAA,CAOA,IAJAD,EAAA1D,EAAA6D,EAAA5kE,EAAAykE,UAAAlF,EAAAlrE,OAAA,GAEAswE,EAAAE,EAAAtF,EAAA,GAAAkF,EAAAb,GAAA,IAAArE,EAAAlrE,QAEAkrE,EAAAlrE,OAAA,GAIA,GAFAswE,EAAAE,EAAAtF,EAAA,GAAAkF,EAAAb,EAAA,EAAA,IAAA,IAAAe,EAIA,IAAA7qE,EAAA,EAAAA,EAAAkG,EAAAu/D,QAAAlrE,OAAAyF,IACA6pE,EAAA,QAAA7pE,OAGA6qE,IAEAhB,EAAA,QAAAC,GAKA,QAAAx0C,GAAA90B,EAAA0F,GAGA,GAAAgmC,GAAA09B,EAAAoB,uBAAAvD,EAAA,KACAqC,EAAA5jE,EAAAu/D,QAAA,KAAAmF,EAAA,GAAA,EAAA,CAEA1+B,GAAA3xC,QACAgpE,EAAAr3B,EAAA,GAAAu7B,EAAA,KAIAjnE,EAAA6mE,SACAnrE,SAAAyyC,KAAA7pC,MAAAuiE,OAAA,GACAnrE,SAAAyyC,KAAAnnC,oBAAA,cAAAtL,SAAAyyC,KAAAs8B,cAGA,IAAA1tE,GAAArB,SAAAC,eAGAoB,GAAA2tE,cAAAz6D,QAAA,SAAApM,GACA9G,EAAAiK,oBAAAnD,EAAA,GAAAA,EAAA,MAIAk/D,EAAAmG,EAAAjC,EAAA,KAGAoC,EAAA,MAAAC,GACAD,EAAA,SAAAC,GAIA,QAAAxoD,GAAA9gB,EAAA0F,GAEA,GAAA3I,GAAArB,SAAAC,eAGA,IAAA,IAAA+J,EAAAu/D,QAAAlrE,SACA+oE,EAAAp9D,EAAAu/D,QAAA,GAAAltC,SAAA,GAAAkvC,EAAA,KAGAvhE,EAAAu/D,QAAA,GAAA6E,aAAA,aACA,OAAA,CAKA9pE,GAAA2qE,iBAGA,IAAAC,GAAAf,EAAAE,EAAAl1B,KAAA93C,EAAA83C,GACA/zB,MAAA9gB,EAAAiqE,UACAhF,QAAAv/D,EAAAu/D,QACAkF,WACAU,EAAA,GACAA,EAAAT,EAAArwE,OAAA,MAEA+wE,EAAAjB,EAAAE,EAAAj1C,IAAA/3B,EAAA+3B,GACAmwC,QAAAv/D,EAAAu/D,SAOA,IAJAloE,EAAA2tE,cAAAE,EAAApqE,OAAAsqE,GAIA9qE,EAAA6mE,OAAA,CAGAnrE,SAAAyyC,KAAA7pC,MAAAuiE,OAAA/zB,iBAAA9yC,EAAAjB,QAAA8nE,OAGAuD,EAAArwE,OAAA,GACA+oE,EAAAoG,EAAAjC,EAAA,IAGA,IAAAp9D,GAAA,WACA,OAAA,EAGAnO,UAAAyyC,KAAAs8B,aAAA5gE,EAGAnO,SAAAyyC,KAAA7mC,iBAAA,cAAAuC,GAAA,IAKA,QAAAi8D,GAAA9lE,GAEA,GAAAspE,GAAA3lD,EAAAizB,EAAA52C,EAAAiqE,UAAAc,EAAA,CAyBA,OAtBA/qE,GAAA2qE,kBAGAP,EAAAn6D,QAAA,SAAAlU,GACAgvE,GAAAl2D,EAAA9Y,GAAAmqE,EAAA5hE,SAIAglE,EAAAyB,EAAA,EAAAn0B,GAAA,IAAAwzB,EAAArwE,OAAA,EAAA,EAEA68C,GAAA/hC,EAAAu0D,GAAAlD,EAAA5hE,OAGAqf,EAAA,IAAAizB,EAAAuyB,IAEAjD,EAAAH,OAAA5B,MAGAxB,EAAAuG,EAAAjC,EAAA,IAAA,KAIAmD,EAAAd,GAAAQ,aAAA,aACA,GAKAS,EAAAH,EAAAd,GAAA3lD,GAEA0lD,EAAA,QAAAC,GACAD,EAAA,MAAAC,GACAD,EAAA,SAAAC,QAEApD,EAAAH,OAAA5B,MACArjD,EAAA9gB,GAAAilE,SAAAmF,EAAAW,QAKA,QAAAhF,GAAAO,GAEA,GAAA9mE,GAAAi1C,CAGA,KAAA6xB,EAAAvoC,MAEA,IAAAv+B,EAAA,EAAAA,EAAA4qE,EAAArwE,OAAAyF,GAAA,EAIAqqE,EAAAE,EAAAjpD,MAAAspD,EAAA5qE,GAAAu4B,SAAA,GAAAjX,GACAmkD,SAAAmF,EAAA5qE,KAMA8mE,GAAAR,KAEA+D,EAAAE,EAAAjpD,MAAAsoD,EAAAtD,GACAb,QAAAmF,IAKA9D,EAAA7xB,OAEAA,GAAA20B,EAAAoB,uBAAAvD,EAAA,IAAA,IACAnE,EAAAruB,EAAA,GAAAwyB,EAAA,KAMAX,EAAAvoC,OACA0W,EAAAj2C,KAAA4rE,EAAA31B,EAAA,KAAA21B,EAAA,GAAA,EAAA,GAAAryC,SAAA,IAGA0c,EAAAxkC,QAAA,SAAA2yD,GACAiH,EAAAE,EAAAjpD,MAAA8hD,EAAA9hD,GACAmkD,QAAAmF,OAQA,QAAAG,GAAAxD,EAAApjD,EAAAqnD,GAEA,GAAAC,GAAAlE,IAAAqD,EAAA,GAAA,EAAA,EACAc,EAAAL,EAAA,GAAA3E,EAAA18D,OACA2hE,EAAAN,EAAA,GAAA3E,EAAA18D,OACA4hE,EAAAP,EAAA,GAAA3E,EAAAlD,MACAqI,EAAAR,EAAA,GAAA3E,EAAAlD,KAyBA,OApBAoH,GAAArwE,OAAA,IACA4pB,EAAAsnD,EAAA1wE,KAAAsT,IAAA8V,EAAAunD,GAAA3wE,KAAAwT,IAAA4V,EAAAwnD,IAOAH,KAAA,GAAA9E,EAAAlD,OAAAoH,EAAArwE,OAAA,IACA4pB,EAAAsnD,EAAA1wE,KAAAwT,IAAA4V,EAAAynD,GAAA7wE,KAAAsT,IAAA8V,EAAA0nD,IAIA1nD,EAAA+jD,EAAAzD,QAAAtgD,GAIAA,EAAAq/C,EAAAtpE,WAAAiqB,EAAA7pB,QAAA,KAGA6pB,IAAAknD,EAAAI,IACA,GAIAlE,EAAAziE,MAAA4hE,EAAA5hE,OAAAqf,EAAA,IAGAojD,EAAAuE,kBACAvI,EAAAgE,EAAAE,EAAA,KACAtjD,EAAA,IACAm/C,EAAAiE,EAAAE,EAAA,MAKA4D,EAAAI,GAAAtnD,EAGAimD,EAAAqB,GAAAvD,EAAA1D,aAAArgD,GAEA0lD,EAAA,SAAA4B,IAEA,GAIA,QAAAM,GAAA5/B,EAAA1L,GAEA,GAAAzgC,GAAAyrE,EAAAtnD,CAUA,KAPAuiD,EAAAlD,QACAr3B,GAAA,GAMAnsC,EAAA,EAAAmsC,EAAAnsC,EAAAA,GAAA,EAEAyrE,EAAAzrE,EAAA,EAGAmkB,EAAAsc,EAAAgrC,GAIA,OAAAtnD,GAAAA,KAAA,IAGA,gBAAAA,KACAA,EAAA9pB,OAAA8pB,IAGAA,EAAAuiD,EAAAjrE,OAAAyoB,KAAAC,IAIAA,KAAA,GAAAtnB,MAAAsnB,IAAA4mD,EAAAH,EAAAa,GAAAvD,EAAA7D,WAAAlgD,GAAAnkB,IAAA,EAAA0mE,EAAAnB,QAAA,IACAsE,EAAA,SAAA4B,IAOA,QAAAO,GAAAznC,GAEA,GAAA4H,GAAAnsC,EAAAygC,EAAAgjC,EAAAl/B,EAwBA,KApBAmiC,EAAAnB,KAAAmB,EAAAjB,QAAA,GACAhlC,EAAA/sB,UAKAgzD,EAAAd,SAAA,KAAAyF,EAAA,IACAlI,EAAAuG,EAAAjC,EAAA,IAAA,KAIAt7B,EAAAy+B,EAAArwE,OAAA,EAAA,EAAA,EAEA,IAAAkmC,EAAAlmC,SACA4xC,EAAA,GAGA4/B,EAAA5/B,EAAA1L,GAGAzgC,EAAA,EAAAA,EAAA4qE,EAAArwE,OAAAyF,IACA6pE,EAAA,MAAA7pE,GAKA,QAAAkqE,KAEA,GAAAlqE,GAAAisE,IAGA,KAAAjsE,EAAA,EAAAA,EAAA0mE,EAAAjB,QAAAzlE,GAAA,EACAisE,EAAAjsE,GAAA0mE,EAAAjrE,OAAA0oB,GAAAimD,EAAApqE,GAGA,OAAAmqE,GAAA8B,GAIA,QAAAC,KACAzE,EAAAh3D,QAAA,SAAA07D,GACAA,GACA5I,EAAAmG,EAAAyC,KAEAzC,EAAAh2B,UAAA,SACAg2B,GAAApH,WAIA,QAAA8J,KAIA,GAAAH,GAAAZ,EAAAnnE,IAAA,SAAAkzC,EAAAld,GAEA,GAAAhlB,GAAAgzD,EAAAmE,kBAAAj1B,GAIAk1B,EAAA5I,EAAArpE,OAAA6a,EAAA,KAGAjX,EAAAmsE,EAAAlwC,GAIAqyC,EAAA,MAAAn1B,EAAA,KAAAliC,EAAA,GAIAs3D,EAAAhoC,QAAAvmC,EAAAiX,EAAA,IAAA5a,QAAAgyE,IAIAG,EAAA,IAAAr1B,EAAA,KAAAo1B,GAAAt3D,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAA,CAEA,QAAAu3D,EAAAF,IAIA,OAAApC,GAAA8B,GAIA,QAAAS,GAAAC,EAAAlmE,GACAsjE,EAAA4C,GAAA5C,EAAA4C,OACA5C,EAAA4C,GAAA3tE,KAAAyH,GAGA,WAAAkmE,EAAA7oE,MAAA,KAAA,IACA8mE,EAAAn6D,QAAA,SAAAlU,EAAA29B,GACA2vC,EAAA,SAAA3vC,KAMA,QAAA0yC,GAAAD,GAEA,GAAAnsE,GAAAmsE,EAAA7oE,MAAA,KAAA,GACA0B,EAAAmnE,EAAAl5D,UAAAjT,EAAAjG,OAEAuD,QAAAiB,KAAAgrE,GAAAt5D,QAAA,SAAAojC,GAEA,GAAAg5B,GAAAh5B,EAAA/vC,MAAA,KAAA,GACAgpE,EAAAj5B,EAAApgC,UAAAo5D,EAAAtyE,OAEAiG,IAAAA,IAAAqsE,GAAArnE,GAAAA,IAAAsnE,SACA/C,GAAAl2B,KA/tBA,GAEA+1B,GACAgB,EAHAlB,EAAAnqE,EACA8rE,GAAA,GAAA,IAGAnD,EAAAxB,EAAApB,SACA8E,KACAL,IAguBA,IAAAL,EAAApH,WACA,KAAA,IAAArxB,OAAA,kCAmBA,OAbA24B,GAAA/B,EAAAnB,EAAAnB,IAAAmB,EAAAV,IAAA0D,GACAkB,EAAAjD,EAAAjB,EAAAjB,QAAAiB,EAAAnB,IAAAqE,GAGAlC,EAAAhB,EAAAZ,QAAA4D,EAAAkB,GAGArE,EAAAG,EAAAH,QAEAG,EAAAM,MACAA,EAAAN,EAAAM,OAIAkF,QAAAA,EACA/lC,MAAAimC,EACAxrE,GAAA8rE,EACA1jE,IAAA4jE,EACA7rE,IAAAmpE,EACAhpE,IAAA8qE,GAOA,QAAAe,GAAAxtE,EAAAytE,GAEA,IAAAztE,EAAA0tE,SACA,KAAA,IAAAh8B,OAAA,+CAIA,IAAAy1B,GAAAD,EAAAuG,EAAAztE,GACA2tE,EAAAnF,EAAAxoE,EAAAmnE,EAGAwG,GAAAhsE,IAAAwlE,EAAAplD,OAEA/hB,EAAA+iE,WAAA4K,EAl9CA,GAIA3C,GAAA7gE,OAAAmrC,UAAAs4B,gBACA7rD,MAAA,cACA+zB,KAAA,cACA/f,IAAA,aACA5rB,OAAAmrC,UAAAu4B,kBACA9rD,MAAA,gBACA+zB,KAAA,gBACA/f,IAAA,gBAEAhU,MAAA,uBACA+zB,KAAA,sBACA/f,IAAA,oBAIAmyC,GACA,cACA,YACA,cACA,cACA,kBACA,gBACA,kBACA,eACA,WACA,WACA,gBACA,GACA,kBACA,GACA,iBACA,cACA,GACA,gBAwNA1C,GAAA/mE,UAAAkoE,UAAA,SAAAjoE,GACA,MAAA,KAAAG,KAAAmmE,KAAAhqE,OAAAypE,EAAA5lE,KAAAkmE,KAAArmE,IAAA,GAGA8mE,EAAA/mE,UAAAqmE,WAAA,SAAApmE,GASA,MAPAA,GAAAomE,EAAAjmE,KAAAkmE,KAAAlmE,KAAAmmE,KAAAtmE,GAGAG,KAAAgmB,YACAnmB,EAAA,IAAAA,GAGAA,GAGA8mE,EAAA/mE,UAAAwmE,aAAA,SAAAvmE,GAOA,MAJAG,MAAAgmB,YACAnmB,EAAA,IAAAA,GAGAilE,EAAAsB,EAAApmE,KAAAkmE,KAAAlmE,KAAAmmE,KAAAtmE,KAGA8mE,EAAA/mE,UAAAymE,QAAA,SAAAxmE,GAcA,MAVAG,MAAAgmB,YACAnmB,EAAA,IAAAA,GAGAA,EAAAwmE,EAAArmE,KAAAmmE,KAAAnmE,KAAAsmE,OAAAtmE,KAAAumE,KAAA1mE,GAEAG,KAAAgmB,YACAnmB,EAAA,IAAAA,GAGAA,GAGA8mE,EAAA/mE,UAAAquE,kBAAA,SAAApuE,GAGA,GAAAyI,GAAAy9D,EAAAlmE,EAAAG,KAAAmmE,MAAAlvD,EAAA,MAAApX,EAAA,EAAA,CACA,QAAAG,KAAA6mE,UAAAv+D,EAAA,GAAAtI,KAAAkmE,KAAA59D,EAAA2O,GAAAjX,KAAA6mE,UAAAv+D,EAAA2O,KAIA0vD,EAAA/mE,UAAAqvE,QAAA,SAAApvE,GACA,MAAAG,MAAAqmE,QAAArmE,KAAAimE,WAAApmE,IAgBA,IAAA2oE,IAAAziD,GAAA,SAAAlmB,GACA,MAAAA,GAAA3D,QAAA,IACA4pB,KAAAsgB,OAmpCA,QACAlmC,OAAAyuE,KCplDA,WA4KA,QAAAO,GAAA/H,GAGA,QAAAgI,GAAAC,EAAAC,EAAAC,EAAA3uE,EAAAm7B,EAAA3/B,GACA,KAAA2/B,GAAA,GAAA3/B,EAAA2/B,EAAAA,GAAAqrC,EAAA,CACA,GAAAoI,GAAA5uE,EAAAA,EAAAm7B,GAAAA,CACAwzC,GAAAD,EAAAC,EAAAF,EAAAG,GAAAA,EAAAH,GAEA,MAAAE,GAGA,MAAA,UAAAF,EAAAC,EAAAC,EAAA5iD,GACA2iD,EAAAG,EAAAH,EAAA3iD,EAAA,EACA,IAAA/rB,IAAA8uE,EAAAL,IAAAnvE,EAAAU,KAAAyuE,GACAjzE,GAAAwE,GAAAyuE,GAAAjzE,OACA2/B,EAAAqrC,EAAA,EAAA,EAAAhrE,EAAA,CAMA,OAJA4C,WAAA5C,OAAA,IACAmzE,EAAAF,EAAAzuE,EAAAA,EAAAm7B,GAAAA,GACAA,GAAAqrC,GAEAgI,EAAAC,EAAAC,EAAAC,EAAA3uE,EAAAm7B,EAAA3/B,IA+ZA,QAAAuzE,GAAAvI,GACA,MAAA,UAAA9jD,EAAAssD,EAAAjjD,GACAijD,EAAAlmD,EAAAkmD,EAAAjjD,EAGA,KAFA,GAAAvwB,GAAAyzE,EAAAvsD,GACAyY,EAAAqrC,EAAA,EAAA,EAAAhrE,EAAA,EACA2/B,GAAA,GAAA3/B,EAAA2/B,EAAAA,GAAAqrC,EACA,GAAAwI,EAAAtsD,EAAAyY,GAAAA,EAAAzY,GAAA,MAAAyY,EAEA,OAAA,IAsBA,QAAA+zC,GAAA1I,EAAA2I,EAAAC,GACA,MAAA,UAAA1sD,EAAA2sD,EAAAC,GACA,GAAAruE,GAAA,EAAAzF,EAAAyzE,EAAAvsD,EACA,IAAA,gBAAA4sD,GACA9I,EAAA,EACAvlE,EAAAquE,GAAA,EAAAA,EAAAtzE,KAAAsT,IAAAggE,EAAA9zE,EAAAyF,GAEAzF,EAAA8zE,GAAA,EAAAtzE,KAAAwT,IAAA8/D,EAAA,EAAA9zE,GAAA8zE,EAAA9zE,EAAA,MAEA,IAAA4zE,GAAAE,GAAA9zE,EAEA,MADA8zE,GAAAF,EAAA1sD,EAAA2sD,GACA3sD,EAAA4sD,KAAAD,EAAAC,EAAA,EAEA,IAAAD,IAAAA,EAEA,MADAC,GAAAH,EAAAvvE,EAAAkJ,KAAA4Z,EAAAzhB,EAAAzF,GAAA8D,EAAAxB,OACAwxE,GAAA,EAAAA,EAAAruE,EAAA,EAEA,KAAAquE,EAAA9I,EAAA,EAAAvlE,EAAAzF,EAAA,EAAA8zE,GAAA,GAAA9zE,EAAA8zE,EAAAA,GAAA9I,EACA,GAAA9jD,EAAA4sD,KAAAD,EAAA,MAAAC,EAEA,OAAA,IAqPA,QAAAC,GAAAd,EAAAzuE,GACA,GAAAwvE,GAAAC,EAAAj0E,OACAk0E,EAAAjB,EAAAiB,YACAC,EAAArwE,EAAAswE,WAAAF,IAAAA,EAAAzwE,WAAA4wE,EAGAC,EAAA,aAGA,KAFAxwE,EAAAioC,IAAAknC,EAAAqB,KAAAxwE,EAAAg1C,SAAAt0C,EAAA8vE,IAAA9vE,EAAAC,KAAA6vE,GAEAN,KACAM,EAAAL,EAAAD,GACAM,IAAArB,IAAAA,EAAAqB,KAAAH,EAAAG,KAAAxwE,EAAAg1C,SAAAt0C,EAAA8vE,IACA9vE,EAAAC,KAAA6vE,GA74BA,GAAAp2C,GAAAr6B,KAGA0wE,EAAAr2C,EAAAp6B,EAGA0wE,EAAA7zE,MAAA8C,UAAA4wE,EAAA9wE,OAAAE,UAAAgxE,EAAA9qB,SAAAlmD,UAIAgB,EAAA+vE,EAAA/vE,KACAL,EAAAowE,EAAApwE,MACA2P,EAAAsgE,EAAAtgE,SACAgO,EAAAsyD,EAAAtyD,eAKA2yD,EAAA/zE,MAAAg2C,QACAg+B,EAAApxE,OAAAiB,KACAowE,EAAAH,EAAAn7B,KACAu7B,EAAAtxE,OAAAQ,OAGA+wE,EAAA,aAGAhxE,EAAA,SAAAmvE,GACA,MAAAA,aAAAnvE,GAAAmvE,EACApvE,eAAAC,QACAD,KAAAkxE,SAAA9B,GADA,GAAAnvE,GAAAmvE,GAOA,oBAAA5M,UACA,mBAAAD,SAAAA,OAAAC,UACAA,QAAAD,OAAAC,QAAAviE,GAEAuiE,QAAAviE,EAAAA,GAEAo6B,EAAAp6B,EAAAA,EAIAA,EAAAkxE,QAAA,OAKA,IAAA3B,GAAA,SAAA4B,EAAA1kD,EAAA2kD,GACA,GAAA,SAAA3kD,EAAA,MAAA0kD,EACA,QAAA,MAAAC,EAAA,EAAAA,GACA,IAAA,GAAA,MAAA,UAAAxxE,GACA,MAAAuxE,GAAA3nE,KAAAijB,EAAA7sB,GAEA,KAAA,GAAA,MAAA,UAAAA,EAAAyjB,GACA,MAAA8tD,GAAA3nE,KAAAijB,EAAA7sB,EAAAyjB,GAEA,KAAA,GAAA,MAAA,UAAAzjB,EAAAi8B,EAAAw1C,GACA,MAAAF,GAAA3nE,KAAAijB,EAAA7sB,EAAAi8B,EAAAw1C,GAEA,KAAA,GAAA,MAAA,UAAAC,EAAA1xE,EAAAi8B,EAAAw1C,GACA,MAAAF,GAAA3nE,KAAAijB,EAAA6kD,EAAA1xE,EAAAi8B,EAAAw1C,IAGA,MAAA,YACA,MAAAF,GAAA9vE,MAAAorB,EAAA3tB,aAOA0qB,EAAA,SAAA5pB,EAAA6sB,EAAA2kD,GACA,MAAA,OAAAxxE,EAAAI,EAAA+oC,SACA/oC,EAAAswE,WAAA1wE,GAAA2vE,EAAA3vE,EAAA6sB,EAAA2kD,GACApxE,EAAAuxE,SAAA3xE,GAAAI,EAAAwxE,QAAA5xE,GACAI,EAAA6zC,SAAAj0C,GAEAI,GAAAovE,SAAA,SAAAxvE,EAAA6sB,GACA,MAAAjD,GAAA5pB,EAAA6sB,EAAA3Y,EAAAA,GAIA,IAAA29D,GAAA,SAAAC,EAAAC,GACA,MAAA,UAAAxC,GACA,GAAAjzE,GAAA4C,UAAA5C,MACA,IAAA,EAAAA,GAAA,MAAAizE,EAAA,MAAAA,EACA,KAAA,GAAAtzC,GAAA,EAAA3/B,EAAA2/B,EAAAA,IAIA,IAAA,GAHA16B,GAAArC,UAAA+8B,GACAn7B,EAAAgxE,EAAAvwE,GACAiB,EAAA1B,EAAAxE,OACAyF,EAAA,EAAAS,EAAAT,EAAAA,IAAA,CACA,GAAAnC,GAAAkB,EAAAiB,EACAgwE,IAAA,SAAAxC,EAAA3vE,KAAA2vE,EAAA3vE,GAAA2B,EAAA3B,IAGA,MAAA2vE,KAKAyC,EAAA,SAAAjyE,GACA,IAAAK,EAAAuxE,SAAA5xE,GAAA,QACA,IAAAoxE,EAAA,MAAAA,GAAApxE,EACAqxE,GAAArxE,UAAAA,CACA,IAAAuR,GAAA,GAAA8/D,EAEA,OADAA,GAAArxE,UAAA,KACAuR,GAGA2iC,EAAA,SAAAr0C,GACA,MAAA,UAAA2vE,GACA,MAAA,OAAAA,EAAA,OAAAA,EAAA3vE,KAQAqyE,EAAAn1E,KAAAkT,IAAA,EAAA,IAAA,EACA+/D,EAAA97B,EAAA,UACA27B,EAAA,SAAA6B,GACA,GAAAn1E,GAAAyzE,EAAA0B,EACA,OAAA,gBAAAn1E,IAAAA,GAAA,GAAA21E,GAAA31E,EASA8D,GAAA80C,KAAA90C,EAAAoS,QAAA,SAAA+8D,EAAAC,EAAA3iD,GACA2iD,EAAAG,EAAAH,EAAA3iD,EACA,IAAA9qB,GAAAzF,CACA,IAAAszE,EAAAL,GACA,IAAAxtE,EAAA,EAAAzF,EAAAizE,EAAAjzE,OAAAA,EAAAyF,EAAAA,IACAytE,EAAAD,EAAAxtE,GAAAA,EAAAwtE,OAEA,CACA,GAAAzuE,GAAAV,EAAAU,KAAAyuE,EACA,KAAAxtE,EAAA,EAAAzF,EAAAwE,EAAAxE,OAAAA,EAAAyF,EAAAA,IACAytE,EAAAD,EAAAzuE,EAAAiB,IAAAjB,EAAAiB,GAAAwtE,GAGA,MAAAA,IAIAnvE,EAAA6F,IAAA7F,EAAA8xE,QAAA,SAAA3C,EAAAC,EAAA3iD,GACA2iD,EAAA5lD,EAAA4lD,EAAA3iD,EAIA,KAAA,GAHA/rB,IAAA8uE,EAAAL,IAAAnvE,EAAAU,KAAAyuE,GACAjzE,GAAAwE,GAAAyuE,GAAAjzE,OACA61E,EAAAl1E,MAAAX,GACA2/B,EAAA,EAAA3/B,EAAA2/B,EAAAA,IAAA,CACA,GAAAyzC,GAAA5uE,EAAAA,EAAAm7B,GAAAA,CACAk2C,GAAAl2C,GAAAuzC,EAAAD,EAAAG,GAAAA,EAAAH,GAEA,MAAA4C,IA+BA/xE,EAAAiiC,OAAAjiC,EAAAgyE,MAAAhyE,EAAAiyE,OAAAhD,EAAA,GAGAjvE,EAAAkyE,YAAAlyE,EAAAmyE,MAAAlD,EAAA,IAGAjvE,EAAAu6B,KAAAv6B,EAAAoyE,OAAA,SAAAjD,EAAAO,EAAAjjD,GACA,GAAAjtB,EAMA,OAJAA,GADAgwE,EAAAL,GACAnvE,EAAAqyE,UAAAlD,EAAAO,EAAAjjD,GAEAzsB,EAAAsyE,QAAAnD,EAAAO,EAAAjjD,GAEA,SAAAjtB,GAAA,KAAAA,EAAA2vE,EAAA3vE,GAAA,QAKAQ,EAAA6J,OAAA7J,EAAAwK,OAAA,SAAA2kE,EAAAO,EAAAjjD,GACA,GAAAslD,KAKA,OAJArC,GAAAlmD,EAAAkmD,EAAAjjD,GACAzsB,EAAA80C,KAAAq6B,EAAA,SAAAvvE,EAAAi8B,EAAA6U,GACAg/B,EAAA9vE,EAAAi8B,EAAA6U,IAAAqhC,EAAApxE,KAAAf,KAEAmyE,GAIA/xE,EAAAuyE,OAAA,SAAApD,EAAAO,EAAAjjD,GACA,MAAAzsB,GAAA6J,OAAAslE,EAAAnvE,EAAAwyE,OAAAhpD,EAAAkmD,IAAAjjD,IAKAzsB,EAAAyyE,MAAAzyE,EAAA0yE,IAAA,SAAAvD,EAAAO,EAAAjjD,GACAijD,EAAAlmD,EAAAkmD,EAAAjjD,EAGA,KAAA,GAFA/rB,IAAA8uE,EAAAL,IAAAnvE,EAAAU,KAAAyuE,GACAjzE,GAAAwE,GAAAyuE,GAAAjzE,OACA2/B,EAAA,EAAA3/B,EAAA2/B,EAAAA,IAAA,CACA,GAAAyzC,GAAA5uE,EAAAA,EAAAm7B,GAAAA,CACA,KAAA6zC,EAAAP,EAAAG,GAAAA,EAAAH,GAAA,OAAA,EAEA,OAAA,GAKAnvE,EAAA2yE,KAAA3yE,EAAA4yE,IAAA,SAAAzD,EAAAO,EAAAjjD,GACAijD,EAAAlmD,EAAAkmD,EAAAjjD,EAGA,KAAA,GAFA/rB,IAAA8uE,EAAAL,IAAAnvE,EAAAU,KAAAyuE,GACAjzE,GAAAwE,GAAAyuE,GAAAjzE,OACA2/B,EAAA,EAAA3/B,EAAA2/B,EAAAA,IAAA,CACA,GAAAyzC,GAAA5uE,EAAAA,EAAAm7B,GAAAA,CACA,IAAA6zC,EAAAP,EAAAG,GAAAA,EAAAH,GAAA,OAAA,EAEA,OAAA,GAKAnvE,EAAAg1C,SAAAh1C,EAAA6yE,SAAA7yE,EAAA8yE,QAAA,SAAA3D,EAAAY,EAAAgD,EAAAC,GAGA,MAFAxD,GAAAL,KAAAA,EAAAnvE,EAAAoiC,OAAA+sC,KACA,gBAAA4D,IAAAC,KAAAD,EAAA,GACA/yE,EAAAxD,QAAA2yE,EAAAY,EAAAgD,IAAA,GAIA/yE,EAAAizE,OAAA,SAAA9D,EAAA/tE,GACA,GAAA+0C,GAAA71C,EAAAkJ,KAAA1K,UAAA,GACAo0E,EAAAlzE,EAAAswE,WAAAlvE,EACA,OAAApB,GAAA6F,IAAAspE,EAAA,SAAAvvE,GACA,GAAAuxE,GAAA+B,EAAA9xE,EAAAxB,EAAAwB,EACA,OAAA,OAAA+vE,EAAAA,EAAAA,EAAA9vE,MAAAzB,EAAAu2C,MAKAn2C,EAAAmzE,MAAA,SAAAhE,EAAA3vE,GACA,MAAAQ,GAAA6F,IAAAspE,EAAAnvE,EAAA6zC,SAAAr0C,KAKAQ,EAAAozE,MAAA,SAAAjE,EAAAkE,GACA,MAAArzE,GAAA6J,OAAAslE,EAAAnvE,EAAAwxE,QAAA6B,KAKArzE,EAAAszE,UAAA,SAAAnE,EAAAkE,GACA,MAAArzE,GAAAu6B,KAAA40C,EAAAnvE,EAAAwxE,QAAA6B,KAIArzE,EAAAgQ,IAAA,SAAAm/D,EAAAC,EAAA3iD,GACA,GACA7sB,GAAA2zE,EADAriE,IAAA4C,EAAAA,GAAA0/D,IAAA1/D,EAAAA,EAEA,IAAA,MAAAs7D,GAAA,MAAAD,EAAA,CACAA,EAAAK,EAAAL,GAAAA,EAAAnvE,EAAAoiC,OAAA+sC,EACA,KAAA,GAAAxtE,GAAA,EAAAzF,EAAAizE,EAAAjzE,OAAAA,EAAAyF,EAAAA,IACA/B,EAAAuvE,EAAAxtE,GACA/B,EAAAsR,IACAA,EAAAtR,OAIAwvE,GAAA5lD,EAAA4lD,EAAA3iD,GACAzsB,EAAA80C,KAAAq6B,EAAA,SAAAvvE,EAAAi8B,EAAA6U,GACA6iC,EAAAnE,EAAAxvE,EAAAi8B,EAAA6U,IACA6iC,EAAAC,GAAAD,MAAAz/D,EAAAA,IAAA5C,MAAA4C,EAAAA,MACA5C,EAAAtR,EACA4zE,EAAAD,IAIA,OAAAriE,IAIAlR,EAAAkQ,IAAA,SAAAi/D,EAAAC,EAAA3iD,GACA,GACA7sB,GAAA2zE,EADAriE,EAAA4C,EAAAA,EAAA0/D,EAAA1/D,EAAAA,CAEA,IAAA,MAAAs7D,GAAA,MAAAD,EAAA,CACAA,EAAAK,EAAAL,GAAAA,EAAAnvE,EAAAoiC,OAAA+sC,EACA,KAAA,GAAAxtE,GAAA,EAAAzF,EAAAizE,EAAAjzE,OAAAA,EAAAyF,EAAAA,IACA/B,EAAAuvE,EAAAxtE,GACAuP,EAAAtR,IACAsR,EAAAtR,OAIAwvE,GAAA5lD,EAAA4lD,EAAA3iD,GACAzsB,EAAA80C,KAAAq6B,EAAA,SAAAvvE,EAAAi8B,EAAA6U,GACA6iC,EAAAnE,EAAAxvE,EAAAi8B,EAAA6U,IACA8iC,EAAAD,GAAAA,IAAAz/D,EAAAA,GAAA5C,IAAA4C,EAAAA,KACA5C,EAAAtR,EACA4zE,EAAAD,IAIA,OAAAriE,IAKAlR,EAAAgyC,QAAA,SAAAm9B,GAIA,IAAA,GAAAsE,GAHA5wE,EAAA2sE,EAAAL,GAAAA,EAAAnvE,EAAAoiC,OAAA+sC,GACAjzE,EAAA2G,EAAA3G,OACAw3E,EAAA72E,MAAAX,GACA2/B,EAAA,EAAA3/B,EAAA2/B,EAAAA,IACA43C,EAAAzzE,EAAA6gC,OAAA,EAAAhF,GACA43C,IAAA53C,IAAA63C,EAAA73C,GAAA63C,EAAAD,IACAC,EAAAD,GAAA5wE,EAAAg5B,EAEA,OAAA63C,IAMA1zE,EAAA2zE,OAAA,SAAAxE,EAAAvtE,EAAAoxE,GACA,MAAA,OAAApxE,GAAAoxE,GACAxD,EAAAL,KAAAA,EAAAnvE,EAAAoiC,OAAA+sC,IACAA,EAAAnvE,EAAA6gC,OAAAsuC,EAAAjzE,OAAA,KAEA8D,EAAAgyC,QAAAm9B,GAAA7uE,MAAA,EAAA5D,KAAAsT,IAAA,EAAApO,KAIA5B,EAAA4zE,OAAA,SAAAzE,EAAAC,EAAA3iD,GAEA,MADA2iD,GAAA5lD,EAAA4lD,EAAA3iD,GACAzsB,EAAAmzE,MAAAnzE,EAAA6F,IAAAspE,EAAA,SAAAvvE,EAAAi8B,EAAA6U,GACA,OACA9wC,MAAAA,EACAi8B,MAAAA,EACAg4C,SAAAzE,EAAAxvE,EAAAi8B,EAAA6U,MAEA7tB,KAAA,SAAAlkB,EAAAK,GACA,GAAAd,GAAAS,EAAAk1E,SACA11E,EAAAa,EAAA60E,QACA,IAAA31E,IAAAC,EAAA,CACA,GAAAD,EAAAC,GAAA,SAAAD,EAAA,MAAA,EACA,IAAAC,EAAAD,GAAA,SAAAC,EAAA,MAAA,GAEA,MAAAQ,GAAAk9B,MAAA78B,EAAA68B,QACA,SAIA,IAAAtzB,GAAA,SAAAmrC,GACA,MAAA,UAAAy7B,EAAAC,EAAA3iD,GACA,GAAAvb,KAMA,OALAk+D,GAAA5lD,EAAA4lD,EAAA3iD,GACAzsB,EAAA80C,KAAAq6B,EAAA,SAAAvvE,EAAAi8B,GACA,GAAAr8B,GAAA4vE,EAAAxvE,EAAAi8B,EAAAszC,EACAz7B,GAAAxiC,EAAAtR,EAAAJ,KAEA0R,GAMAlR,GAAA8zE,QAAAvrE,EAAA,SAAA2I,EAAAtR,EAAAJ,GACAQ,EAAAioC,IAAA/2B,EAAA1R,GAAA0R,EAAA1R,GAAAmB,KAAAf,GAAAsR,EAAA1R,IAAAI,KAKAI,EAAA+zE,QAAAxrE,EAAA,SAAA2I,EAAAtR,EAAAJ,GACA0R,EAAA1R,GAAAI,IAMAI,EAAAg0E,QAAAzrE,EAAA,SAAA2I,EAAAtR,EAAAJ,GACAQ,EAAAioC,IAAA/2B,EAAA1R,GAAA0R,EAAA1R,KAAA0R,EAAA1R,GAAA,IAIAQ,EAAAi0E,QAAA,SAAA9E,GACA,MAAAA,GACAnvE,EAAA6yC,QAAAs8B,GAAA7uE,EAAAkJ,KAAA2lE,GACAK,EAAAL,GAAAnvE,EAAA6F,IAAAspE,EAAAnvE,EAAA+oC,UACA/oC,EAAAoiC,OAAA+sC,OAIAnvE,EAAAa,KAAA,SAAAsuE,GACA,MAAA,OAAAA,EAAA,EACAK,EAAAL,GAAAA,EAAAjzE,OAAA8D,EAAAU,KAAAyuE,GAAAjzE,QAKA8D,EAAA40D,UAAA,SAAAua,EAAAO,EAAAjjD,GACAijD,EAAAlmD,EAAAkmD,EAAAjjD,EACA,IAAAynD,MAAAC,IAIA,OAHAn0E,GAAA80C,KAAAq6B,EAAA,SAAAvvE,EAAAJ,EAAA2vE,IACAO,EAAA9vE,EAAAJ,EAAA2vE,GAAA+E,EAAAC,GAAAxzE,KAAAf,MAEAs0E,EAAAC,IASAn0E,EAAA6pB,MAAA7pB,EAAAo0E,KAAAp0E,EAAAq0E,KAAA,SAAAjxD,EAAAxhB,EAAAoxE,GACA,MAAA,OAAA5vD,EAAA,OACA,MAAAxhB,GAAAoxE,EAAA5vD,EAAA,GACApjB,EAAAs0E,QAAAlxD,EAAAA,EAAAlnB,OAAA0F,IAMA5B,EAAAs0E,QAAA,SAAAlxD,EAAAxhB,EAAAoxE,GACA,MAAA1yE,GAAAkJ,KAAA4Z,EAAA,EAAA1mB,KAAAsT,IAAA,EAAAoT,EAAAlnB,QAAA,MAAA0F,GAAAoxE,EAAA,EAAApxE,MAKA5B,EAAAu0E,KAAA,SAAAnxD,EAAAxhB,EAAAoxE,GACA,MAAA,OAAA5vD,EAAA,OACA,MAAAxhB,GAAAoxE,EAAA5vD,EAAAA,EAAAlnB,OAAA,GACA8D,EAAAw0E,KAAApxD,EAAA1mB,KAAAsT,IAAA,EAAAoT,EAAAlnB,OAAA0F,KAMA5B,EAAAw0E,KAAAx0E,EAAAy0E,KAAAz0E,EAAA00E,KAAA,SAAAtxD,EAAAxhB,EAAAoxE,GACA,MAAA1yE,GAAAkJ,KAAA4Z,EAAA,MAAAxhB,GAAAoxE,EAAA,EAAApxE,IAIA5B,EAAA20E,QAAA,SAAAvxD,GACA,MAAApjB,GAAA6J,OAAAuZ,EAAApjB,EAAA+oC,UAIA,IAAA6rC,GAAA,SAAA1uC,EAAA2uC,EAAAC,EAAAC,GAEA,IAAA,GADAplD,MAAAqgD,EAAA,EACAruE,EAAAozE,GAAA,EAAA74E,EAAAyzE,EAAAzpC,GAAAhqC,EAAAyF,EAAAA,IAAA,CACA,GAAA/B,GAAAsmC,EAAAvkC,EACA,IAAA6tE,EAAA5vE,KAAAI,EAAA6yC,QAAAjzC,IAAAI,EAAAg1E,YAAAp1E,IAAA,CAEAi1E,IAAAj1E,EAAAg1E,EAAAh1E,EAAAi1E,EAAAC,GACA,IAAAzsE,GAAA,EAAA4sE,EAAAr1E,EAAA1D,MAEA,KADAyzB,EAAAzzB,QAAA+4E,EACAA,EAAA5sE,GACAsnB,EAAAqgD,KAAApwE,EAAAyI,SAEAysE,KACAnlD,EAAAqgD,KAAApwE,GAGA,MAAA+vB,GAIA3vB,GAAA40E,QAAA,SAAAxxD,EAAAyxD,GACA,MAAAD,GAAAxxD,EAAAyxD,GAAA,IAIA70E,EAAAk1E,QAAA,SAAA9xD,GACA,MAAApjB,GAAAm1E,WAAA/xD,EAAA9iB,EAAAkJ,KAAA1K,UAAA,KAMAkB,EAAAo1E,KAAAp1E,EAAAkkE,OAAA,SAAA9gD,EAAAiyD,EAAAjG,EAAA3iD,GACAzsB,EAAAs1E,UAAAD,KACA5oD,EAAA2iD,EACAA,EAAAiG,EACAA,GAAA,GAEA,MAAAjG,IAAAA,EAAA5lD,EAAA4lD,EAAA3iD,GAGA,KAAA,GAFAvb,MACAqkE,KACA5zE,EAAA,EAAAzF,EAAAyzE,EAAAvsD,GAAAlnB,EAAAyF,EAAAA,IAAA,CACA,GAAA/B,GAAAwjB,EAAAzhB,GACA4xE,EAAAnE,EAAAA,EAAAxvE,EAAA+B,EAAAyhB,GAAAxjB,CACAy1E,IACA1zE,GAAA4zE,IAAAhC,GAAAriE,EAAAvQ,KAAAf,GACA21E,EAAAhC,GACAnE,EACApvE,EAAAg1C,SAAAugC,EAAAhC,KACAgC,EAAA50E,KAAA4yE,GACAriE,EAAAvQ,KAAAf,IAEAI,EAAAg1C,SAAA9jC,EAAAtR,IACAsR,EAAAvQ,KAAAf,GAGA,MAAAsR,IAKAlR,EAAAw1E,MAAA,WACA,MAAAx1E,GAAAo1E,KAAAR,EAAA91E,WAAA,GAAA,KAKAkB,EAAA0mB,aAAA,SAAAtD,GAGA,IAAA,GAFAlS,MACAukE,EAAA32E,UAAA5C,OACAyF,EAAA,EAAAzF,EAAAyzE,EAAAvsD,GAAAlnB,EAAAyF,EAAAA,IAAA,CACA,GAAAouE,GAAA3sD,EAAAzhB,EACA,KAAA3B,EAAAg1C,SAAA9jC,EAAA6+D,GAAA,CACA,IAAA,GAAA1nE,GAAA,EAAAotE,EAAAptE,GACArI,EAAAg1C,SAAAl2C,UAAAuJ,GAAA0nE,GADA1nE,KAGAA,IAAAotE,GAAAvkE,EAAAvQ,KAAAovE,IAEA,MAAA7+D,IAKAlR,EAAAm1E,WAAA,SAAA/xD,GACA,GAAAoxD,GAAAI,EAAA91E,WAAA,GAAA,EAAA,EACA,OAAAkB,GAAA6J,OAAAuZ,EAAA,SAAAxjB,GACA,OAAAI,EAAAg1C,SAAAw/B,EAAA50E,MAMAI,EAAAqyC,IAAA,WACA,MAAAryC,GAAA01E,MAAA52E,YAKAkB,EAAA01E,MAAA,SAAAtyD,GAIA,IAAA,GAHAlnB,GAAAknB,GAAApjB,EAAAgQ,IAAAoT,EAAAusD,GAAAzzE,QAAA,EACAgV,EAAArU,MAAAX,GAEA2/B,EAAA,EAAA3/B,EAAA2/B,EAAAA,IACA3qB,EAAA2qB,GAAA77B,EAAAmzE,MAAA/vD,EAAAyY,EAEA,OAAA3qB,IAMAlR,EAAAuB,OAAA,SAAAmvC,EAAAtO,GAEA,IAAA,GADAlxB,MACAvP,EAAA,EAAAzF,EAAAyzE,EAAAj/B,GAAAx0C,EAAAyF,EAAAA,IACAygC,EACAlxB,EAAAw/B,EAAA/uC,IAAAygC,EAAAzgC,GAEAuP,EAAAw/B,EAAA/uC,GAAA,IAAA+uC,EAAA/uC,GAAA,EAGA,OAAAuP,IAiBAlR,EAAAqyE,UAAA5C,EAAA,GACAzvE,EAAA21E,cAAAlG,EAAA,IAIAzvE,EAAA8vE,YAAA,SAAA1sD,EAAA+rD,EAAAC,EAAA3iD,GACA2iD,EAAA5lD,EAAA4lD,EAAA3iD,EAAA,EAGA,KAFA,GAAA7sB,GAAAwvE,EAAAD,GACAvE,EAAA,EAAAC,EAAA8E,EAAAvsD,GACAynD,EAAAD,GAAA,CACA,GAAA7rE,GAAArC,KAAA6a,OAAAqzD,EAAAC,GAAA,EACAuE,GAAAhsD,EAAArkB,IAAAa,EAAAgrE,EAAA7rE,EAAA,EAAA8rE,EAAA9rE,EAEA,MAAA6rE,IAgCA5qE,EAAAxD,QAAAozE,EAAA,EAAA5vE,EAAAqyE,UAAAryE,EAAA8vE,aACA9vE,EAAAyW,YAAAm5D,EAAA,GAAA5vE,EAAA21E,eAKA31E,EAAAkX,MAAA,SAAA+L,EAAAiiB,EAAAruB,GACA,MAAAquB,IACAA,EAAAjiB,GAAA,EACAA,EAAA,GAEApM,EAAAA,GAAA,CAKA,KAAA,GAHA3a,GAAAQ,KAAAsT,IAAAtT,KAAAwX,MAAAgxB,EAAAjiB,GAAApM,GAAA,GACAK,EAAAra,MAAAX,GAEA8zE,EAAA,EAAA9zE,EAAA8zE,EAAAA,IAAA/sD,GAAApM,EACAK,EAAA84D,GAAA/sD,CAGA,OAAA/L,GAQA,IAAA0+D,GAAA,SAAAC,EAAAC,EAAArpD,EAAAspD,EAAA5/B,GACA,KAAA4/B,YAAAD,IAAA,MAAAD,GAAAx0E,MAAAorB,EAAA0pB,EACA,IAAAylB,GAAAgW,EAAAiE,EAAAl2E,WACAuR,EAAA2kE,EAAAx0E,MAAAu6D,EAAAzlB,EACA,OAAAn2C,GAAAuxE,SAAArgE,GAAAA,EACA0qD,EAMA57D,GAAAw1C,KAAA,SAAA27B,EAAA1kD,GACA,GAAAqkD,GAAAK,EAAA37B,OAAAs7B,EAAA,MAAAA,GAAAzvE,MAAA8vE,EAAA7wE,EAAAkJ,KAAA1K,UAAA,GACA,KAAAkB,EAAAswE,WAAAa,GAAA,KAAA,IAAA6E,WAAA,oCACA,IAAA7/B,GAAA71C,EAAAkJ,KAAA1K,UAAA,GACAkkC,EAAA,WACA,MAAA4yC,GAAAzE,EAAAnuC,EAAAvW,EAAA1sB,KAAAo2C,EAAAxzC,OAAArC,EAAAkJ,KAAA1K,aAEA,OAAAkkC,IAMAhjC,EAAAi2E,QAAA,SAAA9E,GACA,GAAA+E,GAAA51E,EAAAkJ,KAAA1K,UAAA,GACAkkC,EAAA,WAGA,IAAA,GAFAv3B,GAAA,EAAAvP,EAAAg6E,EAAAh6E,OACAi6C,EAAAt5C,MAAAX,GACAyF,EAAA,EAAAzF,EAAAyF,EAAAA,IACAw0C,EAAAx0C,GAAAu0E,EAAAv0E,KAAA3B,EAAAlB,UAAA2M,KAAAyqE,EAAAv0E,EAEA,MAAA8J,EAAA3M,UAAA5C,QAAAi6C,EAAAx1C,KAAA7B,UAAA2M,KACA,OAAAmqE,GAAAzE,EAAAnuC,EAAAjjC,KAAAA,KAAAo2C,GAEA,OAAAnT,IAMAhjC,EAAAm2E,QAAA,SAAAhH,GACA,GAAAxtE,GAAAnC,EAAAtD,EAAA4C,UAAA5C,MACA,IAAA,GAAAA,EAAA,KAAA,IAAA02C,OAAA,wCACA,KAAAjxC,EAAA,EAAAzF,EAAAyF,EAAAA,IACAnC,EAAAV,UAAA6C,GACAwtE,EAAA3vE,GAAAQ,EAAAw1C,KAAA25B,EAAA3vE,GAAA2vE,EAEA,OAAAA,IAIAnvE,EAAAo2E,QAAA,SAAAjF,EAAAkF,GACA,GAAAD,GAAA,SAAA52E,GACA,GAAA82E,GAAAF,EAAAE,MACAC,EAAA,IAAAF,EAAAA,EAAAh1E,MAAAtB,KAAAjB,WAAAU,EAEA,OADAQ,GAAAioC,IAAAquC,EAAAC,KAAAD,EAAAC,GAAApF,EAAA9vE,MAAAtB,KAAAjB,YACAw3E,EAAAC,GAGA,OADAH,GAAAE,SACAF,GAKAp2E,EAAAiT,MAAA,SAAAk+D,EAAAqF,GACA,GAAArgC,GAAA71C,EAAAkJ,KAAA1K,UAAA,EACA,OAAA8L,YAAA,WACA,MAAAumE,GAAA9vE,MAAA,KAAA80C,IACAqgC,IAKAx2E,EAAAy2E,MAAAz2E,EAAAi2E,QAAAj2E,EAAAiT,MAAAjT,EAAA,GAOAA,EAAA02E,SAAA,SAAAvF,EAAAqF,EAAAnO,GACA,GAAA57C,GAAA0pB,EAAAjlC,EACAylE,EAAA,KACAniD,EAAA,CACA6zC,KAAAA,KACA,IAAAuO,GAAA,WACApiD,EAAA6zC,EAAAwO,WAAA,EAAA,EAAA72E,EAAA+S,MACA4jE,EAAA,KACAzlE,EAAAigE,EAAA9vE,MAAAorB,EAAA0pB,GACAwgC,IAAAlqD,EAAA0pB,EAAA,MAEA,OAAA,YACA,GAAApjC,GAAA/S,EAAA+S,KACAyhB,IAAA6zC,EAAAwO,WAAA,IAAAriD,EAAAzhB,EACA,IAAAolD,GAAAqe,GAAAzjE,EAAAyhB,EAcA,OAbA/H,GAAA1sB,KACAo2C,EAAAr3C,UACA,GAAAq5D,GAAAA,EAAAqe,GACAG,IACAvjE,aAAAujE,GACAA,EAAA,MAEAniD,EAAAzhB,EACA7B,EAAAigE,EAAA9vE,MAAAorB,EAAA0pB,GACAwgC,IAAAlqD,EAAA0pB,EAAA,OACAwgC,GAAAtO,EAAAyO,YAAA,IACAH,EAAA/rE,WAAAgsE,EAAAze,IAEAjnD,IAQAlR,EAAA+2E,SAAA,SAAA5F,EAAAqF,EAAAQ,GACA,GAAAL,GAAAxgC,EAAA1pB,EAAAwqD,EAAA/lE,EAEA0lE,EAAA,WACA,GAAArC,GAAAv0E,EAAA+S,MAAAkkE,CAEAT,GAAAjC,GAAAA,GAAA,EACAoC,EAAA/rE,WAAAgsE,EAAAJ,EAAAjC,IAEAoC,EAAA,KACAK,IACA9lE,EAAAigE,EAAA9vE,MAAAorB,EAAA0pB,GACAwgC,IAAAlqD,EAAA0pB,EAAA,QAKA,OAAA,YACA1pB,EAAA1sB,KACAo2C,EAAAr3C,UACAm4E,EAAAj3E,EAAA+S,KACA,IAAAmkE,GAAAF,IAAAL,CAOA,OANAA,KAAAA,EAAA/rE,WAAAgsE,EAAAJ,IACAU,IACAhmE,EAAAigE,EAAA9vE,MAAAorB,EAAA0pB,GACA1pB,EAAA0pB,EAAA,MAGAjlC,IAOAlR,EAAAsJ,KAAA,SAAA6nE,EAAAgG,GACA,MAAAn3E,GAAAi2E,QAAAkB,EAAAhG,IAIAnxE,EAAAwyE,OAAA,SAAA9C,GACA,MAAA,YACA,OAAAA,EAAAruE,MAAAtB,KAAAjB,aAMAkB,EAAAgiB,QAAA,WACA,GAAAm0B,GAAAr3C,UACAmkB,EAAAkzB,EAAAj6C,OAAA,CACA,OAAA,YAGA,IAFA,GAAAyF,GAAAshB,EACA/R,EAAAilC,EAAAlzB,GAAA5hB,MAAAtB,KAAAjB,WACA6C,KAAAuP,EAAAilC,EAAAx0C,GAAA6H,KAAAzJ,KAAAmR,EACA,OAAAA,KAKAlR,EAAAwW,MAAA,SAAAY,EAAA+5D,GACA,MAAA,YACA,QAAA/5D,EAAA,EACA+5D,EAAA9vE,MAAAtB,KAAAjB,WADA,SAOAkB,EAAAuW,OAAA,SAAAa,EAAA+5D,GACA,GAAA9B,EACA,OAAA,YAKA,QAJAj4D,EAAA,IACAi4D,EAAA8B,EAAA9vE,MAAAtB,KAAAjB,YAEA,GAAAsY,IAAA+5D,EAAA,MACA9B,IAMArvE,EAAAo3E,KAAAp3E,EAAAi2E,QAAAj2E,EAAAuW,OAAA,EAMA,IAAA8gE,KAAApnE,SAAA,MAAAqnE,qBAAA,YACAnH,GAAA,UAAA,gBAAA,WACA,uBAAA,iBAAA,iBAqBAnwE,GAAAU,KAAA,SAAAyuE,GACA,IAAAnvE,EAAAuxE,SAAApC,GAAA,QACA,IAAA0B,EAAA,MAAAA,GAAA1B,EACA,IAAAzuE,KACA,KAAA,GAAAlB,KAAA2vE,GAAAnvE,EAAAioC,IAAAknC,EAAA3vE,IAAAkB,EAAAC,KAAAnB,EAGA,OADA63E,IAAApH,EAAAd,EAAAzuE,GACAA,GAIAV,EAAAu3E,QAAA,SAAApI,GACA,IAAAnvE,EAAAuxE,SAAApC,GAAA,QACA,IAAAzuE,KACA,KAAA,GAAAlB,KAAA2vE,GAAAzuE,EAAAC,KAAAnB,EAGA,OADA63E,IAAApH,EAAAd,EAAAzuE,GACAA,GAIAV,EAAAoiC,OAAA,SAAA+sC,GAIA,IAAA,GAHAzuE,GAAAV,EAAAU,KAAAyuE,GACAjzE,EAAAwE,EAAAxE,OACAkmC,EAAAvlC,MAAAX,GACAyF,EAAA,EAAAzF,EAAAyF,EAAAA,IACAygC,EAAAzgC,GAAAwtE,EAAAzuE,EAAAiB,GAEA,OAAAygC,IAKApiC,EAAAw3E,UAAA,SAAArI,EAAAC,EAAA3iD,GACA2iD,EAAA5lD,EAAA4lD,EAAA3iD,EAKA,KAAA,GADA6iD,GAHA5uE,EAAAV,EAAAU,KAAAyuE,GACAjzE,EAAAwE,EAAAxE,OACA61E,KAEAl2C,EAAA,EAAA3/B,EAAA2/B,EAAAA,IACAyzC,EAAA5uE,EAAAm7B,GACAk2C,EAAAzC,GAAAF,EAAAD,EAAAG,GAAAA,EAAAH,EAEA,OAAA4C,IAIA/xE,EAAAoyC,MAAA,SAAA+8B,GAIA,IAAA,GAHAzuE,GAAAV,EAAAU,KAAAyuE,GACAjzE,EAAAwE,EAAAxE,OACAk2C,EAAAv1C,MAAAX,GACAyF,EAAA,EAAAzF,EAAAyF,EAAAA,IACAywC,EAAAzwC,IAAAjB,EAAAiB,GAAAwtE,EAAAzuE,EAAAiB,IAEA,OAAAywC,IAIApyC,EAAAiiB,OAAA,SAAAktD,GAGA,IAAA,GAFAj+D,MACAxQ,EAAAV,EAAAU,KAAAyuE,GACAxtE,EAAA,EAAAzF,EAAAwE,EAAAxE,OAAAA,EAAAyF,EAAAA,IACAuP,EAAAi+D,EAAAzuE,EAAAiB,KAAAjB,EAAAiB,EAEA,OAAAuP,IAKAlR,EAAAy3E,UAAAz3E,EAAAuvC,QAAA,SAAA4/B,GACA,GAAAlyD,KACA,KAAA,GAAAzd,KAAA2vE,GACAnvE,EAAAswE,WAAAnB,EAAA3vE,KAAAyd,EAAAtc,KAAAnB,EAEA,OAAAyd,GAAA4F,QAIA7iB,EAAA03E,OAAAjG,EAAAzxE,EAAAu3E,SAIAv3E,EAAA23E,UAAA33E,EAAA43E,OAAAnG,EAAAzxE,EAAAU,MAGAV,EAAAsyE,QAAA,SAAAnD,EAAAO,EAAAjjD,GACAijD,EAAAlmD,EAAAkmD,EAAAjjD,EAEA,KAAA,GADAjtB,GAAAkB,EAAAV,EAAAU,KAAAyuE,GACAxtE,EAAA,EAAAzF,EAAAwE,EAAAxE,OAAAA,EAAAyF,EAAAA,IAEA,GADAnC,EAAAkB,EAAAiB,GACA+tE,EAAAP,EAAA3vE,GAAAA,EAAA2vE,GAAA,MAAA3vE,IAKAQ,EAAA63E,KAAA,SAAAt2E,EAAAu2E,EAAArrD,GACA,GAAA2iD,GAAA1uE,EAAAwQ,KAAAi+D,EAAA5tE,CACA,IAAA,MAAA4tE,EAAA,MAAAj+D,EACAlR,GAAAswE,WAAAwH,IACAp3E,EAAAV,EAAAu3E,QAAApI,GACAC,EAAAG,EAAAuI,EAAArrD,KAEA/rB,EAAAk0E,EAAA91E,WAAA,GAAA,EAAA,GACAswE,EAAA,SAAAxvE,EAAAJ,EAAA2vE,GAAA,MAAA3vE,KAAA2vE,IACAA,EAAA1vE,OAAA0vE,GAEA,KAAA,GAAAxtE,GAAA,EAAAzF,EAAAwE,EAAAxE,OAAAA,EAAAyF,EAAAA,IAAA,CACA,GAAAnC,GAAAkB,EAAAiB,GACA/B,EAAAuvE,EAAA3vE,EACA4vE,GAAAxvE,EAAAJ,EAAA2vE,KAAAj+D,EAAA1R,GAAAI,GAEA,MAAAsR,IAIAlR,EAAA+3E,KAAA,SAAA5I,EAAAC,EAAA3iD,GACA,GAAAzsB,EAAAswE,WAAAlB,GACAA,EAAApvE,EAAAwyE,OAAApD,OACA,CACA,GAAA1uE,GAAAV,EAAA6F,IAAA+uE,EAAA91E,WAAA,GAAA,EAAA,GAAA9C,OACAozE,GAAA,SAAAxvE,EAAAJ,GACA,OAAAQ,EAAAg1C,SAAAt0C,EAAAlB,IAGA,MAAAQ,GAAA63E,KAAA1I,EAAAC,EAAA3iD,IAIAzsB,EAAA0oE,SAAA+I,EAAAzxE,EAAAu3E,SAAA,GAKAv3E,EAAAC,OAAA,SAAAN,EAAAq4E,GACA,GAAA9mE,GAAA0gE,EAAAjyE,EAEA,OADAq4E,IAAAh4E,EAAA23E,UAAAzmE,EAAA8mE,GACA9mE,GAIAlR,EAAAi4E,MAAA,SAAA9I,GACA,MAAAnvE,GAAAuxE,SAAApC,GACAnvE,EAAA6yC,QAAAs8B,GAAAA,EAAA7uE,QAAAN,EAAA03E,UAAAvI,GADAA,GAOAnvE,EAAAioE,IAAA,SAAAkH,EAAA+I,GAEA,MADAA,GAAA/I,GACAA,GAIAnvE,EAAAm4E,QAAA,SAAA52E,EAAA8xE,GACA,GAAA3yE,GAAAV,EAAAU,KAAA2yE,GAAAn3E,EAAAwE,EAAAxE,MACA,IAAA,MAAAqF,EAAA,OAAArF,CAEA,KAAA,GADAizE,GAAA1vE,OAAA8B,GACAI,EAAA,EAAAzF,EAAAyF,EAAAA,IAAA,CACA,GAAAnC,GAAAkB,EAAAiB,EACA,IAAA0xE,EAAA7zE,KAAA2vE,EAAA3vE,MAAAA,IAAA2vE,IAAA,OAAA,EAEA,OAAA,EAKA,IAAAiJ,GAAA,SAAAl6E,EAAAC,EAAAk6E,EAAAC,GAGA,GAAAp6E,IAAAC,EAAA,MAAA,KAAAD,GAAA,EAAAA,IAAA,EAAAC,CAEA,IAAA,MAAAD,GAAA,MAAAC,EAAA,MAAAD,KAAAC,CAEAD,aAAA8B,KAAA9B,EAAAA,EAAA+yE,UACA9yE,YAAA6B,KAAA7B,EAAAA,EAAA8yE,SAEA,IAAAjM,GAAA/0D,EAAAzG,KAAAtL,EACA,IAAA8mE,IAAA/0D,EAAAzG,KAAArL,GAAA,OAAA,CACA,QAAA6mE,GAEA,IAAA,kBAEA,IAAA,kBAGA,MAAA,GAAA9mE,GAAA,GAAAC,CACA,KAAA,kBAGA,OAAAD,KAAAA,GAAAC,KAAAA,EAEA,KAAAD,EAAA,GAAAA,IAAA,EAAAC,GAAAD,KAAAC,CACA,KAAA,gBACA,IAAA,mBAIA,OAAAD,KAAAC,EAGA,GAAAo6E,GAAA,mBAAAvT,CACA,KAAAuT,EAAA,CACA,GAAA,gBAAAr6E,IAAA,gBAAAC,GAAA,OAAA,CAIA,IAAAq6E,GAAAt6E,EAAAkyE,YAAAqI,EAAAt6E,EAAAiyE,WACA,IAAAoI,IAAAC,KAAAz4E,EAAAswE,WAAAkI,IAAAA,YAAAA,IACAx4E,EAAAswE,WAAAmI,IAAAA,YAAAA,KACA,eAAAv6E,IAAA,eAAAC,GACA,OAAA,EAQAk6E,EAAAA,MACAC,EAAAA,KAEA,KADA,GAAAp8E,GAAAm8E,EAAAn8E,OACAA,KAGA,GAAAm8E,EAAAn8E,KAAAgC,EAAA,MAAAo6E,GAAAp8E,KAAAiC,CAQA,IAJAk6E,EAAA13E,KAAAzC,GACAo6E,EAAA33E,KAAAxC,GAGAo6E,EAAA,CAGA,GADAr8E,EAAAgC,EAAAhC,OACAA,IAAAiC,EAAAjC,OAAA,OAAA,CAEA,MAAAA,KACA,IAAAk8E,EAAAl6E,EAAAhC,GAAAiC,EAAAjC,GAAAm8E,EAAAC,GAAA,OAAA,MAEA,CAEA,GAAA94E,GAAAkB,EAAAV,EAAAU,KAAAxC,EAGA,IAFAhC,EAAAwE,EAAAxE,OAEA8D,EAAAU,KAAAvC,GAAAjC,SAAAA,EAAA,OAAA,CACA,MAAAA,KAGA,GADAsD,EAAAkB,EAAAxE,IACA8D,EAAAioC,IAAA9pC,EAAAqB,KAAA44E,EAAAl6E,EAAAsB,GAAArB,EAAAqB,GAAA64E,EAAAC,GAAA,OAAA,EAMA,MAFAD,GAAAh0D,MACAi0D,EAAAj0D,OACA,EAIArkB,GAAA04E,QAAA,SAAAx6E,EAAAC,GACA,MAAAi6E,GAAAl6E,EAAAC,IAKA6B,EAAA24E,QAAA,SAAAxJ,GACA,MAAA,OAAAA,GAAA,EACAK,EAAAL,KAAAnvE,EAAA6yC,QAAAs8B,IAAAnvE,EAAA44E,SAAAzJ,IAAAnvE,EAAAg1E,YAAA7F,IAAA,IAAAA,EAAAjzE,OACA,IAAA8D,EAAAU,KAAAyuE,GAAAjzE,QAIA8D,EAAA64E,UAAA,SAAA1J,GACA,SAAAA,GAAA,IAAAA,EAAAv+B,WAKA5wC,EAAA6yC,QAAA+9B,GAAA,SAAAzB,GACA,MAAA,mBAAAl/D,EAAAzG,KAAA2lE,IAIAnvE,EAAAuxE,SAAA,SAAApC,GACA,GAAAzrE,SAAAyrE,EACA,OAAA,aAAAzrE,GAAA,WAAAA,KAAAyrE,GAIAnvE,EAAA80C,MAAA,YAAA,WAAA,SAAA,SAAA,OAAA,SAAA,SAAA,SAAAtzC,GACAxB,EAAA,KAAAwB,GAAA,SAAA2tE,GACA,MAAAl/D,GAAAzG,KAAA2lE,KAAA,WAAA3tE,EAAA,OAMAxB,EAAAg1E,YAAAl2E,aACAkB,EAAAg1E,YAAA,SAAA7F,GACA,MAAAnvE,GAAAioC,IAAAknC,EAAA,YAMA,kBAAA,KAAA,gBAAA2J,aACA94E,EAAAswE,WAAA,SAAAnB,GACA,MAAA,kBAAAA,KAAA,IAKAnvE,EAAAmT,SAAA,SAAAg8D,GACA,MAAAh8D,UAAAg8D,KAAA3wE,MAAA3C,WAAAszE,KAIAnvE,EAAAxB,MAAA,SAAA2wE,GACA,MAAAnvE,GAAA+4E,SAAA5J,IAAAA,KAAAA,GAIAnvE,EAAAs1E,UAAA,SAAAnG,GACA,MAAAA,MAAA,GAAAA,KAAA,GAAA,qBAAAl/D,EAAAzG,KAAA2lE,IAIAnvE,EAAAg5E,OAAA,SAAA7J,GACA,MAAA,QAAAA,GAIAnvE,EAAAi5E,YAAA,SAAA9J,GACA,MAAA,UAAAA,GAKAnvE,EAAAioC,IAAA,SAAAknC,EAAA3vE,GACA,MAAA,OAAA2vE,GAAAlxD,EAAAzU,KAAA2lE,EAAA3vE,IAQAQ,EAAAk5E,WAAA,WAEA,MADA9+C,GAAAp6B,EAAAywE,EACA1wE,MAIAC,EAAA+oC,SAAA,SAAAnpC,GACA,MAAAA,IAIAI,EAAAm5E,SAAA,SAAAv5E,GACA,MAAA,YACA,MAAAA,KAIAI,EAAAo5E,KAAA,aAEAp5E,EAAA6zC,SAAAA,EAGA7zC,EAAAq5E,WAAA,SAAAlK,GACA,MAAA,OAAAA,EAAA,aAAA,SAAA3vE,GACA,MAAA2vE,GAAA3vE,KAMAQ,EAAAwxE,QAAAxxE,EAAAi0C,QAAA,SAAAo/B,GAEA,MADAA,GAAArzE,EAAA23E,aAAAtE,GACA,SAAAlE,GACA,MAAAnvE,GAAAm4E,QAAAhJ,EAAAkE,KAKArzE,EAAAoX,MAAA,SAAAxV,EAAAwtE,EAAA3iD,GACA,GAAA6sD,GAAAz8E,MAAAH,KAAAsT,IAAA,EAAApO,GACAwtE,GAAAG,EAAAH,EAAA3iD,EAAA,EACA,KAAA,GAAA9qB,GAAA,EAAAC,EAAAD,EAAAA,IAAA23E,EAAA33E,GAAAytE,EAAAztE,EACA,OAAA23E,IAIAt5E,EAAA6gC,OAAA,SAAA3wB,EAAAF,GAKA,MAJA,OAAAA,IACAA,EAAAE,EACAA,EAAA,GAEAA,EAAAxT,KAAA6a,MAAA7a,KAAAmkC,UAAA7wB,EAAAE,EAAA,KAIAlQ,EAAA+S,IAAAS,KAAAT,KAAA,WACA,OAAA,GAAAS,OAAAg0C,UAIA,IAAA+xB,IACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,SACAC,IAAA,UAEAC,EAAA95E,EAAAiiB,OAAAs3D,GAGAQ,EAAA,SAAAl0E,GACA,GAAAm0E,GAAA,SAAArwE,GACA,MAAA9D,GAAA8D,IAGAxI,EAAA,MAAAnB,EAAAU,KAAAmF,GAAA9I,KAAA,KAAA,IACAk9E,EAAA30E,OAAAnE,GACA+4E,EAAA50E,OAAAnE,EAAA,IACA,OAAA,UAAAyW,GAEA,MADAA,GAAA,MAAAA,EAAA,GAAA,GAAAA,EACAqiE,EAAA5zE,KAAAuR,GAAAA,EAAAzb,QAAA+9E,EAAAF,GAAApiE,GAGA5X,GAAAm6E,OAAAJ,EAAAR,GACAv5E,EAAAo6E,SAAAL,EAAAD,GAIA95E,EAAAkR,OAAA,SAAA3P,EAAAsyC,EAAAwmC,GACA,GAAAz6E,GAAA,MAAA2B,EAAA,OAAAA,EAAAsyC,EAIA,OAHA,UAAAj0C,IACAA,EAAAy6E,GAEAr6E,EAAAswE,WAAA1wE,GAAAA,EAAA4J,KAAAjI,GAAA3B,EAKA,IAAA06E,GAAA,CACAt6E,GAAAu6E,SAAA,SAAA1kE,GACA,GAAAo4B,KAAAqsC,EAAA,EACA,OAAAzkE,GAAAA,EAAAo4B,EAAAA,GAKAjuC,EAAAw6E,kBACAC,SAAA,kBACAn4D,YAAA,mBACA63D,OAAA,mBAMA,IAAAO,GAAA,OAIAC,GACAf,IAAA,IACAgB,KAAA,KACAC,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAGAhB,EAAA,4BAEAiB,EAAA,SAAAtxE,GACA,MAAA,KAAAgxE,EAAAhxE,GAOA3J,GAAA2X,SAAA,SAAAw9B,EAAA+lC,EAAAC,IACAD,GAAAC,IAAAD,EAAAC,GACAD,EAAAl7E,EAAA0oE,YAAAwS,EAAAl7E,EAAAw6E,iBAGA,IAAAhJ,GAAAlsE,SACA41E,EAAAf,QAAAO,GAAAv5E,QACA+5E,EAAA54D,aAAAo4D,GAAAv5E,QACA+5E,EAAAT,UAAAC,GAAAv5E,QACApE,KAAA,KAAA,KAAA,KAGA8+B,EAAA,EACA16B,EAAA,QACAg0C,GAAAh5C,QAAAq1E,EAAA,SAAA7nE,EAAAwwE,EAAA73D,EAAAm4D,EAAAzjE,GAaA,MAZA7V,IAAAg0C,EAAA70C,MAAAu7B,EAAA7kB,GAAA7a,QAAA69E,EAAAiB,GACAp/C,EAAA7kB,EAAArN,EAAAzN,OAEAi+E,EACAh5E,GAAA,cAAAg5E,EAAA,iCACA73D,EACAnhB,GAAA,cAAAmhB,EAAA,uBACAm4D,IACAt5E,GAAA,OAAAs5E,EAAA,YAIA9wE,IAEAxI,GAAA,OAGA+5E,EAAAE,WAAAj6E,EAAA,mBAAAA,EAAA,OAEAA,EAAA,4FAEAA,EAAA,eAEA,KACA,GAAAk6E,GAAA,GAAAx1B,UAAAq1B,EAAAE,UAAA,MAAA,IAAAj6E,GACA,MAAA+B,GAEA,KADAA,GAAA/B,OAAAA,EACA+B,EAGA,GAAAyU,GAAA,SAAA9P,GACA,MAAAwzE,GAAA7xE,KAAAzJ,KAAA8H,EAAA7H,IAIAs7E,EAAAJ,EAAAE,UAAA,KAGA,OAFAzjE,GAAAxW,OAAA,YAAAm6E,EAAA,OAAAn6E,EAAA,IAEAwW,GAIA3X,EAAAu7E,MAAA,SAAApM,GACA,GAAAqM,GAAAx7E,EAAAmvE,EAEA,OADAqM,GAAAC,QAAA,EACAD,EAUA,IAAAtqE,GAAA,SAAAsqE,EAAArM,GACA,MAAAqM,GAAAC,OAAAz7E,EAAAmvE,GAAAoM,QAAApM,EAIAnvE,GAAA07E,MAAA,SAAAvM,GACAnvE,EAAA80C,KAAA90C,EAAAy3E,UAAAtI,GAAA,SAAA3tE,GACA,GAAA2vE,GAAAnxE,EAAAwB,GAAA2tE,EAAA3tE,EACAxB,GAAAL,UAAA6B,GAAA,WACA,GAAA20C,IAAAp2C,KAAAkxE,SAEA,OADAtwE,GAAAU,MAAA80C,EAAAr3C,WACAoS,EAAAnR,KAAAoxE,EAAA9vE,MAAArB,EAAAm2C,QAMAn2C,EAAA07E,MAAA17E,GAGAA,EAAA80C,MAAA,MAAA,OAAA,UAAA,QAAA,OAAA,SAAA,WAAA,SAAAtzC,GACA,GAAAJ,GAAAsvE,EAAAlvE,EACAxB,GAAAL,UAAA6B,GAAA,WACA,GAAA2tE,GAAApvE,KAAAkxE,QAGA,OAFA7vE,GAAAC,MAAA8tE,EAAArwE,WACA,UAAA0C,GAAA,WAAAA,GAAA,IAAA2tE,EAAAjzE,cAAAizE,GAAA,GACAj+D,EAAAnR,KAAAovE,MAKAnvE,EAAA80C,MAAA,SAAA,OAAA,SAAA,SAAAtzC,GACA,GAAAJ,GAAAsvE,EAAAlvE,EACAxB,GAAAL,UAAA6B,GAAA,WACA,MAAA0P,GAAAnR,KAAAqB,EAAAC,MAAAtB,KAAAkxE,SAAAnyE,eAKAkB,EAAAL,UAAAC,MAAA,WACA,MAAAG,MAAAkxE,UAKAjxE,EAAAL,UAAA8nD,QAAAznD,EAAAL,UAAAg8E,OAAA37E,EAAAL,UAAAC,MAEAI,EAAAL,UAAAsQ,SAAA,WACA,MAAA,GAAAlQ,KAAAkxE,UAUA,kBAAA7O,SAAAA,OAAAC,KACAD,OAAA,gBAAA,WACA,MAAApiE,MAGAwJ,KAAAzJ","file":"app.js","sourcesContent":["/* =======================================================================\n   Utilities\n   ======================================================================= */\n\n/* Functions\n======================================================================= */\n\n/**\n * Helper function to convert number to currency (comes out as $x.xx)\n */\nfunction currencyFormat(number) {\n  var decimalplaces = 2;\n  var decimalcharacter = \".\";\n  var thousandseparater = \",\";\n  number = parseFloat(number);\n  var sign = number < 0 ? \"-\" : \"\";\n  var formatted = new String(number.toFixed(decimalplaces));\n  if( decimalcharacter.length && decimalcharacter != \".\" ) { formatted = formatted.replace(/\\./,decimalcharacter); }\n  var integer = \"\";\n  var fraction = \"\";\n  var strnumber = new String(formatted);\n  var dotpos = decimalcharacter.length ? strnumber.indexOf(decimalcharacter) : -1;\n  if( dotpos > -1 )\n  {\n    if( dotpos ) { integer = strnumber.substr(0,dotpos); }\n    fraction = strnumber.substr(dotpos+1);\n  }\n  else { integer = strnumber; }\n  if( integer ) { integer = String(Math.abs(integer)); }\n  while( fraction.length < decimalplaces ) { fraction += \"0\"; }\n  temparray = new Array();\n  while( integer.length > 3 )\n  {\n    temparray.unshift(integer.substr(-3));\n    integer = integer.substr(0,integer.length-3);\n  }\n  temparray.unshift(integer);\n  integer = temparray.join(thousandseparater);\n  return sign + '$' + integer + decimalcharacter + fraction;\n}\n\n/**\n * Helper function to convert currency to number\n */\nfunction createNumber(currencyString) {\n  return parseFloat(currencyString.replace(/(\\$|,)/g, ''));\n}\n\n/**\n * Helper function to convert string to date\n */\nfunction createDate(dateString) {\n  var format = d3.time.format(\"%-m/%-d/%Y\");\n  return format.parse(dateString);\n};\n\n/**\n * Helper function to convert date to string\n */\nfunction createString(date) {\n  var format = d3.time.format(\"%-m/%-d/%Y\");\n  return format(date)\n};\n","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();","(function() {\n\n// Chart design based on the recommendations of Stephen Few. Implementation\n// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n// http://projects.instantcognition.com/protovis/bulletchart/\nd3.bullet = function() {\n  var orient = \"left\", // TODO top & bottom\n      reverse = false,\n      duration = 0,\n      ranges = bulletRanges,\n      markers = bulletMarkers,\n      measures = bulletMeasures,\n      width = 380,\n      height = 30,\n      tickFormat = null;\n\n  // For each small multiple…\n  function bullet(g) {\n    g.each(function(d, i) {\n      var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n          markz = markers.call(this, d, i),\n          markerz = markers.call(this, d, i).slice().sort(d3.descending),\n          measurez = measures.call(this, d, i).slice().sort(d3.descending),\n          g = d3.select(this);\n\n      // Compute the new x-scale.\n      var x1 = d3.scale.linear()\n          .domain([0, Math.max(rangez[0], markerz[0], measurez[0])])\n          .range(reverse ? [width, 0] : [0, width]);\n\n      // Retrieve the old x-scale, if this is an update.\n      var x0 = this.__chart__ || d3.scale.linear()\n          .domain([0, Infinity])\n          .range(x1.range());\n\n      // Stash the new scale.\n      this.__chart__ = x1;\n\n      // Derive width-scales from the x-scales.\n      var w0 = bulletWidth(x0),\n          w1 = bulletWidth(x1);\n\n      // Update the range rects.\n      var range = g.selectAll(\"rect.range\")\n          .data(rangez);\n\n      range.enter().append(\"rect\")\n          .attr(\"class\", function(d, i) { return \"range s\" + i; })\n          .attr(\"width\", w0)\n          .attr(\"height\", height)\n          .attr(\"x\", reverse ? x0 : 0)\n          .attr(\"width\", w1)\n          .attr(\"x\", reverse ? x1 : 0);\n\n      range.attr(\"x\", reverse ? x1 : 0)\n          .attr(\"width\", w1)\n          .attr(\"height\", height);\n\n      // Update the measure rects.\n      var measure = g.selectAll(\"rect.measure\")\n          .data(measurez);\n\n      measure.enter().append(\"rect\")\n          .attr(\"class\", function(d, i) { return \"measure s\" + i; })\n          .attr(\"width\", w0)\n          .attr(\"height\", height / 3)\n          .attr(\"x\", reverse ? x0 : 0)\n          .attr(\"y\", height / 3)\n        .transition()\n          .duration(duration)\n          .attr(\"width\", w1)\n          .attr(\"x\", reverse ? x1 : 0);\n\n      measure\n        .transition()\n          .duration(duration)\n          .attr(\"width\", w1)\n          .attr(\"height\", height / 3)\n          .attr(\"x\", reverse ? x1 : 0)\n          .attr(\"y\", height / 3);\n\n      /**\n       * Begin code for custom measure tooltips show current sales\n       */\n\n      var locationColors = { // Stroke and fill colors for each office\n        jacksonville: ['#008EE5', '#66BBEF'],\n        orlando: ['#936FEE', '#BEA9F5'],\n        tallahassee: ['#FFA435', '#FFC886'],\n        tampa: ['#FC5561', '#FD99A0'],\n        \"west palm beach\": ['#00B058', '#66D09B']\n      };\n\n      // Create and append a tooltip\n      var vizTooltip = d3.select('#sales-goals-chart').append('div')\n                            .attr('class', 'tooltip')\n                            .style('opacity', 0);\n\n      // Custom tooltips for a measure when mouse in\n      measure.on(\"mouseenter\", function(d, i) {\n\n        // Transition to full opacity over 0.3s\n        vizTooltip.transition()\n                    .duration(300)\n                    .style('opacity', 1);\n\n        // Add paragraph holding current sales total\n        vizTooltip.html('<p>' + (d * 1000000).formatMoney(2) + '</p>')\n                    .style('left', function() {\n\n                      // Check if tooltip will be outside chart and position\n                      var tooltipWidth = $('#sales-goals-chart .tooltip').width();\n                      if ((d3.event.pageX + tooltipWidth) > $('#sales-goals-chart').width()) {\n                        return (d3.event.pageX - tooltipWidth) + 'px';\n                      }\n                      else {\n                        return d3.event.pageX + 'px';\n                      }\n                    })\n                    .style('top', function() {\n\n                      // Check if tooltip will be outside chart and position\n                      var tooltipHeight = $('#sales-goals-chart .tooltip').height();\n                      if ((d3.event.pageY + tooltipHeight) > height) {\n                        return (d3.event.pageY - tooltipHeight) + 'px';\n                      }\n                      else {\n                        return d3.event.pageY + 'px';\n                      }\n                    });\n      });\n\n      // Fade out tooltip on mouse out over 0.3s\n      measure.on(\"mouseleave\", function(d, i) {\n        vizTooltip.transition()\n                    .duration(300)\n                    .style('opacity', 0);\n      });\n\n      /**\n       * End code for custom measure tooltips showing current sales\n       */\n\n      // Update the marker lines.\n      var marker = g.selectAll(\"g\")\n          .data(markerz)\n          .enter().append(\"g\")\n            .style('text-anchor', 'end');\n\n      marker.append('line')\n          .attr(\"class\", \"marker\")\n          .attr(\"x1\", x0)\n          .attr(\"x2\", x0)\n          .attr(\"y1\", height / 6)\n          .attr(\"y2\", height * 5 / 6)\n          .attr(\"x1\", x1)\n          .attr(\"x2\", x1);\n\n        marker.append('circle')\n          .attr(\"cx\", x0)\n          .attr(\"cy\", height / 2)\n          .attr(\"r\", 12)\n          .attr(\"cx\", x1)\n          .attr(\"transform\", \"translate(0, -1)\")\n          .attr(\"fill\", \"yellow\");\n\n        marker.append('circle')\n          .attr(\"cx\", x0)\n          .attr(\"cy\", height / 2)\n          .attr(\"r\", 3)\n          .attr(\"cx\", x1)\n          .attr(\"transform\", \"translate(-6, -3)\")\n          .attr(\"fill\", \"black\");\n\n        marker.append('circle')\n            .attr(\"cx\", x0)\n            .attr(\"cy\", height / 2)\n            .attr(\"r\", 3)\n            .attr(\"cx\", x1)\n            .attr(\"transform\", \"translate(6, -3)\")\n            .attr(\"fill\", \"black\");\n\n        marker.append('ellipse')\n            .attr(\"cx\", x0)\n            .attr(\"cy\", height / 2)\n            .attr(\"rx\", 8)\n            .attr(\"ry\", 2)\n            .attr(\"cx\", x1)\n            .attr(\"transform\", \"translate(0, 4)\")\n            .attr(\"fill\", \"black\");\n\n        marker.append('ellipse')\n            .attr(\"cx\", x0)\n            .attr(\"cy\", height / 2)\n            .attr(\"rx\", 8)\n            .attr(\"ry\", 2)\n            .attr(\"cx\", x1)\n            .attr(\"transform\", \"translate(0, 2)\")\n            .attr(\"fill\", \"yellow\");\n\n      marker.append('text')\n          .text(\"Goal\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr('x', x1)\n          .attr('y', (height / 6) - 2);\n\n      marker.attr(\"x1\", x1)\n          .attr(\"x2\", x1)\n          .attr(\"y1\", height / 6)\n          .attr(\"y2\", height * 5 / 6);\n\n      marker.on(\"mouseenter\", function(d, i) {\n        vizTooltip.transition()\n                    .duration(500)\n                    .style('opacity', 1);\n        vizTooltip.html('<p>' + (d * 1000000).formatMoney(2) + '</p>')\n                    .style('left', function() {\n                      var tooltipWidth = $('#sales-goals-chart .tooltip').width();\n                      if ((d3.event.pageX + tooltipWidth) > $('#sales-goals-chart').width()) {\n                        return (d3.event.pageX - tooltipWidth) + 'px';\n                      }\n                      else {\n                        return d3.event.pageX + 'px';\n                      }\n                    })\n                    .style('top', function() {\n                      var tooltipHeight = $('#sales-goals-chart .tooltip').height();\n                      if ((d3.event.pageY + tooltipHeight) > height) {\n                        return (d3.event.pageY - tooltipHeight) + 'px';\n                      }\n                      else {\n                        return d3.event.pageY + 'px';\n                      }\n                    });\n      });\n\n      marker.on(\"mouseleave\", function(d, i) {\n        vizTooltip.transition()\n                    .duration(500)\n                    .style('opacity', 0);\n      });\n\n      // Compute the tick format.\n      var format = tickFormat || x1.tickFormat(8);\n\n      // Update the tick groups.\n      var tick = g.selectAll(\"g.tick\")\n          .data(x1.ticks(8), function(d) {\n            return this.textContent || format(d);\n          });\n\n      // Initialize the ticks with the old scale, x0.\n      var tickEnter = tick.enter().append(\"g\")\n          .attr(\"class\", \"tick\")\n          .attr(\"transform\", bulletTranslate(x0))\n          .style(\"opacity\", 1e-6);\n\n      tickEnter.append(\"line\")\n          .attr(\"y1\", height)\n          .attr(\"y2\", height * 7 / 6);\n\n      tickEnter.append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"dy\", \"1em\")\n          .attr(\"y\", height * 7 / 6)\n          .text(format);\n\n      // Transition the entering ticks to the new scale, x1.\n      tickEnter.attr(\"transform\", bulletTranslate(x1))\n          .style(\"opacity\", 1);\n\n      // Transition the updating ticks to the new scale, x1.\n      var tickUpdate = tick.attr(\"transform\", bulletTranslate(x1))\n          .style(\"opacity\", 1);\n\n      tickUpdate.select(\"line\")\n          .attr(\"y1\", height)\n          .attr(\"y2\", height * 7 / 6);\n\n      tickUpdate.select(\"text\")\n          .attr(\"y\", height * 7 / 6);\n\n      // Transition the exiting ticks to the new scale, x1.\n      tick.exit().attr(\"transform\", bulletTranslate(x1))\n          .style(\"opacity\", 1e-6)\n          .remove();\n    });\n    d3.timer.flush();\n  }\n\n  // left, right, top, bottom\n  bullet.orient = function(x) {\n    if (!arguments.length) return orient;\n    orient = x;\n    reverse = orient == \"right\" || orient == \"bottom\";\n    return bullet;\n  };\n\n  // ranges (bad, satisfactory, good)\n  bullet.ranges = function(x) {\n    if (!arguments.length) return ranges;\n    ranges = x;\n    return bullet;\n  };\n\n  // markers (previous, goal)\n  bullet.markers = function(x) {\n    if (!arguments.length) return markers;\n    markers = x;\n    return bullet;\n  };\n\n  // measures (actual, forecast)\n  bullet.measures = function(x) {\n    if (!arguments.length) return measures;\n    measures = x;\n    return bullet;\n  };\n\n  bullet.width = function(x) {\n    if (!arguments.length) return width;\n    width = x;\n    return bullet;\n  };\n\n  bullet.height = function(x) {\n    if (!arguments.length) return height;\n    height = x;\n    return bullet;\n  };\n\n  bullet.tickFormat = function(x) {\n    if (!arguments.length) return tickFormat;\n    tickFormat = x;\n    return bullet;\n  };\n\n  bullet.duration = function(x) {\n    if (!arguments.length) return duration;\n    duration = x;\n    return bullet;\n  };\n\n  return bullet;\n};\n\nfunction bulletRanges(d) {\n  return d.ranges;\n}\n\nfunction bulletMarkers(d) {\n  return d.markers;\n}\n\nfunction bulletMeasures(d) {\n  return d.measures;\n}\n\nfunction bulletTranslate(x) {\n  return function(d) {\n    return \"translate(\" + x(d) + \",0)\";\n  };\n}\n\nfunction bulletWidth(x) {\n  var x0 = x(0);\n  return function(d) {\n    return Math.abs(x(d) - x0);\n  };\n}\n\nNumber.prototype.formatMoney = function(c, d, t){\n  var n = this,\n      c = isNaN(c = Math.abs(c)) ? 2 : c,\n      d = d == undefined ? \".\" : d,\n      t = t == undefined ? \",\" : t,\n      s = n < 0 ? \"-\" : \"\",\n      i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + \"\",\n      j = (j = i.length) > 3 ? j % 3 : 0;\n     return s + '$' + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\");\n };\n\n})();\n","/*! nouislider - 8.0.2 - 2015-07-06 13:22:09 */\r\n\r\n/*jslint browser: true */\r\n/*jslint white: true */\r\n\r\n(function (factory) {\r\n\r\n    if ( typeof define === 'function' && define.amd ) {\r\n\r\n        // AMD. Register as an anonymous module.\r\n        define([], factory);\r\n\r\n    } else if ( typeof exports === 'object' ) {\r\n\r\n        var fs = require('fs');\r\n\r\n        // Node/CommonJS\r\n        module.exports = factory();\r\n        module.exports.css = function () {\r\n            return fs.readFileSync(__dirname + '/nouislider.min.css', 'utf8');\r\n        };\r\n\r\n    } else {\r\n\r\n        // Browser globals\r\n        window.noUiSlider = factory();\r\n    }\r\n\r\n}(function( ){\r\n\r\n\t'use strict';\r\n\r\n\r\n\t// Removes duplicates from an array.\r\n\tfunction unique(array) {\r\n\t\treturn array.filter(function(a){\r\n\t\t\treturn !this[a] ? this[a] = true : false;\r\n\t\t}, {});\r\n\t}\r\n\r\n\t// Round a value to the closest 'to'.\r\n\tfunction closest ( value, to ) {\r\n\t\treturn Math.round(value / to) * to;\r\n\t}\r\n\r\n\t// Current position of an element relative to the document.\r\n\tfunction offset ( elem ) {\r\n\r\n\tvar rect = elem.getBoundingClientRect(),\r\n\t\tdoc = elem.ownerDocument,\r\n\t\twin = doc.defaultView || doc.parentWindow,\r\n\t\tdocElem = doc.documentElement,\r\n\t\txOff = win.pageXOffset;\r\n\r\n\t\t// getBoundingClientRect contains left scroll in Chrome on Android.\r\n\t\t// I haven't found a feature detection that proves this. Worst case\r\n\t\t// scenario on mis-match: the 'tap' feature on horizontal sliders breaks.\r\n\t\tif ( /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) ) {\r\n\t\t\txOff = 0;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: rect.top + win.pageYOffset - docElem.clientTop,\r\n\t\t\tleft: rect.left + xOff - docElem.clientLeft\r\n\t\t};\r\n\t}\r\n\r\n\t// Checks whether a value is numerical.\r\n\tfunction isNumeric ( a ) {\r\n\t\treturn typeof a === 'number' && !isNaN( a ) && isFinite( a );\r\n\t}\r\n\r\n\t// Rounds a number to 7 supported decimals.\r\n\tfunction accurateNumber( number ) {\r\n\t\tvar p = Math.pow(10, 7);\r\n\t\treturn Number((Math.round(number*p)/p).toFixed(7));\r\n\t}\r\n\r\n\t// Sets a class and removes it after [duration] ms.\r\n\tfunction addClassFor ( element, className, duration ) {\r\n\t\taddClass(element, className);\r\n\t\tsetTimeout(function(){\r\n\t\t\tremoveClass(element, className);\r\n\t\t}, duration);\r\n\t}\r\n\r\n\t// Limits a value to 0 - 100\r\n\tfunction limit ( a ) {\r\n\t\treturn Math.max(Math.min(a, 100), 0);\r\n\t}\r\n\r\n\t// Wraps a variable as an array, if it isn't one yet.\r\n\tfunction asArray ( a ) {\r\n\t\treturn Array.isArray(a) ? a : [a];\r\n\t}\r\n\r\n\t// Counts decimals\r\n\tfunction countDecimals ( numStr ) {\r\n\t\tvar pieces = numStr.split(\".\");\r\n\t\treturn pieces.length > 1 ? pieces[1].length : 0;\r\n\t}\r\n\r\n\t// http://youmightnotneedjquery.com/#add_class\r\n\tfunction addClass ( el, className ) {\r\n\t\tif ( el.classList ) {\r\n\t\t\tel.classList.add(className);\r\n\t\t} else {\r\n\t\t\tel.className += ' ' + className;\r\n\t\t}\r\n\t}\r\n\r\n\t// http://youmightnotneedjquery.com/#remove_class\r\n\tfunction removeClass ( el, className ) {\r\n\t\tif ( el.classList ) {\r\n\t\t\tel.classList.remove(className);\r\n\t\t} else {\r\n\t\t\tel.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n\t\t}\r\n\t}\r\n\r\n\t// http://youmightnotneedjquery.com/#has_class\r\n\tfunction hasClass ( el, className ) {\r\n\t\tif ( el.classList ) {\r\n\t\t\tel.classList.contains(className);\r\n\t\t} else {\r\n\t\t\tnew RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tvar\r\n\t// Determine the events to bind. IE11 implements pointerEvents without\r\n\t// a prefix, which breaks compatibility with the IE10 implementation.\r\n\t/** @const */\r\n\tactions = window.navigator.pointerEnabled ? {\r\n\t\tstart: 'pointerdown',\r\n\t\tmove: 'pointermove',\r\n\t\tend: 'pointerup'\r\n\t} : window.navigator.msPointerEnabled ? {\r\n\t\tstart: 'MSPointerDown',\r\n\t\tmove: 'MSPointerMove',\r\n\t\tend: 'MSPointerUp'\r\n\t} : {\r\n\t\tstart: 'mousedown touchstart',\r\n\t\tmove: 'mousemove touchmove',\r\n\t\tend: 'mouseup touchend'\r\n\t},\r\n\t// Re-usable list of classes;\r\n\t/** @const */\r\n\tClasses = [\r\n/*  0 */  'noUi-target'\r\n/*  1 */ ,'noUi-base'\r\n/*  2 */ ,'noUi-origin'\r\n/*  3 */ ,'noUi-handle'\r\n/*  4 */ ,'noUi-horizontal'\r\n/*  5 */ ,'noUi-vertical'\r\n/*  6 */ ,'noUi-background'\r\n/*  7 */ ,'noUi-connect'\r\n/*  8 */ ,'noUi-ltr'\r\n/*  9 */ ,'noUi-rtl'\r\n/* 10 */ ,'noUi-dragable'\r\n/* 11 */ ,''\r\n/* 12 */ ,'noUi-state-drag'\r\n/* 13 */ ,''\r\n/* 14 */ ,'noUi-state-tap'\r\n/* 15 */ ,'noUi-active'\r\n/* 16 */ ,''\r\n/* 17 */ ,'noUi-stacking'\r\n\t];\r\n\r\n\r\n// Value calculation\r\n\r\n\t// Determine the size of a sub-range in relation to a full range.\r\n\tfunction subRangeRatio ( pa, pb ) {\r\n\t\treturn (100 / (pb - pa));\r\n\t}\r\n\r\n\t// (percentage) How many percent is this value of this range?\r\n\tfunction fromPercentage ( range, value ) {\r\n\t\treturn (value * 100) / ( range[1] - range[0] );\r\n\t}\r\n\r\n\t// (percentage) Where is this value on this range?\r\n\tfunction toPercentage ( range, value ) {\r\n\t\treturn fromPercentage( range, range[0] < 0 ?\r\n\t\t\tvalue + Math.abs(range[0]) :\r\n\t\t\t\tvalue - range[0] );\r\n\t}\r\n\r\n\t// (value) How much is this percentage on this range?\r\n\tfunction isPercentage ( range, value ) {\r\n\t\treturn ((value * ( range[1] - range[0] )) / 100) + range[0];\r\n\t}\r\n\r\n\r\n// Range conversion\r\n\r\n\tfunction getJ ( value, arr ) {\r\n\r\n\t\tvar j = 1;\r\n\r\n\t\twhile ( value >= arr[j] ){\r\n\t\t\tj += 1;\r\n\t\t}\r\n\r\n\t\treturn j;\r\n\t}\r\n\r\n\t// (percentage) Input a value, find where, on a scale of 0-100, it applies.\r\n\tfunction toStepping ( xVal, xPct, value ) {\r\n\r\n\t\tif ( value >= xVal.slice(-1)[0] ){\r\n\t\t\treturn 100;\r\n\t\t}\r\n\r\n\t\tvar j = getJ( value, xVal ), va, vb, pa, pb;\r\n\r\n\t\tva = xVal[j-1];\r\n\t\tvb = xVal[j];\r\n\t\tpa = xPct[j-1];\r\n\t\tpb = xPct[j];\r\n\r\n\t\treturn pa + (toPercentage([va, vb], value) / subRangeRatio (pa, pb));\r\n\t}\r\n\r\n\t// (value) Input a percentage, find where it is on the specified range.\r\n\tfunction fromStepping ( xVal, xPct, value ) {\r\n\r\n\t\t// There is no range group that fits 100\r\n\t\tif ( value >= 100 ){\r\n\t\t\treturn xVal.slice(-1)[0];\r\n\t\t}\r\n\r\n\t\tvar j = getJ( value, xPct ), va, vb, pa, pb;\r\n\r\n\t\tva = xVal[j-1];\r\n\t\tvb = xVal[j];\r\n\t\tpa = xPct[j-1];\r\n\t\tpb = xPct[j];\r\n\r\n\t\treturn isPercentage([va, vb], (value - pa) * subRangeRatio (pa, pb));\r\n\t}\r\n\r\n\t// (percentage) Get the step that applies at a certain value.\r\n\tfunction getStep ( xPct, xSteps, snap, value ) {\r\n\r\n\t\tif ( value === 100 ) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tvar j = getJ( value, xPct ), a, b;\r\n\r\n\t\t// If 'snap' is set, steps are used as fixed points on the slider.\r\n\t\tif ( snap ) {\r\n\r\n\t\t\ta = xPct[j-1];\r\n\t\t\tb = xPct[j];\r\n\r\n\t\t\t// Find the closest position, a or b.\r\n\t\t\tif ((value - a) > ((b-a)/2)){\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\t\t}\r\n\r\n\t\tif ( !xSteps[j-1] ){\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\treturn xPct[j-1] + closest(\r\n\t\t\tvalue - xPct[j-1],\r\n\t\t\txSteps[j-1]\r\n\t\t);\r\n\t}\r\n\r\n\r\n// Entry parsing\r\n\r\n\tfunction handleEntryPoint ( index, value, that ) {\r\n\r\n\t\tvar percentage;\r\n\r\n\t\t// Wrap numerical input in an array.\r\n\t\tif ( typeof value === \"number\" ) {\r\n\t\t\tvalue = [value];\r\n\t\t}\r\n\r\n\t\t// Reject any invalid input, by testing whether value is an array.\r\n\t\tif ( Object.prototype.toString.call( value ) !== '[object Array]' ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'range' contains invalid value.\");\r\n\t\t}\r\n\r\n\t\t// Covert min/max syntax to 0 and 100.\r\n\t\tif ( index === 'min' ) {\r\n\t\t\tpercentage = 0;\r\n\t\t} else if ( index === 'max' ) {\r\n\t\t\tpercentage = 100;\r\n\t\t} else {\r\n\t\t\tpercentage = parseFloat( index );\r\n\t\t}\r\n\r\n\t\t// Check for correct input.\r\n\t\tif ( !isNumeric( percentage ) || !isNumeric( value[0] ) ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'range' value isn't numeric.\");\r\n\t\t}\r\n\r\n\t\t// Store values.\r\n\t\tthat.xPct.push( percentage );\r\n\t\tthat.xVal.push( value[0] );\r\n\r\n\t\t// NaN will evaluate to false too, but to keep\r\n\t\t// logging clear, set step explicitly. Make sure\r\n\t\t// not to override the 'step' setting with false.\r\n\t\tif ( !percentage ) {\r\n\t\t\tif ( !isNaN( value[1] ) ) {\r\n\t\t\t\tthat.xSteps[0] = value[1];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthat.xSteps.push( isNaN(value[1]) ? false : value[1] );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleStepPoint ( i, n, that ) {\r\n\r\n\t\t// Ignore 'false' stepping.\r\n\t\tif ( !n ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Factor to range ratio\r\n\t\tthat.xSteps[i] = fromPercentage([\r\n\t\t\t that.xVal[i]\r\n\t\t\t,that.xVal[i+1]\r\n\t\t], n) / subRangeRatio (\r\n\t\t\tthat.xPct[i],\r\n\t\t\tthat.xPct[i+1] );\r\n\t}\r\n\r\n\r\n// Interface\r\n\r\n\t// The interface to Spectrum handles all direction-based\r\n\t// conversions, so the above values are unaware.\r\n\r\n\tfunction Spectrum ( entry, snap, direction, singleStep ) {\r\n\r\n\t\tthis.xPct = [];\r\n\t\tthis.xVal = [];\r\n\t\tthis.xSteps = [ singleStep || false ];\r\n\t\tthis.xNumSteps = [ false ];\r\n\r\n\t\tthis.snap = snap;\r\n\t\tthis.direction = direction;\r\n\r\n\t\tvar index, ordered = [ /* [0, 'min'], [1, '50%'], [2, 'max'] */ ];\r\n\r\n\t\t// Map the object keys to an array.\r\n\t\tfor ( index in entry ) {\r\n\t\t\tif ( entry.hasOwnProperty(index) ) {\r\n\t\t\t\tordered.push([entry[index], index]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Sort all entries by value (numeric sort).\r\n\t\tordered.sort(function(a, b) { return a[0] - b[0]; });\r\n\r\n\t\t// Convert all entries to subranges.\r\n\t\tfor ( index = 0; index < ordered.length; index++ ) {\r\n\t\t\thandleEntryPoint(ordered[index][1], ordered[index][0], this);\r\n\t\t}\r\n\r\n\t\t// Store the actual step values.\r\n\t\t// xSteps is sorted in the same order as xPct and xVal.\r\n\t\tthis.xNumSteps = this.xSteps.slice(0);\r\n\r\n\t\t// Convert all numeric steps to the percentage of the subrange they represent.\r\n\t\tfor ( index = 0; index < this.xNumSteps.length; index++ ) {\r\n\t\t\thandleStepPoint(index, this.xNumSteps[index], this);\r\n\t\t}\r\n\t}\r\n\r\n\tSpectrum.prototype.getMargin = function ( value ) {\r\n\t\treturn this.xPct.length === 2 ? fromPercentage(this.xVal, value) : false;\r\n\t};\r\n\r\n\tSpectrum.prototype.toStepping = function ( value ) {\r\n\r\n\t\tvalue = toStepping( this.xVal, this.xPct, value );\r\n\r\n\t\t// Invert the value if this is a right-to-left slider.\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\tSpectrum.prototype.fromStepping = function ( value ) {\r\n\r\n\t\t// Invert the value if this is a right-to-left slider.\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\treturn accurateNumber(fromStepping( this.xVal, this.xPct, value ));\r\n\t};\r\n\r\n\tSpectrum.prototype.getStep = function ( value ) {\r\n\r\n\t\t// Find the proper step for rtl sliders by search in inverse direction.\r\n\t\t// Fixes issue #262.\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\tvalue = getStep(this.xPct, this.xSteps, this.snap, value );\r\n\r\n\t\tif ( this.direction ) {\r\n\t\t\tvalue = 100 - value;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\tSpectrum.prototype.getApplicableStep = function ( value ) {\r\n\r\n\t\t// If the value is 100%, return the negative step twice.\r\n\t\tvar j = getJ(value, this.xPct), offset = value === 100 ? 2 : 1;\r\n\t\treturn [this.xNumSteps[j-2], this.xVal[j-offset], this.xNumSteps[j-offset]];\r\n\t};\r\n\r\n\t// Outside testing\r\n\tSpectrum.prototype.convert = function ( value ) {\r\n\t\treturn this.getStep(this.toStepping(value));\r\n\t};\r\n\r\n/*\tEvery input option is tested and parsed. This'll prevent\r\n\tendless validation in internal methods. These tests are\r\n\tstructured with an item for every option available. An\r\n\toption can be marked as required by setting the 'r' flag.\r\n\tThe testing function is provided with three arguments:\r\n\t\t- The provided value for the option;\r\n\t\t- A reference to the options object;\r\n\t\t- The name for the option;\r\n\r\n\tThe testing function returns false when an error is detected,\r\n\tor true when everything is OK. It can also modify the option\r\n\tobject, to make sure all values can be correctly looped elsewhere. */\r\n\r\n\tvar defaultFormatter = { 'to': function( value ){\r\n\t\treturn value.toFixed(2);\r\n\t}, 'from': Number };\r\n\r\n\tfunction testStep ( parsed, entry ) {\r\n\r\n\t\tif ( !isNumeric( entry ) ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'step' is not numeric.\");\r\n\t\t}\r\n\r\n\t\t// The step option can still be used to set stepping\r\n\t\t// for linear sliders. Overwritten if set in 'range'.\r\n\t\tparsed.singleStep = entry;\r\n\t}\r\n\r\n\tfunction testRange ( parsed, entry ) {\r\n\r\n\t\t// Filter incorrect input.\r\n\t\tif ( typeof entry !== 'object' || Array.isArray(entry) ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'range' is not an object.\");\r\n\t\t}\r\n\r\n\t\t// Catch missing start or end.\r\n\t\tif ( entry.min === undefined || entry.max === undefined ) {\r\n\t\t\tthrow new Error(\"noUiSlider: Missing 'min' or 'max' in 'range'.\");\r\n\t\t}\r\n\r\n\t\tparsed.spectrum = new Spectrum(entry, parsed.snap, parsed.dir, parsed.singleStep);\r\n\t}\r\n\r\n\tfunction testStart ( parsed, entry ) {\r\n\r\n\t\tentry = asArray(entry);\r\n\r\n\t\t// Validate input. Values aren't tested, as the public .val method\r\n\t\t// will always provide a valid location.\r\n\t\tif ( !Array.isArray( entry ) || !entry.length || entry.length > 2 ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'start' option is incorrect.\");\r\n\t\t}\r\n\r\n\t\t// Store the number of handles.\r\n\t\tparsed.handles = entry.length;\r\n\r\n\t\t// When the slider is initialized, the .val method will\r\n\t\t// be called with the start options.\r\n\t\tparsed.start = entry;\r\n\t}\r\n\r\n\tfunction testSnap ( parsed, entry ) {\r\n\r\n\t\t// Enforce 100% stepping within subranges.\r\n\t\tparsed.snap = entry;\r\n\r\n\t\tif ( typeof entry !== 'boolean' ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'snap' option must be a boolean.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testAnimate ( parsed, entry ) {\r\n\r\n\t\t// Enforce 100% stepping within subranges.\r\n\t\tparsed.animate = entry;\r\n\r\n\t\tif ( typeof entry !== 'boolean' ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'animate' option must be a boolean.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testConnect ( parsed, entry ) {\r\n\r\n\t\tif ( entry === 'lower' && parsed.handles === 1 ) {\r\n\t\t\tparsed.connect = 1;\r\n\t\t} else if ( entry === 'upper' && parsed.handles === 1 ) {\r\n\t\t\tparsed.connect = 2;\r\n\t\t} else if ( entry === true && parsed.handles === 2 ) {\r\n\t\t\tparsed.connect = 3;\r\n\t\t} else if ( entry === false ) {\r\n\t\t\tparsed.connect = 0;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"noUiSlider: 'connect' option doesn't match handle count.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testOrientation ( parsed, entry ) {\r\n\r\n\t\t// Set orientation to an a numerical value for easy\r\n\t\t// array selection.\r\n\t\tswitch ( entry ){\r\n\t\t  case 'horizontal':\r\n\t\t\tparsed.ort = 0;\r\n\t\t\tbreak;\r\n\t\t  case 'vertical':\r\n\t\t\tparsed.ort = 1;\r\n\t\t\tbreak;\r\n\t\t  default:\r\n\t\t\tthrow new Error(\"noUiSlider: 'orientation' option is invalid.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testMargin ( parsed, entry ) {\r\n\r\n\t\tif ( !isNumeric(entry) ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'margin' option must be numeric.\");\r\n\t\t}\r\n\r\n\t\tparsed.margin = parsed.spectrum.getMargin(entry);\r\n\r\n\t\tif ( !parsed.margin ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'margin' option is only supported on linear sliders.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testLimit ( parsed, entry ) {\r\n\r\n\t\tif ( !isNumeric(entry) ){\r\n\t\t\tthrow new Error(\"noUiSlider: 'limit' option must be numeric.\");\r\n\t\t}\r\n\r\n\t\tparsed.limit = parsed.spectrum.getMargin(entry);\r\n\r\n\t\tif ( !parsed.limit ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'limit' option is only supported on linear sliders.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testDirection ( parsed, entry ) {\r\n\r\n\t\t// Set direction as a numerical value for easy parsing.\r\n\t\t// Invert connection for RTL sliders, so that the proper\r\n\t\t// handles get the connect/background classes.\r\n\t\tswitch ( entry ) {\r\n\t\t  case 'ltr':\r\n\t\t\tparsed.dir = 0;\r\n\t\t\tbreak;\r\n\t\t  case 'rtl':\r\n\t\t\tparsed.dir = 1;\r\n\t\t\tparsed.connect = [0,2,1,3][parsed.connect];\r\n\t\t\tbreak;\r\n\t\t  default:\r\n\t\t\tthrow new Error(\"noUiSlider: 'direction' option was not recognized.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction testBehaviour ( parsed, entry ) {\r\n\r\n\t\t// Make sure the input is a string.\r\n\t\tif ( typeof entry !== 'string' ) {\r\n\t\t\tthrow new Error(\"noUiSlider: 'behaviour' must be a string containing options.\");\r\n\t\t}\r\n\r\n\t\t// Check if the string contains any keywords.\r\n\t\t// None are required.\r\n\t\tvar tap = entry.indexOf('tap') >= 0,\r\n\t\t\tdrag = entry.indexOf('drag') >= 0,\r\n\t\t\tfixed = entry.indexOf('fixed') >= 0,\r\n\t\t\tsnap = entry.indexOf('snap') >= 0;\r\n\r\n\t\tparsed.events = {\r\n\t\t\ttap: tap || snap,\r\n\t\t\tdrag: drag,\r\n\t\t\tfixed: fixed,\r\n\t\t\tsnap: snap\r\n\t\t};\r\n\t}\r\n\r\n\tfunction testFormat ( parsed, entry ) {\r\n\r\n\t\tparsed.format = entry;\r\n\r\n\t\t// Any object with a to and from method is supported.\r\n\t\tif ( typeof entry.to === 'function' && typeof entry.from === 'function' ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tthrow new Error( \"noUiSlider: 'format' requires 'to' and 'from' methods.\");\r\n\t}\r\n\r\n\t// Test all developer settings and parse to assumption-safe values.\r\n\tfunction testOptions ( options ) {\r\n\r\n\t\tvar parsed = {\r\n\t\t\tmargin: 0,\r\n\t\t\tlimit: 0,\r\n\t\t\tanimate: true,\r\n\t\t\tformat: defaultFormatter\r\n\t\t}, tests;\r\n\r\n\t\t// Tests are executed in the order they are presented here.\r\n\t\ttests = {\r\n\t\t\t'step': { r: false, t: testStep },\r\n\t\t\t'start': { r: true, t: testStart },\r\n\t\t\t'connect': { r: true, t: testConnect },\r\n\t\t\t'direction': { r: true, t: testDirection },\r\n\t\t\t'snap': { r: false, t: testSnap },\r\n\t\t\t'animate': { r: false, t: testAnimate },\r\n\t\t\t'range': { r: true, t: testRange },\r\n\t\t\t'orientation': { r: false, t: testOrientation },\r\n\t\t\t'margin': { r: false, t: testMargin },\r\n\t\t\t'limit': { r: false, t: testLimit },\r\n\t\t\t'behaviour': { r: true, t: testBehaviour },\r\n\t\t\t'format': { r: false, t: testFormat }\r\n\t\t};\r\n\r\n\t\tvar defaults = {\r\n\t\t\t'connect': false,\r\n\t\t\t'direction': 'ltr',\r\n\t\t\t'behaviour': 'tap',\r\n\t\t\t'orientation': 'horizontal'\r\n\t\t};\r\n\r\n\t\t// Set defaults where applicable.\r\n\t\tObject.keys(defaults).forEach(function ( name ) {\r\n\t\t\tif ( options[name] === undefined ) {\r\n\t\t\t\toptions[name] = defaults[name];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Run all options through a testing mechanism to ensure correct\r\n\t\t// input. It should be noted that options might get modified to\r\n\t\t// be handled properly. E.g. wrapping integers in arrays.\r\n\t\tObject.keys(tests).forEach(function( name ){\r\n\r\n\t\t\tvar test = tests[name];\r\n\r\n\t\t\t// If the option isn't set, but it is required, throw an error.\r\n\t\t\tif ( options[name] === undefined ) {\r\n\r\n\t\t\t\tif ( test.r ) {\r\n\t\t\t\t\tthrow new Error(\"noUiSlider: '\" + name + \"' is required.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\ttest.t( parsed, options[name] );\r\n\t\t});\r\n\r\n\t\t// Forward pips options\r\n\t\tparsed.pips = options.pips;\r\n\r\n\t\t// Pre-define the styles.\r\n\t\tparsed.style = parsed.ort ? 'top' : 'left';\r\n\r\n\t\treturn parsed;\r\n\t}\r\n\r\n\r\n\t// Delimit proposed values for handle positions.\r\n\tfunction getPositions ( a, b, delimit ) {\r\n\r\n\t\t// Add movement to current position.\r\n\t\tvar c = a + b[0], d = a + b[1];\r\n\r\n\t\t// Only alter the other position on drag,\r\n\t\t// not on standard sliding.\r\n\t\tif ( delimit ) {\r\n\t\t\tif ( c < 0 ) {\r\n\t\t\t\td += Math.abs(c);\r\n\t\t\t}\r\n\t\t\tif ( d > 100 ) {\r\n\t\t\t\tc -= ( d - 100 );\r\n\t\t\t}\r\n\r\n\t\t\t// Limit values to 0 and 100.\r\n\t\t\treturn [limit(c), limit(d)];\r\n\t\t}\r\n\r\n\t\treturn [c,d];\r\n\t}\r\n\r\n\t// Provide a clean event with standardized offset values.\r\n\tfunction fixEvent ( e ) {\r\n\r\n\t\t// Prevent scrolling and panning on touch events, while\r\n\t\t// attempting to slide. The tap event also depends on this.\r\n\t\te.preventDefault();\r\n\r\n\t\t// Filter the event to register the type, which can be\r\n\t\t// touch, mouse or pointer. Offset changes need to be\r\n\t\t// made on an event specific basis.\r\n\t\tvar touch = e.type.indexOf('touch') === 0,\r\n\t\t\tmouse = e.type.indexOf('mouse') === 0,\r\n\t\t\tpointer = e.type.indexOf('pointer') === 0,\r\n\t\t\tx,y, event = e;\r\n\r\n\t\t// IE10 implemented pointer events with a prefix;\r\n\t\tif ( e.type.indexOf('MSPointer') === 0 ) {\r\n\t\t\tpointer = true;\r\n\t\t}\r\n\r\n\t\tif ( touch ) {\r\n\t\t\t// noUiSlider supports one movement at a time,\r\n\t\t\t// so we can select the first 'changedTouch'.\r\n\t\t\tx = e.changedTouches[0].pageX;\r\n\t\t\ty = e.changedTouches[0].pageY;\r\n\t\t}\r\n\r\n\t\tif ( mouse || pointer ) {\r\n\t\t\tx = e.clientX + window.pageXOffset;\r\n\t\t\ty = e.clientY + window.pageYOffset;\r\n\t\t}\r\n\r\n\t\tevent.points = [x, y];\r\n\t\tevent.cursor = mouse || pointer; // Fix #435\r\n\r\n\t\treturn event;\r\n\t}\r\n\r\n\t// Append a handle to the base.\r\n\tfunction addHandle ( direction, index ) {\r\n\r\n\t\tvar origin = document.createElement('div'),\r\n\t\t\thandle = document.createElement('div'),\r\n\t\t\tadditions = [ '-lower', '-upper' ];\r\n\r\n\t\tif ( direction ) {\r\n\t\t\tadditions.reverse();\r\n\t\t}\r\n\r\n\t\taddClass(handle, Classes[3]);\r\n\t\taddClass(handle, Classes[3] + additions[index]);\r\n\r\n\t\taddClass(origin, Classes[2]);\r\n\t\torigin.appendChild(handle);\r\n\r\n\t\treturn origin;\r\n\t}\r\n\r\n\t// Add the proper connection classes.\r\n\tfunction addConnection ( connect, target, handles ) {\r\n\r\n\t\t// Apply the required connection classes to the elements\r\n\t\t// that need them. Some classes are made up for several\r\n\t\t// segments listed in the class list, to allow easy\r\n\t\t// renaming and provide a minor compression benefit.\r\n\t\tswitch ( connect ) {\r\n\t\t\tcase 1:\taddClass(target, Classes[7]);\r\n\t\t\t\t\taddClass(handles[0], Classes[6]);\r\n\t\t\t\t\tbreak;\r\n\t\t\tcase 3: addClass(handles[1], Classes[6]);\r\n\t\t\t\t\t/* falls through */\r\n\t\t\tcase 2: addClass(handles[0], Classes[7]);\r\n\t\t\t\t\t/* falls through */\r\n\t\t\tcase 0: addClass(target, Classes[6]);\r\n\t\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// Add handles to the slider base.\r\n\tfunction addHandles ( nrHandles, direction, base ) {\r\n\r\n\t\tvar index, handles = [];\r\n\r\n\t\t// Append handles.\r\n\t\tfor ( index = 0; index < nrHandles; index += 1 ) {\r\n\r\n\t\t\t// Keep a list of all added handles.\r\n\t\t\thandles.push( base.appendChild(addHandle( direction, index )) );\r\n\t\t}\r\n\r\n\t\treturn handles;\r\n\t}\r\n\r\n\t// Initialize a single slider.\r\n\tfunction addSlider ( direction, orientation, target ) {\r\n\r\n\t\t// Apply classes and data to the target.\r\n\t\taddClass(target, Classes[0]);\r\n\t\taddClass(target, Classes[8 + direction]);\r\n\t\taddClass(target, Classes[4 + orientation]);\r\n\r\n\t\tvar div = document.createElement('div');\r\n\t\taddClass(div, Classes[1]);\r\n\t\ttarget.appendChild(div);\r\n\t\treturn div;\r\n\t}\r\n\r\n\r\nfunction closure ( target, options ){\r\n\r\n\t// All variables local to 'closure' are prefixed with 'scope_'\r\n\tvar scope_Target = target,\r\n\t\tscope_Locations = [-1, -1],\r\n\t\tscope_Base,\r\n\t\tscope_Handles,\r\n\t\tscope_Spectrum = options.spectrum,\r\n\t\tscope_Values = [],\r\n\t\tscope_Events = {};\r\n\r\n\r\n\tfunction getGroup ( mode, values, stepped ) {\r\n\r\n\t\t// Use the range.\r\n\t\tif ( mode === 'range' || mode === 'steps' ) {\r\n\t\t\treturn scope_Spectrum.xVal;\r\n\t\t}\r\n\r\n\t\tif ( mode === 'count' ) {\r\n\r\n\t\t\t// Divide 0 - 100 in 'count' parts.\r\n\t\t\tvar spread = ( 100 / (values-1) ), v, i = 0;\r\n\t\t\tvalues = [];\r\n\r\n\t\t\t// List these parts and have them handled as 'positions'.\r\n\t\t\twhile ((v=i++*spread) <= 100 ) {\r\n\t\t\t\tvalues.push(v);\r\n\t\t\t}\r\n\r\n\t\t\tmode = 'positions';\r\n\t\t}\r\n\r\n\t\tif ( mode === 'positions' ) {\r\n\r\n\t\t\t// Map all percentages to on-range values.\r\n\t\t\treturn values.map(function( value ){\r\n\t\t\t\treturn scope_Spectrum.fromStepping( stepped ? scope_Spectrum.getStep( value ) : value );\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif ( mode === 'values' ) {\r\n\r\n\t\t\t// If the value must be stepped, it needs to be converted to a percentage first.\r\n\t\t\tif ( stepped ) {\r\n\r\n\t\t\t\treturn values.map(function( value ){\r\n\r\n\t\t\t\t\t// Convert to percentage, apply step, return to value.\r\n\t\t\t\t\treturn scope_Spectrum.fromStepping( scope_Spectrum.getStep( scope_Spectrum.toStepping( value ) ) );\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise, we can simply use the values.\r\n\t\t\treturn values;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction generateSpread ( density, mode, group ) {\r\n\r\n\t\tvar originalSpectrumDirection = scope_Spectrum.direction,\r\n\t\t\tindexes = {},\r\n\t\t\tfirstInRange = scope_Spectrum.xVal[0],\r\n\t\t\tlastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length-1],\r\n\t\t\tignoreFirst = false,\r\n\t\t\tignoreLast = false,\r\n\t\t\tprevPct = 0;\r\n\r\n\t\t// This function loops the spectrum in an ltr linear fashion,\r\n\t\t// while the toStepping method is direction aware. Trick it into\r\n\t\t// believing it is ltr.\r\n\t\tscope_Spectrum.direction = 0;\r\n\r\n\t\t// Create a copy of the group, sort it and filter away all duplicates.\r\n\t\tgroup = unique(group.slice().sort(function(a, b){ return a - b; }));\r\n\r\n\t\t// Make sure the range starts with the first element.\r\n\t\tif ( group[0] !== firstInRange ) {\r\n\t\t\tgroup.unshift(firstInRange);\r\n\t\t\tignoreFirst = true;\r\n\t\t}\r\n\r\n\t\t// Likewise for the last one.\r\n\t\tif ( group[group.length - 1] !== lastInRange ) {\r\n\t\t\tgroup.push(lastInRange);\r\n\t\t\tignoreLast = true;\r\n\t\t}\r\n\r\n\t\tgroup.forEach(function ( current, index ) {\r\n\r\n\t\t\t// Get the current step and the lower + upper positions.\r\n\t\t\tvar step, i, q,\r\n\t\t\t\tlow = current,\r\n\t\t\t\thigh = group[index+1],\r\n\t\t\t\tnewPct, pctDifference, pctPos, type,\r\n\t\t\t\tsteps, realSteps, stepsize;\r\n\r\n\t\t\t// When using 'steps' mode, use the provided steps.\r\n\t\t\t// Otherwise, we'll step on to the next subrange.\r\n\t\t\tif ( mode === 'steps' ) {\r\n\t\t\t\tstep = scope_Spectrum.xNumSteps[ index ];\r\n\t\t\t}\r\n\r\n\t\t\t// Default to a 'full' step.\r\n\t\t\tif ( !step ) {\r\n\t\t\t\tstep = high-low;\r\n\t\t\t}\r\n\r\n\t\t\t// Low can be 0, so test for false. If high is undefined,\r\n\t\t\t// we are at the last subrange. Index 0 is already handled.\r\n\t\t\tif ( low === false || high === undefined ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Find all steps in the subrange.\r\n\t\t\tfor ( i = low; i <= high; i += step ) {\r\n\r\n\t\t\t\t// Get the percentage value for the current step,\r\n\t\t\t\t// calculate the size for the subrange.\r\n\t\t\t\tnewPct = scope_Spectrum.toStepping( i );\r\n\t\t\t\tpctDifference = newPct - prevPct;\r\n\r\n\t\t\t\tsteps = pctDifference / density;\r\n\t\t\t\trealSteps = Math.round(steps);\r\n\r\n\t\t\t\t// This ratio represents the ammount of percentage-space a point indicates.\r\n\t\t\t\t// For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-devided.\r\n\t\t\t\t// Round the percentage offset to an even number, then divide by two\r\n\t\t\t\t// to spread the offset on both sides of the range.\r\n\t\t\t\tstepsize = pctDifference/realSteps;\r\n\r\n\t\t\t\t// Divide all points evenly, adding the correct number to this subrange.\r\n\t\t\t\t// Run up to <= so that 100% gets a point, event if ignoreLast is set.\r\n\t\t\t\tfor ( q = 1; q <= realSteps; q += 1 ) {\r\n\r\n\t\t\t\t\t// The ratio between the rounded value and the actual size might be ~1% off.\r\n\t\t\t\t\t// Correct the percentage offset by the number of points\r\n\t\t\t\t\t// per subrange. density = 1 will result in 100 points on the\r\n\t\t\t\t\t// full range, 2 for 50, 4 for 25, etc.\r\n\t\t\t\t\tpctPos = prevPct + ( q * stepsize );\r\n\t\t\t\t\tindexes[pctPos.toFixed(5)] = ['x', 0];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Determine the point type.\r\n\t\t\t\ttype = (group.indexOf(i) > -1) ? 1 : ( mode === 'steps' ? 2 : 0 );\r\n\r\n\t\t\t\t// Enforce the 'ignoreFirst' option by overwriting the type for 0.\r\n\t\t\t\tif ( !index && ignoreFirst ) {\r\n\t\t\t\t\ttype = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !(i === high && ignoreLast)) {\r\n\t\t\t\t\t// Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.\r\n\t\t\t\t\tindexes[newPct.toFixed(5)] = [i, type];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update the percentage count.\r\n\t\t\t\tprevPct = newPct;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Reset the spectrum.\r\n\t\tscope_Spectrum.direction = originalSpectrumDirection;\r\n\r\n\t\treturn indexes;\r\n\t}\r\n\r\n\tfunction addMarking ( spread, filterFunc, formatter ) {\r\n\r\n\t\tvar style = ['horizontal', 'vertical'][options.ort],\r\n\t\t\telement = document.createElement('div');\r\n\r\n\t\taddClass(element, 'noUi-pips');\r\n\t\taddClass(element, 'noUi-pips-' + style);\r\n\r\n\t\tfunction getSize( type ){\r\n\t\t\treturn [ '-normal', '-large', '-sub' ][type];\r\n\t\t}\r\n\r\n\t\tfunction getTags( offset, source, values ) {\r\n\t\t\treturn 'class=\"' + source + ' ' +\r\n\t\t\t\tsource + '-' + style + ' ' +\r\n\t\t\t\tsource + getSize(values[1]) +\r\n\t\t\t\t'\" style=\"' + options.style + ': ' + offset + '%\"';\r\n\t\t}\r\n\r\n\t\tfunction addSpread ( offset, values ){\r\n\r\n\t\t\tif ( scope_Spectrum.direction ) {\r\n\t\t\t\toffset = 100 - offset;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply the filter function, if it is set.\r\n\t\t\tvalues[1] = (values[1] && filterFunc) ? filterFunc(values[0], values[1]) : values[1];\r\n\r\n\t\t\t// Add a marker for every point\r\n\t\t\telement.innerHTML += '<div ' + getTags(offset, 'noUi-marker', values) + '></div>';\r\n\r\n\t\t\t// Values are only appended for points marked '1' or '2'.\r\n\t\t\tif ( values[1] ) {\r\n\t\t\t\telement.innerHTML += '<div '+getTags(offset, 'noUi-value', values)+'>' + formatter.to(values[0]) + '</div>';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Append all points.\r\n\t\tObject.keys(spread).forEach(function(a){\r\n\t\t\taddSpread(a, spread[a]);\r\n\t\t});\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tfunction pips ( grid ) {\r\n\r\n\tvar mode = grid.mode,\r\n\t\tdensity = grid.density || 1,\r\n\t\tfilter = grid.filter || false,\r\n\t\tvalues = grid.values || false,\r\n\t\tstepped = grid.stepped || false,\r\n\t\tgroup = getGroup( mode, values, stepped ),\r\n\t\tspread = generateSpread( density, mode, group ),\r\n\t\tformat = grid.format || {\r\n\t\t\tto: Math.round\r\n\t\t};\r\n\r\n\t\treturn scope_Target.appendChild(addMarking(\r\n\t\t\tspread,\r\n\t\t\tfilter,\r\n\t\t\tformat\r\n\t\t));\r\n\t}\r\n\r\n\r\n\t// Shorthand for base dimensions.\r\n\tfunction baseSize ( ) {\r\n\t\treturn scope_Base['offset' + ['Width', 'Height'][options.ort]];\r\n\t}\r\n\r\n\t// External event handling\r\n\tfunction fireEvent ( event, handleNumber ) {\r\n\r\n\t\tif ( handleNumber !== undefined ) {\r\n\t\t\thandleNumber = Math.abs(handleNumber - options.dir);\r\n\t\t}\r\n\r\n\t\tObject.keys(scope_Events).forEach(function( targetEvent ) {\r\n\r\n\t\t\tvar eventType = targetEvent.split('.')[0];\r\n\r\n\t\t\tif ( event === eventType ) {\r\n\t\t\t\tscope_Events[targetEvent].forEach(function( callback ) {\r\n\t\t\t\t\t// .reverse is in place\r\n\t\t\t\t\t// Return values as array, so arg_1[arg_2] is always valid.\r\n\t\t\t\t\tcallback( asArray(valueGet()), handleNumber, inSliderOrder(Array.prototype.slice.call(scope_Values)) );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Returns the input array, respecting the slider direction configuration.\r\n\tfunction inSliderOrder ( values ) {\r\n\r\n\t\t// If only one handle is used, return a single value.\r\n\t\tif ( values.length === 1 ){\r\n\t\t\treturn values[0];\r\n\t\t}\r\n\r\n\t\tif ( options.dir ) {\r\n\t\t\treturn values.reverse();\r\n\t\t}\r\n\r\n\t\treturn values;\r\n\t}\r\n\r\n\r\n\t// Handler for attaching events trough a proxy.\r\n\tfunction attach ( events, element, callback, data ) {\r\n\r\n\t\t// This function can be used to 'filter' events to the slider.\r\n\t\t// element is a node, not a nodeList\r\n\r\n\t\tvar method = function ( e ){\r\n\r\n\t\t\tif ( scope_Target.hasAttribute('disabled') ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Stop if an active 'tap' transition is taking place.\r\n\t\t\tif ( hasClass(scope_Target, Classes[14]) ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\te = fixEvent(e);\r\n\r\n\t\t\t// Ignore right or middle clicks on start #454\r\n\t\t\tif ( events === actions.start && e.buttons !== undefined && e.buttons > 1 ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\te.calcPoint = e.points[ options.ort ];\r\n\r\n\t\t\t// Call the event handler with the event [ and additional data ].\r\n\t\t\tcallback ( e, data );\r\n\r\n\t\t}, methods = [];\r\n\r\n\t\t// Bind a closure on the target for every event type.\r\n\t\tevents.split(' ').forEach(function( eventName ){\r\n\t\t\telement.addEventListener(eventName, method, false);\r\n\t\t\tmethods.push([eventName, method]);\r\n\t\t});\r\n\r\n\t\treturn methods;\r\n\t}\r\n\r\n\t// Handle movement on document for handle and range drag.\r\n\tfunction move ( event, data ) {\r\n\r\n\t\tvar handles = data.handles || scope_Handles, positions, state = false,\r\n\t\t\tproposal = ((event.calcPoint - data.start) * 100) / baseSize(),\r\n\t\t\thandleNumber = handles[0] === scope_Handles[0] ? 0 : 1, i;\r\n\r\n\t\t// Calculate relative positions for the handles.\r\n\t\tpositions = getPositions( proposal, data.positions, handles.length > 1);\r\n\r\n\t\tstate = setHandle ( handles[0], positions[handleNumber], handles.length === 1 );\r\n\r\n\t\tif ( handles.length > 1 ) {\r\n\r\n\t\t\tstate = setHandle ( handles[1], positions[handleNumber?0:1], false ) || state;\r\n\r\n\t\t\tif ( state ) {\r\n\t\t\t\t// fire for both handles\r\n\t\t\t\tfor ( i = 0; i < data.handles.length; i++ ) {\r\n\t\t\t\t\tfireEvent('slide', i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if ( state ) {\r\n\t\t\t// Fire for a single handle\r\n\t\t\tfireEvent('slide', handleNumber);\r\n\t\t}\r\n\t}\r\n\r\n\t// Unbind move events on document, call callbacks.\r\n\tfunction end ( event, data ) {\r\n\r\n\t\t// The handle is no longer active, so remove the class.\r\n\t\tvar active = scope_Base.getElementsByClassName(Classes[15]),\r\n\t\t\thandleNumber = data.handles[0] === scope_Handles[0] ? 0 : 1;\r\n\r\n\t\tif ( active.length ) {\r\n\t\t\tremoveClass(active[0], Classes[15]);\r\n\t\t}\r\n\r\n\t\t// Remove cursor styles and text-selection events bound to the body.\r\n\t\tif ( event.cursor ) {\r\n\t\t\tdocument.body.style.cursor = '';\r\n\t\t\tdocument.body.removeEventListener('selectstart', document.body.noUiListener);\r\n\t\t}\r\n\r\n\t\tvar d = document.documentElement;\r\n\r\n\t\t// Unbind the move and end events, which are added on 'start'.\r\n\t\td.noUiListeners.forEach(function( c ) {\r\n\t\t\td.removeEventListener(c[0], c[1]);\r\n\t\t});\r\n\r\n\t\t// Remove dragging class.\r\n\t\tremoveClass(scope_Target, Classes[12]);\r\n\r\n\t\t// Fire the change and set events.\r\n\t\tfireEvent('set', handleNumber);\r\n\t\tfireEvent('change', handleNumber);\r\n\t}\r\n\r\n\t// Bind move events on document.\r\n\tfunction start ( event, data ) {\r\n\r\n\t\tvar d = document.documentElement;\r\n\r\n\t\t// Mark the handle as 'active' so it can be styled.\r\n\t\tif ( data.handles.length === 1 ) {\r\n\t\t\taddClass(data.handles[0].children[0], Classes[15]);\r\n\r\n\t\t\t// Support 'disabled' handles\r\n\t\t\tif ( data.handles[0].hasAttribute('disabled') ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// A drag should never propagate up to the 'tap' event.\r\n\t\tevent.stopPropagation();\r\n\r\n\t\t// Attach the move and end events.\r\n\t\tvar moveEvent = attach(actions.move, d, move, {\r\n\t\t\tstart: event.calcPoint,\r\n\t\t\thandles: data.handles,\r\n\t\t\tpositions: [\r\n\t\t\t\tscope_Locations[0],\r\n\t\t\t\tscope_Locations[scope_Handles.length - 1]\r\n\t\t\t]\r\n\t\t}), endEvent = attach(actions.end, d, end, {\r\n\t\t\thandles: data.handles\r\n\t\t});\r\n\r\n\t\td.noUiListeners = moveEvent.concat(endEvent);\r\n\r\n\t\t// Text selection isn't an issue on touch devices,\r\n\t\t// so adding cursor styles can be skipped.\r\n\t\tif ( event.cursor ) {\r\n\r\n\t\t\t// Prevent the 'I' cursor and extend the range-drag cursor.\r\n\t\t\tdocument.body.style.cursor = getComputedStyle(event.target).cursor;\r\n\r\n\t\t\t// Mark the target with a dragging state.\r\n\t\t\tif ( scope_Handles.length > 1 ) {\r\n\t\t\t\taddClass(scope_Target, Classes[12]);\r\n\t\t\t}\r\n\r\n\t\t\tvar f = function(){\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\r\n\t\t\tdocument.body.noUiListener = f;\r\n\r\n\t\t\t// Prevent text selection when dragging the handles.\r\n\t\t\tdocument.body.addEventListener('selectstart', f, false);\r\n\t\t}\r\n\t}\r\n\r\n\t// Move closest handle to tapped location.\r\n\tfunction tap ( event ) {\r\n\r\n\t\tvar location = event.calcPoint, total = 0, handleNumber, to;\r\n\r\n\t\t// The tap event shouldn't propagate up and cause 'edge' to run.\r\n\t\tevent.stopPropagation();\r\n\r\n\t\t// Add up the handle offsets.\r\n\t\tscope_Handles.forEach(function(a){\r\n\t\t\ttotal += offset(a)[ options.style ];\r\n\t\t});\r\n\r\n\t\t// Find the handle closest to the tapped position.\r\n\t\thandleNumber = ( location < total/2 || scope_Handles.length === 1 ) ? 0 : 1;\r\n\r\n\t\tlocation -= offset(scope_Base)[ options.style ];\r\n\r\n\t\t// Calculate the new position.\r\n\t\tto = ( location * 100 ) / baseSize();\r\n\r\n\t\tif ( !options.events.snap ) {\r\n\t\t\t// Flag the slider as it is now in a transitional state.\r\n\t\t\t// Transition takes 300 ms, so re-enable the slider afterwards.\r\n\t\t\taddClassFor( scope_Target, Classes[14], 300 );\r\n\t\t}\r\n\r\n\t\t// Support 'disabled' handles\r\n\t\tif ( scope_Handles[handleNumber].hasAttribute('disabled') ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Find the closest handle and calculate the tapped point.\r\n\t\t// The set handle to the new position.\r\n\t\tsetHandle( scope_Handles[handleNumber], to );\r\n\r\n\t\tfireEvent('slide', handleNumber);\r\n\t\tfireEvent('set', handleNumber);\r\n\t\tfireEvent('change', handleNumber);\r\n\r\n\t\tif ( options.events.snap ) {\r\n\t\t\tstart(event, { handles: [scope_Handles[total]] });\r\n\t\t}\r\n\t}\r\n\r\n\t// Attach events to several slider parts.\r\n\tfunction events ( behaviour ) {\r\n\r\n\t\tvar i, drag;\r\n\r\n\t\t// Attach the standard drag event to the handles.\r\n\t\tif ( !behaviour.fixed ) {\r\n\r\n\t\t\tfor ( i = 0; i < scope_Handles.length; i += 1 ) {\r\n\r\n\t\t\t\t// These events are only bound to the visual handle\r\n\t\t\t\t// element, not the 'real' origin element.\r\n\t\t\t\tattach ( actions.start, scope_Handles[i].children[0], start, {\r\n\t\t\t\t\thandles: [ scope_Handles[i] ]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Attach the tap event to the slider base.\r\n\t\tif ( behaviour.tap ) {\r\n\r\n\t\t\tattach ( actions.start, scope_Base, tap, {\r\n\t\t\t\thandles: scope_Handles\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Make the range dragable.\r\n\t\tif ( behaviour.drag ){\r\n\r\n\t\t\tdrag = [scope_Base.getElementsByClassName( Classes[7] )[0]];\r\n\t\t\taddClass(drag[0], Classes[10]);\r\n\r\n\t\t\t// When the range is fixed, the entire range can\r\n\t\t\t// be dragged by the handles. The handle in the first\r\n\t\t\t// origin will propagate the start event upward,\r\n\t\t\t// but it needs to be bound manually on the other.\r\n\t\t\tif ( behaviour.fixed ) {\r\n\t\t\t\tdrag.push(scope_Handles[(drag[0] === scope_Handles[0] ? 1 : 0)].children[0]);\r\n\t\t\t}\r\n\r\n\t\t\tdrag.forEach(function( element ) {\r\n\t\t\t\tattach ( actions.start, element, start, {\r\n\t\t\t\t\thandles: scope_Handles\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Test suggested values and apply margin, step.\r\n\tfunction setHandle ( handle, to, noLimitOption ) {\r\n\r\n\t\tvar trigger = handle !== scope_Handles[0] ? 1 : 0,\r\n\t\t\tlowerMargin = scope_Locations[0] + options.margin,\r\n\t\t\tupperMargin = scope_Locations[1] - options.margin,\r\n\t\t\tlowerLimit = scope_Locations[0] + options.limit,\r\n\t\t\tupperLimit = scope_Locations[1] - options.limit;\r\n\r\n\t\t// For sliders with multiple handles,\r\n\t\t// limit movement to the other handle.\r\n\t\t// Apply the margin option by adding it to the handle positions.\r\n\t\tif ( scope_Handles.length > 1 ) {\r\n\t\t\tto = trigger ? Math.max( to, lowerMargin ) : Math.min( to, upperMargin );\r\n\t\t}\r\n\r\n\t\t// The limit option has the opposite effect, limiting handles to a\r\n\t\t// maximum distance from another. Limit must be > 0, as otherwise\r\n\t\t// handles would be unmoveable. 'noLimitOption' is set to 'false'\r\n\t\t// for the .val() method, except for pass 4/4.\r\n\t\tif ( noLimitOption !== false && options.limit && scope_Handles.length > 1 ) {\r\n\t\t\tto = trigger ? Math.min ( to, lowerLimit ) : Math.max( to, upperLimit );\r\n\t\t}\r\n\r\n\t\t// Handle the step option.\r\n\t\tto = scope_Spectrum.getStep( to );\r\n\r\n\t\t// Limit to 0/100 for .val input, trim anything beyond 7 digits, as\r\n\t\t// JavaScript has some issues in its floating point implementation.\r\n\t\tto = limit(parseFloat(to.toFixed(7)));\r\n\r\n\t\t// Return false if handle can't move.\r\n\t\tif ( to === scope_Locations[trigger] ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Set the handle to the new position.\r\n\t\thandle.style[options.style] = to + '%';\r\n\r\n\t\t// Force proper handle stacking\r\n\t\tif ( !handle.previousSibling ) {\r\n\t\t\tremoveClass(handle, Classes[17]);\r\n\t\t\tif ( to > 50 ) {\r\n\t\t\t\taddClass(handle, Classes[17]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Update locations.\r\n\t\tscope_Locations[trigger] = to;\r\n\r\n\t\t// Convert the value to the slider stepping/range.\r\n\t\tscope_Values[trigger] = scope_Spectrum.fromStepping( to );\r\n\r\n\t\tfireEvent('update', trigger);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Loop values from value method and apply them.\r\n\tfunction setValues ( count, values ) {\r\n\r\n\t\tvar i, trigger, to;\r\n\r\n\t\t// With the limit option, we'll need another limiting pass.\r\n\t\tif ( options.limit ) {\r\n\t\t\tcount += 1;\r\n\t\t}\r\n\r\n\t\t// If there are multiple handles to be set run the setting\r\n\t\t// mechanism twice for the first handle, to make sure it\r\n\t\t// can be bounced of the second one properly.\r\n\t\tfor ( i = 0; i < count; i += 1 ) {\r\n\r\n\t\t\ttrigger = i%2;\r\n\r\n\t\t\t// Get the current argument from the array.\r\n\t\t\tto = values[trigger];\r\n\r\n\t\t\t// Setting with null indicates an 'ignore'.\r\n\t\t\t// Inputting 'false' is invalid.\r\n\t\t\tif ( to !== null && to !== false ) {\r\n\r\n\t\t\t\t// If a formatted number was passed, attemt to decode it.\r\n\t\t\t\tif ( typeof to === 'number' ) {\r\n\t\t\t\t\tto = String(to);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tto = options.format.from( to );\r\n\r\n\t\t\t\t// Request an update for all links if the value was invalid.\r\n\t\t\t\t// Do so too if setting the handle fails.\r\n\t\t\t\tif ( to === false || isNaN(to) || setHandle( scope_Handles[trigger], scope_Spectrum.toStepping( to ), i === (3 - options.dir) ) === false ) {\r\n\t\t\t\t\tfireEvent('update', trigger);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Set the slider value.\r\n\tfunction valueSet ( input ) {\r\n\r\n\t\tvar count, values = asArray( input ), i;\r\n\r\n\t\t// The RTL settings is implemented by reversing the front-end,\r\n\t\t// internal mechanisms are the same.\r\n\t\tif ( options.dir && options.handles > 1 ) {\r\n\t\t\tvalues.reverse();\r\n\t\t}\r\n\r\n\t\t// Animation is optional.\r\n\t\t// Make sure the initial values where set before using animated placement.\r\n\t\tif ( options.animate && scope_Locations[0] !== -1 ) {\r\n\t\t\taddClassFor( scope_Target, Classes[14], 300 );\r\n\t\t}\r\n\r\n\t\t// Determine how often to set the handles.\r\n\t\tcount = scope_Handles.length > 1 ? 3 : 1;\r\n\r\n\t\tif ( values.length === 1 ) {\r\n\t\t\tcount = 1;\r\n\t\t}\r\n\r\n\t\tsetValues ( count, values );\r\n\r\n\t\t// Fire the 'set' event for both handles.\r\n\t\tfor ( i = 0; i < scope_Handles.length; i++ ) {\r\n\t\t\tfireEvent('set', i);\r\n\t\t}\r\n\t}\r\n\r\n\t// Get the slider value.\r\n\tfunction valueGet ( ) {\r\n\r\n\t\tvar i, retour = [];\r\n\r\n\t\t// Get the value from all handles.\r\n\t\tfor ( i = 0; i < options.handles; i += 1 ){\r\n\t\t\tretour[i] = options.format.to( scope_Values[i] );\r\n\t\t}\r\n\r\n\t\treturn inSliderOrder( retour );\r\n\t}\r\n\r\n\t// Removes classes from the root and empties it.\r\n\tfunction destroy ( ) {\r\n\t\tClasses.forEach(function(cls){\r\n\t\t\tif ( !cls ) { return; } // Ignore empty classes\r\n\t\t\tremoveClass(scope_Target, cls);\r\n\t\t});\r\n\t\tscope_Target.innerHTML = '';\r\n\t\tdelete scope_Target.noUiSlider;\r\n\t}\r\n\r\n\t// Get the current step size for the slider.\r\n\tfunction getCurrentStep ( ) {\r\n\r\n\t\t// Check all locations, map them to their stepping point.\r\n\t\t// Get the step point, then find it in the input list.\r\n\t\tvar retour = scope_Locations.map(function( location, index ){\r\n\r\n\t\t\tvar step = scope_Spectrum.getApplicableStep( location ),\r\n\r\n\t\t\t\t// As per #391, the comparison for the decrement step can have some rounding issues.\r\n\t\t\t\t// Round the value to the precision used in the step.\r\n\t\t\t\tstepDecimals = countDecimals(String(step[2])),\r\n\r\n\t\t\t\t// Get the current numeric value\r\n\t\t\t\tvalue = scope_Values[index],\r\n\r\n\t\t\t\t// To move the slider 'one step up', the current step value needs to be added.\r\n\t\t\t\t// Use null if we are at the maximum slider value.\r\n\t\t\t\tincrement = location === 100 ? null : step[2],\r\n\r\n\t\t\t\t// Going 'one step down' might put the slider in a different sub-range, so we\r\n\t\t\t\t// need to switch between the current or the previous step.\r\n\t\t\t\tprev = Number((value - step[2]).toFixed(stepDecimals)),\r\n\r\n\t\t\t\t// If the value fits the step, return the current step value. Otherwise, use the\r\n\t\t\t\t// previous step. Return null if the slider is at its minimum value.\r\n\t\t\t\tdecrement = location === 0 ? null : (prev >= step[1]) ? step[2] : (step[0] || false);\r\n\r\n\t\t\treturn [decrement, increment];\r\n\t\t});\r\n\r\n\t\t// Return values in the proper order.\r\n\t\treturn inSliderOrder( retour );\r\n\t}\r\n\r\n\t// Attach an event to this slider, possibly including a namespace\r\n\tfunction bindEvent ( namespacedEvent, callback ) {\r\n\t\tscope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];\r\n\t\tscope_Events[namespacedEvent].push(callback);\r\n\r\n\t\t// If the event bound is 'update,' fire it immediately for all handles.\r\n\t\tif ( namespacedEvent.split('.')[0] === 'update' ) {\r\n\t\t\tscope_Handles.forEach(function(a, index){\r\n\t\t\t\tfireEvent('update', index);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// Undo attachment of event\r\n\tfunction removeEvent ( namespacedEvent ) {\r\n\r\n\t\tvar event = namespacedEvent.split('.')[0],\r\n\t\t\tnamespace = namespacedEvent.substring(event.length);\r\n\r\n\t\tObject.keys(scope_Events).forEach(function( bind ){\r\n\r\n\t\t\tvar tEvent = bind.split('.')[0],\r\n\t\t\t\ttNamespace = bind.substring(tEvent.length);\r\n\r\n\t\t\tif ( (!event || event === tEvent) && (!namespace || namespace === tNamespace) ) {\r\n\t\t\t\tdelete scope_Events[bind];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// Throw an error if the slider was already initialized.\r\n\tif ( scope_Target.noUiSlider ) {\r\n\t\tthrow new Error('Slider was already initialized.');\r\n\t}\r\n\r\n\r\n\t// Create the base element, initialise HTML and set classes.\r\n\t// Add handles and links.\r\n\tscope_Base = addSlider( options.dir, options.ort, scope_Target );\r\n\tscope_Handles = addHandles( options.handles, options.dir, scope_Base );\r\n\r\n\t// Set the connect classes.\r\n\taddConnection ( options.connect, scope_Target, scope_Handles );\r\n\r\n\t// Attach user events.\r\n\tevents( options.events );\r\n\r\n\tif ( options.pips ) {\r\n\t\tpips(options.pips);\r\n\t}\r\n\r\n\treturn {\r\n\t\tdestroy: destroy,\r\n\t\tsteps: getCurrentStep,\r\n\t\ton: bindEvent,\r\n\t\toff: removeEvent,\r\n\t\tget: valueGet,\r\n\t\tset: valueSet\r\n\t};\r\n\r\n}\r\n\r\n\r\n\t// Run the standard initializer\r\n\tfunction initialize ( target, originalOptions ) {\r\n\r\n\t\tif ( !target.nodeName ) {\r\n\t\t\tthrow new Error('noUiSlider.create requires a single element.');\r\n\t\t}\r\n\r\n\t\t// Test the options and create the slider environment;\r\n\t\tvar options = testOptions( originalOptions, target ),\r\n\t\t\tslider = closure( target, options );\r\n\r\n\t\t// Use the public value method to set the start values.\r\n\t\tslider.set(options.start);\r\n\r\n\t\ttarget.noUiSlider = slider;\r\n\t}\r\n\r\n\t// Use an object instead of a function for future expansibility;\r\n\treturn {\r\n\t\tcreate: initialize\r\n\t};\r\n\r\n}));","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n"],"sourceRoot":"/source/"}